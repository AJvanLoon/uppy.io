"use strict";(self.webpackChunkuppy_io=self.webpackChunkuppy_io||[]).push([[6626],{67171:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var r=i(85893),t=i(11151);const s={title:"Uppy 2.0.0: smaller, faster, modular plugins, Preact X, stricter types, and much more",date:new Date("2021-08-30T00:00:00.000Z"),authors:["aduh95","arturi","mifi","murderlon","renee","andrew"],image:"https://uppy.io/img/blog/2.0/uppy-2-0-cover.jpg",published:!0,slug:"2021/08/2.0"},o=void 0,a={permalink:"/blog/2021/08/2.0",editUrl:"https://github.com/transloadit/uppy.io/tree/main/blog/2021-08-2.0.md",source:"@site/blog/2021-08-2.0.md",title:"Uppy 2.0.0: smaller, faster, modular plugins, Preact X, stricter types, and much more",description:"Today, our tails are positively wagging with excitement about the release of",date:"2021-08-30T00:00:00.000Z",formattedDate:"August 30, 2021",tags:[],readingTime:8.85,hasTruncateMarker:!0,authors:[{email:"antoine@transloadit.com",name:"Antoine du Hamel",id:"aduh95",tagline:"Developer",imageURL:"https://github.com/aduh95.png",key:"aduh95"},{email:"artur@transloadit.com",name:"Artur Paikin",id:"artur",tagline:"Developer",imageURL:"https://github.com/arturi.png",key:"arturi"},{email:"mikael@transloadit.com",name:"Mikael Finstad",id:"mikael",tagline:"Developer",imageURL:"https://github.com/mifi.png",key:"mifi"},{email:"merlijn@transloadit.com",name:"Merlijn Vos",id:"merlijn",tagline:"Developer",imageURL:"https://github.com/murderlon.png",key:"murderlon"},{email:"github@kooi.me",name:"Ren\xe9e Kooi",id:"renee",tagline:"Developer",imageURL:"https://github.com/goto-bus-stop.png",key:"renee"},{email:"andrew@transloadit.com",name:"Andrew Kachnic",id:"andrew",tagline:"Developer",key:"andrew"}],frontMatter:{title:"Uppy 2.0.0: smaller, faster, modular plugins, Preact X, stricter types, and much more",date:"2021-08-30T00:00:00.000Z",authors:["aduh95","arturi","mifi","murderlon","renee","andrew"],image:"https://uppy.io/img/blog/2.0/uppy-2-0-cover.jpg",published:!0,slug:"2021/08/2.0"},unlisted:!1,prevItem:{title:"\ud83c\udf84 Uppy 2.1-2.3: Audio plugin, fast and efficient streaming for Companion, production-ready Unsplash, and more",permalink:"/blog/2021/12/2.1-2.3"},nextItem:{title:"Uppy 1.30: Angular integration, granular image rotation, Google Drive shortcuts",permalink:"/blog/2021/07/1.30"}},l={authorsImageUrls:[void 0,void 0,void 0,void 0,void 0,void 0]},d=[{value:"A pup no more",id:"a-pup-no-more",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Highlights since 1.0",id:"highlights-since-10",level:2},{value:"Smaller bundles",id:"smaller-bundles",level:2},{value:"Faster",id:"faster",level:2},{value:"Preact X and upgraded dependencies",id:"preact-x-and-upgraded-dependencies",level:2},{value:"<code>Plugin</code> is replaced with <code>BasePlugin</code> and <code>UIPlugin</code>",id:"plugin-is-replaced-with-baseplugin-and-uiplugin",level:2},{value:"Strict TypeScript types by default",id:"strict-typescript-types-by-default",level:2},{value:"Event types",id:"event-types",level:3},{value:"Batch pre-signing URLs for AWS S3 Multipart",id:"batch-pre-signing-urls-for-aws-s3-multipart",level:2},{value:"And more",id:"and-more",level:2},{value:"What future remains for 1.0?",id:"what-future-remains-for-10",level:2},{value:"That&#39;s it!",id:"thats-it",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",source:"source",strong:"strong",time:"time",ul:"ul",video:"video",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Today, our tails are positively wagging with excitement about the release of\nUppy 2.0! This latest version is on average 25% smaller and up to a thousand\ntimes faster, thanks to dropping support for IE11 and a lot of refactoring work.\nWe\u2019ve upgraded many dependencies, most notably Preact 8 to Preact X, greatly\nimproved TypeScript support and screen reader accessibility, paid technical\ndebt, and added support for multiple messages in the Informer plugin."}),"\n",(0,r.jsxs)(n.p,{children:["Chow down on all the juicy bits and pieces inside! And make sure to\n",(0,r.jsx)(n.a,{href:"https://uppy.io/examples/dashboard/",children:"try Uppy live demo"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Uppy 2.0 cover banner",src:i(98631).Z+"",width:"1200",height:"630"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Uppy is a sleek, modular JavaScript file uploader that integrates seamlessly\nwith any application. It is made for developers who want to provide their\nusers with the ability to see image previews, edit metadata, pick large files\ndirectly from Dropbox, restore selected files when a tab was accidentally\nclosed, or crop an image in-browser before sending."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"a-pup-no-more",children:"A pup no more"}),"\n",(0,r.jsxs)(n.p,{children:["Ever since the first introduction of Uppy\n",(0,r.jsx)(n.a,{href:"/blog/2016/07/uppy-begins/",children:"five years ago"})," (or 36 in\n",(0,r.jsx)(n.a,{href:"https://www.akc.org/expert-advice/health/how-to-calculate-dog-years-to-human-years/",children:"dog-years"}),"),\nwe\u2019ve always referred to our project as \u2018the next open source file uploader for\nweb browsers\u2019. The release of ",(0,r.jsx)(n.a,{href:"/blog/2019/04/1.0/",children:"Uppy 1.0"})," a little over two\nyears ago, however, soon led to a steep increase in adoption. Uppy now boasts\nover\n",(0,r.jsx)(n.a,{href:"https://github.com/transloadit/uppy/stargazers",children:"24,000 stargazers on GitHub"}),",\nmaking it the undisputed top dog in the world of file uploaders \ud83c\udf0d"]}),"\n",(0,r.jsx)(n.p,{children:"With that in mind, we felt it was high time to give Uppy some more much-needed\ntrimming. We want to take this opportunity to break with the past, to make the\nproject leaner \u2013 and to pave the way for an even brighter future for Uppy!"}),"\n",(0,r.jsx)(n.img,{className:"border",alt:"Uppy 2.0 UI with files",src:"/img/blog/2.0/uppy-ui-with-files.jpg"}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#Highlights-since-1-0",children:"Highlights since 1.0"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#Smaller-bundles",children:"Smaller bundles"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#Faster",children:"Faster"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#Preact-X-and-upgraded-dependencies",children:"Preact X and upgraded dependencies"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.a,{href:"#Plugin-is-replaced-with-BasePlugin-and-UIPlugin",children:[(0,r.jsx)(n.code,{children:"Plugin"})," is replaced with ",(0,r.jsx)(n.code,{children:"BasePlugin"})," and ",(0,r.jsx)(n.code,{children:"UIPlugin"})]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#Strict-TypeScript-types-by-default",children:"Strict TypeScript types by default"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#Batch-pre-signing-URLs-for-AWS-S3-Multipart",children:"Batch pre-signing URL's for AWS S3 Multipart"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#And-more",children:"And more"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#What-future-remains-for-1-0?",children:"What future remains for 1.0?"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#That%E2%80%99s-it",children:"That's it"})}),"\n"]}),"\n",(0,r.jsxs)(n.video,{alt:"Video demo showing updated Uppy 2.0 UI",muted:!0,autoPlay:!0,loop:!0,children:["\n  ",(0,r.jsx)(n.source,{src:"/images/uppy-2-0-demo-aug-2021.mp4",type:"video/mp4"}),"\n  Your browser does not support the video tag: https://uppy.io/images/uppy-2-0-demo-aug-2021.mp4\n"]}),"\n",(0,r.jsx)(n.h2,{id:"highlights-since-10",children:"Highlights since 1.0"}),"\n",(0,r.jsx)(n.p,{children:"A lot of things have happened since we released Uppy 1.0 in April of 2019. In\ncase you have missed some of our 1.x releases, here is a small overview. We have\nadded:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Official integrations for ",(0,r.jsx)(n.a,{href:"/blog/2020/11/1.23/",children:"Vue"}),"\n(",(0,r.jsx)(n.a,{href:"/blog/2021/04/1.27/",children:"3"}),"), ",(0,r.jsx)(n.a,{href:"/blog/2021/07/1.30/",children:"Angular"}),", and\n",(0,r.jsx)(n.a,{href:"/blog/2020/12/1.24/",children:"Svelte"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/blog/2020/12/1.24/",children:"Hooks"})," for the React integration"]}),"\n",(0,r.jsxs)(n.li,{children:["Support for picking files from ",(0,r.jsx)(n.a,{href:"/blog/2020/11/1.23/",children:"Box"}),",\n",(0,r.jsx)(n.a,{href:"/blog/2020/10/1.22/",children:"Unsplash"}),", ",(0,r.jsx)(n.a,{href:"/blog/2020/04/1.10/",children:"Facebook"}),", and\n",(0,r.jsx)(n.a,{href:"/blog/2020/04/1.10/",children:"OneDrive"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/blog/2021/05/1.29/",children:"\u201cGhost\u201d files"}),", as part of a revamped Golden Retriever\nplugin, which makes recovering lost files even more intuitive"]}),"\n",(0,r.jsxs)(n.li,{children:["Support for 25 more languages (bringing it to a total of\n",(0,r.jsx)(n.a,{href:"/docs/locales/#List-of-locale-packs",children:"37"}),")"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/blog/2020/04/1.13/",children:"Dark mode"})}),"\n",(0,r.jsxs)(n.li,{children:["an ",(0,r.jsx)(n.a,{href:"/blog/2020/07/1.18-image-editor/",children:"Image Editor"})]}),"\n",(0,r.jsxs)(n.li,{children:["And four new core team members: ",(0,r.jsx)(n.a,{href:"https://github.com/ajkachnic",children:"@ajkachnic"}),",\n",(0,r.jsx)(n.a,{href:"https://github.com/mifi",children:"@mifi"}),", ",(0,r.jsx)(n.a,{href:"https://github.com/aduh95",children:"@aduh95"}),", and\n",(0,r.jsx)(n.a,{href:"https://github.com/murderlon",children:"@murderlon"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"smaller-bundles",children:"Smaller bundles"}),"\n",(0,r.jsxs)(n.p,{children:["With 2.0, following in the footsteps of Microsoft, we are dropping support for\nIE11. As a result, we are able to remove all built-in polyfills, and the new\nbundle size is ",(0,r.jsx)(n.strong,{children:"25% smaller"}),"! If you want your app to still support older\nbrowsers (such as IE11), you may need to add the following polyfills to your\nbundle:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/mo/abortcontroller-polyfill",children:"abortcontroller-polyfill"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/zloirock/core-js",children:"core-js"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/mozdevs/mediaDevices-getUserMedia-polyfill",children:"md-gum-polyfill"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/que-etc/resize-observer-polyfill",children:"resize-observer-polyfill"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/github/fetch",children:"whatwg-fetch"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If you're using a bundler, you need import these before Uppy:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import 'core-js';\nimport 'whatwg-fetch';\nimport 'abortcontroller-polyfill/dist/polyfill-patch-fetch';\n// Order matters here: AbortController needs fetch, which needs Promise (provided by core-js).\n\nimport 'md-gum-polyfill';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nwindow.ResizeObserver ??= ResizeObserver;\n\nexport { default } from '@uppy/core';\nexport * from '@uppy/core';\n"})}),"\n",(0,r.jsx)(n.p,{children:"If you're using Uppy from a CDN, we now provide two bundles: one for up-to-date\nbrowsers that do not include polyfills and use modern syntax, and one for legacy\nbrowsers. When migrating, be mindful about the types of browsers you want to\nsupport:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'\x3c!-- Modern browsers (recommended) --\x3e\n<script src="https://releases.transloadit.com/uppy/v2.0.1/uppy.min.js"><\/script>\n\n\x3c!-- Legacy browsers (IE11+) --\x3e\n<script\n\tnomodule\n\tsrc="https://releases.transloadit.com/uppy/v2.0.1/uppy.legacy.min.js"\n><\/script>\n<script type="module">\n\timport \'https://releases.transloadit.com/uppy/v2.0.1/uppy.min.js\';\n<\/script>\n'})}),"\n",(0,r.jsx)(n.p,{children:"Please note that while you may be able to get 2.0 to work in IE11 this way, we\ndo not officially support it anymore."}),"\n",(0,r.jsx)(n.h2,{id:"faster",children:"Faster"}),"\n",(0,r.jsxs)(n.p,{children:["Uppy now loads faster thanks to the decreased bundle size. With Uppy 1.0, adding\nmany files (hundreds or even thousands) used to take dozens of seconds. Uppy 2.0\ndoes the same thing in mere milliseconds! So, at least for this specific use\ncase, we feel comfortable in claiming that you may see your loading times go\n",(0,r.jsx)(n.strong,{children:"up to a thousand times faster"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["This was made possible by avoiding having to re-render all the file components\nwhenever something changes, using ",(0,r.jsx)(n.code,{children:"memoize"})," and ",(0,r.jsx)(n.code,{children:"virtual-list"})," (allowing us to\nonly render what is actually visible on screen). In addition, multiple files are\nnow added to state in one go via ",(0,r.jsx)(n.code,{children:"uppy.addFiles(Array)"})," as opposed to before,\nwhen ",(0,r.jsx)(n.code,{children:"uppy.addFile(File)"})," + ",(0,r.jsx)(n.code,{children:"uppy.setState"})," were being called in a loop."]}),"\n",(0,r.jsx)(n.p,{children:"Before optimizations:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:i(82486).Z+"",width:"800",height:"438"})}),"\n",(0,r.jsx)(n.p,{children:"And after:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:i(58044).Z+"",width:"800",height:"438"})}),"\n",(0,r.jsx)(n.h2,{id:"preact-x-and-upgraded-dependencies",children:"Preact X and upgraded dependencies"}),"\n",(0,r.jsxs)(n.p,{children:["We\u2019ve upgraded almost all of Uppy\u2019s dependencies. This includes the migration to\nPreact X. All plugins that depend on Preact have been upgraded from ",(0,r.jsx)(n.code,{children:"8.2.9"})," to\nthe latest version ",(0,r.jsx)(n.code,{children:"10.5.13"}),". If you\u2019d like your custom plugin to continue\nworking with Uppy 2.0, it also needs to be using latest version of Preact."]}),"\n",(0,r.jsxs)(n.p,{children:["Other notable upgrades include browserify to ",(0,r.jsx)(n.code,{children:"v10"}),", typescript to ",(0,r.jsx)(n.code,{children:"v4.3"}),",\nautoprefixer to ",(0,r.jsx)(n.code,{children:"v10"}),", and lerna to ",(0,r.jsx)(n.code,{children:"v4"}),"."]}),"\n",(0,r.jsxs)(n.h2,{id:"plugin-is-replaced-with-baseplugin-and-uiplugin",children:[(0,r.jsx)(n.code,{children:"Plugin"})," is replaced with ",(0,r.jsx)(n.code,{children:"BasePlugin"})," and ",(0,r.jsx)(n.code,{children:"UIPlugin"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/uppy/",children:(0,r.jsx)(n.code,{children:"@uppy/core"})})," provided a ",(0,r.jsx)(n.code,{children:"Plugin"})," class for creating plugins. This was\nused for any official plugin, but also for users who want to create their own\ncustom plugin. However, ",(0,r.jsx)(n.code,{children:"Plugin"})," always came bundled with Preact, even if the\nplugin itself didn't add any UI elements."]}),"\n",(0,r.jsxs)(n.p,{children:["As of Uppy 2.0.0, ",(0,r.jsx)(n.code,{children:"Plugin"})," has been replaced with ",(0,r.jsx)(n.code,{children:"BasePlugin"})," and ",(0,r.jsx)(n.code,{children:"UIPlugin"}),".\n",(0,r.jsx)(n.code,{children:"BasePlugin"})," is the minimum you need to create a plugin and ",(0,r.jsx)(n.code,{children:"UIPlugin"})," adds\nPreact for rendering user interfaces."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," some bundlers will include ",(0,r.jsx)(n.code,{children:"UIPlugin"})," (and therefore Preact) if you\nimport from ",(0,r.jsx)(n.code,{children:"@uppy/core"}),". To make sure this does not happen, you can import\n",(0,r.jsx)(n.code,{children:"Uppy"})," and ",(0,r.jsx)(n.code,{children:"BasePlugin"})," directly:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import Uppy from '@uppy/core/lib/Uppy.js';\nimport BasePlugin from '@uppy/core/lib/BasePlugin.js';\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Interested in creating your own plugin? Check out the\n",(0,r.jsx)(n.a,{href:"/docs/writing-plugins",children:"\u201cwriting plugins\u201d"})," guide."]}),"\n",(0,r.jsx)(n.h2,{id:"strict-typescript-types-by-default",children:"Strict TypeScript types by default"}),"\n",(0,r.jsxs)(n.p,{children:["Uppy used to have loose types by default and strict types as an opt-in. The\ndefault export was a function that returned the ",(0,r.jsx)(n.code,{children:"Uppy"})," class, and the types came\nbundled with the default export (",(0,r.jsx)(n.code,{children:"Uppy.SomeType"}),")."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import Uppy from '@uppy/core';\nimport Tus from '@uppy/tus';\n\nconst uppy = Uppy<Uppy.StrictTypes>();\n\nuppy.use(Tus, {\n\tinvalidOption: null, // this will make the compilation fail!\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Uppy is now strictly typed by default and loose types have been removed. The\ndefault export is the ",(0,r.jsx)(n.code,{children:"Uppy"})," class and not a function. This means you need to\ncall ",(0,r.jsx)(n.code,{children:"Uppy"})," with the ",(0,r.jsx)(n.code,{children:"new"})," keyword when initializing it."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// ...\n\nconst uppy = new Uppy();\n\nuppy.use(Tus, {\n\tinvalidOption: null, // this will make the compilation fail!\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:"Uppy types are now individual exports and should be imported separately."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import type { PluginOptions, UIPlugin, PluginTarget } from '@uppy/core';\n"})}),"\n",(0,r.jsx)(n.h3,{id:"event-types",children:"Event types"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/uppy/",children:(0,r.jsx)(n.code,{children:"@uppy/core"})})," provides an ",(0,r.jsx)(n.a,{href:"/docs/uppy/#uppy-on-39-event-39-action",children:(0,r.jsx)(n.code,{children:".on"})}),"\nmethod to listen to ",(0,r.jsx)(n.a,{href:"/docs/uppy/#Events",children:"events"}),". The types for these events\nwere loose and allowed for invalid events to be passed, such as\n",(0,r.jsx)(n.code,{children:"uppy.on('upload-errrOOOoooOOOOOrrrr')"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Events have received a big update thanks to ",(0,r.jsx)(n.a,{href:"https://github.com/Hawxy",children:"@Hawxy"}),",\nmaking them more strict and accurate."]}),"\n",(0,r.jsx)(n.p,{children:"A breaking change was required to make this happen:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// Before:\n\ntype Meta = { myCustomMetadata: string };\n\n// Invalid event\nuppy.on<Meta>('upload-errrOOOoooOOOOOrrrr', () => {\n\t// ...\n});\n\n// After:\n\n// Normal event signature\nuppy.on('complete', (result) => {\n\tconst successResults = result.successful;\n});\n\n// Custom signature\ntype Meta = { myCustomMetadata: string };\n\n// Notice how the custom type has now become the second argument\nuppy.on<'complete', Meta>('complete', (result) => {\n\t// The passed type is now merged into the `meta` types.\n\tconst meta = result.successful[0].meta.myCustomMetadata;\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Plugins that add their own events can merge with existing ones in ",(0,r.jsx)(n.code,{children:"@uppy/core"}),"\nwith ",(0,r.jsx)(n.code,{children:"declare module '@uppy/core' { ... }"}),". This is a TypeScript pattern called\n",(0,r.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation",children:"module augmentation"}),".\nFor instance, when using ",(0,r.jsx)(n.a,{href:"/docs/dashboard/",children:(0,r.jsx)(n.code,{children:"@uppy/dashboard"})}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"uppy.on('dashboard:file-edit-start', (file) => {\n\tconst fileName = file.name;\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"batch-pre-signing-urls-for-aws-s3-multipart",children:"Batch pre-signing URLs for AWS S3 Multipart"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"/docs/aws-s3-multipart/",children:(0,r.jsx)(n.code,{children:"@uppy/aws-s3-multipart"})})," plugin can be used to upload\nfiles directly to an S3 bucket using S3\u2019s Multipart upload strategy. With this\nstrategy, files are chopped up in parts of 5MB+ each, so they can be uploaded\nconcurrently. It is also very reliable: if a single part fails to upload, only\nthat 5MB chunk has to be retried."]}),"\n",(0,r.jsx)(n.p,{children:"However, in Uppy 1.0, every part had to make the trip to the server to generate\na pre-signed URL. This meant that a 1GB file uploaded in 5MB chunks would\nrequire two hundred trips to the server."}),"\n",(0,r.jsx)(n.p,{children:"As of Uppy 2.0.0, we now pre-sign URLs in batches. That same 1GB file now only\ntakes fifty trips to the server (if the limit was four)."}),"\n",(0,r.jsxs)(n.p,{children:["This is now the new default. Thanks to\n",(0,r.jsx)(n.a,{href:"https://github.com/martin-brennan",children:"@martin-brennan"})," for this contribution!"]}),"\n",(0,r.jsxs)(n.p,{children:["Do you care about reliable uploads? You could also consider ",(0,r.jsx)(n.a,{href:"/docs/tus/",children:(0,r.jsx)(n.code,{children:"@uppy/tus"})}),"\nwith a self-hosted or Transloadit Tus server. Tus can resume uploads, supports\nsmaller chunks, and offers increased upload speeds."]}),"\n",(0,r.jsx)(n.h2,{id:"and-more",children:"And more"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:".run"})," method on the ",(0,r.jsx)(n.code,{children:"Uppy"})," instance has been removed. This method was\nalready obsolete and only logged a warning. As of this major version, it no\nlonger exists."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/informer/",children:(0,r.jsx)(n.code,{children:"@uppy/informer"})})," now supports showing multiple notifications at\nthe same time. The notifications themselves have also been improved."]}),"\n",(0,r.jsxs)(n.li,{children:["Improved screen reader accessibility for checkboxes and the 'remove file'\nbutton for ",(0,r.jsx)(n.a,{href:"/docs/dashboard/",children:(0,r.jsx)(n.code,{children:"@uppy/dashboard"})}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Sort files and folders alphabetically in the Google Drive provider."}),"\n",(0,r.jsx)(n.li,{children:"Polished our code base with improved eslint rules, private field methods, and\nother modern JavaScript features that help us write more intention-revealing\nand safe code."}),"\n",(0,r.jsxs)(n.li,{children:["To make Uppy more friendly towards new contributors, we have renamed our\n",(0,r.jsx)(n.code,{children:"master"})," branch to ",(0,r.jsx)(n.code,{children:"main"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"what-future-remains-for-10",children:"What future remains for 1.0?"}),"\n",(0,r.jsxs)(n.p,{children:["Uppy 1.0 will continue to receive bug fixes for three more months (until\n",(0,r.jsx)(n.time,{dateTime:"2021-12-01",children:"1 December 2021"}),"), security fixes for one more\nyear (until ",(0,r.jsx)(n.time,{dateTime:"2022-09-01",children:"1 September 2022"}),"), but no more\nnew features after today. Exceptions are unlikely, but ",(0,r.jsx)(n.em,{children:"can"})," be made \u2013 to\naccommodate those with commercial support contracts, for example."]}),"\n",(0,r.jsx)(n.h2,{id:"thats-it",children:"That's it!"}),"\n",(0,r.jsxs)(n.p,{children:["We hope you'll waste no time in taking Uppy 2.0 out for a walk. When you do,\nplease let us know what you thought of it on\n",(0,r.jsx)(n.a,{href:"https://www.reddit.com/r/javascript/comments/penbr7/uppy_file_uploader_20_smaller_and_faster_modular/",children:"Reddit"}),",\n",(0,r.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=28359287",children:"HN"}),", ProductHunt, or\n",(0,r.jsx)(n.a,{href:"https://twitter.com/uppy_io/status/1432399270846603264",children:"Twitter"}),". We're howling\nat the moon to hear from you!"]})]})}function p(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},98631:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/uppy-2-0-cover-1e95fd5e9bcdf0f841e1ceb04f3f4595.jpg"},58044:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/uppy-performance-after-f44f25665c7970c71d9c5c93c5009a6d.gif"},82486:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/uppy-performance-before-b2a473c8bdbee03af5ea1c6a13d781fc.gif"},11151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>o});var r=i(67294);const t={},s=r.createContext(t);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);