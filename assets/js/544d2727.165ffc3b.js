"use strict";(self.webpackChunkuppy_io=self.webpackChunkuppy_io||[]).push([[8190],{25103:(e,t,r)=>{r.d(t,{Z:()=>l});var n=r(67294),a=r(90814),s=r(23612),i=r(56482);const{version:o}=i;function l(e){let{children:t,uppyCssName:r="uppy.min.css",uppyJsName:i="uppy.min.js"}=e,l=[];n.Children.toArray(t).forEach((e=>{l=[...l,...String(e).trim().split("\n").map((e=>e.trim()))]}));const p=l.map((e=>`  ${e}`)).join("\n"),d=`https://releases.transloadit.com/uppy/v${o}/${i}`,u=`\x3c!-- 1. Add CSS to \`<head>\` --\x3e\n<link href="https://releases.transloadit.com/uppy/v${o}/${r}" rel="stylesheet">\n\n\x3c!-- 2. Initialize --\x3e\n<div id="uppy"></div>\n\n<script type="module">\n${p.replace(/{{UPPY_JS_URL}}/g,d)}\n<\/script>\n`;return n.createElement(n.Fragment,null,n.createElement(s.Z,{type:"caution"},n.createElement("p",null,"The bundle consists of most Uppy plugins, so this method is not recommended for production, as your users will have to download all plugins when you are likely using only a few."),n.createElement("p",null,"It can be useful to speed up your development environment, so don't hesitate to use it to get you started.")),n.createElement(a.Z,{language:"html"},u))}},17259:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>g,frontMatter:()=>l,metadata:()=>d,toc:()=>m});var n=r(87462),a=(r(67294),r(3905)),s=r(74866),i=r(85162),o=r(25103);const l={sidebar_position:5,slug:"/progress-bar"},p="Progress bar",d={unversionedId:"user-interfaces/elements/progress-bar",id:"user-interfaces/elements/progress-bar",title:"Progress bar",description:"@uppy/progress-bar is a minimalist plugin that shows the current upload",source:"@site/docs/user-interfaces/elements/progress-bar.mdx",sourceDirName:"user-interfaces/elements",slug:"/progress-bar",permalink:"/docs/progress-bar",draft:!1,editUrl:"https://github.com/transloadit/uppy.io/tree/main/docs/user-interfaces/elements/progress-bar.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,slug:"/progress-bar"},sidebar:"tutorialSidebar",previous:{title:"Status bar",permalink:"/docs/status-bar"},next:{title:"Webcam",permalink:"/docs/webcam"}},u={},m=[{value:"When should I use it?",id:"when-should-i-use-it",level:2},{value:"Install",id:"install",level:2},{value:"Use",id:"use",level:2},{value:"API",id:"api",level:2},{value:"Options",id:"options",level:3},{value:"<code>id</code>",id:"id",level:4},{value:"<code>target</code>",id:"target",level:4},{value:"<code>fixed</code>",id:"fixed",level:4},{value:"<code>hideAfterFinish</code>",id:"hideafterfinish",level:4}],h={toc:m},c="wrapper";function g(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"progress-bar"},"Progress bar"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"@uppy/progress-bar")," is a minimalist plugin that shows the current upload\nprogress in a thin bar element, like the ones used by YouTube and GitHub when\nnavigating between pages."),(0,a.kt)("h2",{id:"when-should-i-use-it"},"When should I use it?"),(0,a.kt)("p",null,"When you need a minimalistec progress indicator and you\u2019re\n",(0,a.kt)("a",{parentName:"p",href:"/docs/guides/building-your-own-ui-with-uppy"},"building your own UI"),". For most\ncases, ",(0,a.kt)("a",{parentName:"p",href:"/docs/dashboard"},"Dashboard")," or ",(0,a.kt)("a",{parentName:"p",href:"/docs/drag-drop"},"Drag & Drop")," (with\n",(0,a.kt)("a",{parentName:"p",href:"/docs/status-bar"},"Status Bar"),") is more likely what you need."),(0,a.kt)("h2",{id:"install"},"Install"),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"npm",label:"NPM",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @uppy/progress-bar\n"))),(0,a.kt)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add @uppy/progress-bar\n"))),(0,a.kt)(i.Z,{value:"cdn",label:"CDN",mdxType:"TabItem"},(0,a.kt)(o.Z,{mdxType:"UppyCdnExample"},"\n        import { Uppy, ProgressBar } from \"{{UPPY_JS_URL}}\"\n        const uppy = new Uppy()\n        uppy.use(ProgressBar, { target: '#progress-bar' })\n      "))),(0,a.kt)("h2",{id:"use"},"Use"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import Uppy from '@uppy/core';\nimport ProgressBar from '@uppy/progress-bar';\n\nimport '@uppy/core/dist/style.min.css';\nimport '@uppy/progress-bar/dist/style.min.css';\n\nnew Uppy().use(ProgressBar, { target: '#progress-bar' });\n")),(0,a.kt)("h2",{id:"api"},"API"),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("h4",{id:"id"},(0,a.kt)("inlineCode",{parentName:"h4"},"id")),(0,a.kt)("p",null,"A unique identifier for this Status Bar (",(0,a.kt)("inlineCode",{parentName:"p"},"string"),", default: ",(0,a.kt)("inlineCode",{parentName:"p"},"'ProgressBar'"),")."),(0,a.kt)("p",null,"Use this if you need to add several ProgressBar instances."),(0,a.kt)("h4",{id:"target"},(0,a.kt)("inlineCode",{parentName:"h4"},"target")),(0,a.kt)("p",null,"DOM element, CSS selector, or plugin to mount the Status Bar into (",(0,a.kt)("inlineCode",{parentName:"p"},"Element"),",\n",(0,a.kt)("inlineCode",{parentName:"p"},"string"),", default: ",(0,a.kt)("inlineCode",{parentName:"p"},"null"),")."),(0,a.kt)("h4",{id:"fixed"},(0,a.kt)("inlineCode",{parentName:"h4"},"fixed")),(0,a.kt)("p",null,"Show the progress bar at the top of the page with ",(0,a.kt)("inlineCode",{parentName:"p"},"position: fixed")," (",(0,a.kt)("inlineCode",{parentName:"p"},"boolean"),",\ndefault: ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,a.kt)("p",null,"When set to false, show the progress bar inline wherever it\u2019s mounted."),(0,a.kt)("h4",{id:"hideafterfinish"},(0,a.kt)("inlineCode",{parentName:"h4"},"hideAfterFinish")),(0,a.kt)("p",null,"Hides the progress bar after the upload has finished (",(0,a.kt)("inlineCode",{parentName:"p"},"boolean"),", default:\n",(0,a.kt)("inlineCode",{parentName:"p"},"true"),")."))}g.isMDXComponent=!0}}]);