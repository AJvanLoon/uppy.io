"use strict";(self.webpackChunkuppy_io=self.webpackChunkuppy_io||[]).push([[5857],{30433:(e,n,t)=>{t.d(n,{Z:()=>a});t(67294);var r=t(86010);const s={tabItem:"tabItem_Ymn6"};var o=t(85893);function a(e){let{children:n,hidden:t,className:a}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.Z)(s.tabItem,a),hidden:t,children:n})}},22808:(e,n,t)=>{t.d(n,{Z:()=>I});var r=t(67294),s=t(86010),o=t(63735),a=t(16550),i=t(20613),l=t(34423),u=t(20636),c=t(99200);function p(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:s}}=e;return{value:n,label:t,attributes:r,default:s}}))}(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const s=(0,a.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l._X)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(s.location.search);n.set(o,e),s.replace({...s.location,search:n.toString()})}),[o,s])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,o=d(e),[a,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[u,p]=m({queryString:t,groupId:s}),[f,y]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,o]=(0,c.Nk)(t);return[s,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:s}),b=(()=>{const e=u??f;return h({value:e,tabValues:o})?e:null})();(0,i.Z)((()=>{b&&l(b)}),[b]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),y(e)}),[p,y,o]),tabValues:o}}var y=t(5730);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(85893);function g(e){let{className:n,block:t,selectedValue:r,selectValue:a,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),s=i[t].value;s!==r&&(u(n),a(s))},p=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>l.push(e),onKeyDown:p,onClick:c,...o,className:(0,s.Z)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:s}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function v(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,s.Z)("tabs-container",b.tabList),children:[(0,x.jsx)(g,{...e,...n}),(0,x.jsx)(j,{...e,...n})]})}function I(e){const n=(0,y.Z)();return(0,x.jsx)(v,{...e,children:p(e.children)},String(n))}},91392:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>u,toc:()=>p});var r=t(85893),s=t(11151),o=t(22808),a=t(30433);const i={slug:"/react"},l="React",u={id:"framework-integrations/react",title:"React",description:"React components for the Uppy UI plugins.",source:"@site/docs/framework-integrations/react.mdx",sourceDirName:"framework-integrations",slug:"/react",permalink:"/docs/react",draft:!1,unlisted:!1,editUrl:"https://github.com/transloadit/uppy.io/tree/main/docs/framework-integrations/react.mdx",tags:[],version:"current",frontMatter:{slug:"/react"},sidebar:"tutorialSidebar",previous:{title:"Angular",permalink:"/docs/angular"},next:{title:"Svelte",permalink:"/docs/svelte"}},c={},p=[{value:"Install",id:"install",level:2},{value:"Use",id:"use",level:2},{value:"Frequently asked questions",id:"frequently-asked-questions",level:2},{value:"How do I update @uppy/core and plugins options dynamically?",id:"how-do-i-update-uppycore-and-plugins-options-dynamically",level:3},{value:"How do I render X amount of Uppy UI components?",id:"how-do-i-render-x-amount-of-uppy-ui-components",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"react",children:"React"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://facebook.github.io/react",children:"React"})," components for the Uppy UI plugins."]}),"\n",(0,r.jsx)(n.h2,{id:"install",children:"Install"}),"\n",(0,r.jsxs)(o.Z,{children:[(0,r.jsx)(a.Z,{value:"npm",label:"NPM",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"npm install @uppy/react\n"})})}),(0,r.jsx)(a.Z,{value:"yarn",label:"Yarn",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"yarn add @uppy/react\n"})})})]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["You also need to install the UI plugin you want to use. For instance,\n",(0,r.jsx)(n.code,{children:"@uppy/dashboard"}),"."]})}),"\n",(0,r.jsx)(n.h2,{id:"use",children:"Use"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"@uppy/react"})," exposes component wrappers for ",(0,r.jsx)(n.code,{children:"Dashboard"}),", ",(0,r.jsx)(n.code,{children:"DragDrop"}),", and all\nother UI elements. The components can be used with either ",(0,r.jsx)(n.a,{href:"https://facebook.github.io/react",children:"React"})," or\nAPI-compatible alternatives such as ",(0,r.jsx)(n.a,{href:"https://preactjs.com/",children:"Preact"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"The following plugins are available as React component wrappers:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<Dashboard />"})," renders ",(0,r.jsx)(n.a,{href:"/docs/dashboard",children:(0,r.jsx)(n.code,{children:"@uppy/dashboard"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<DragDrop />"})," renders ",(0,r.jsx)(n.a,{href:"/docs/drag-drop",children:(0,r.jsx)(n.code,{children:"@uppy/drag-drop"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<ProgressBar />"})," renders ",(0,r.jsx)(n.a,{href:"/docs/progress-bar",children:(0,r.jsx)(n.code,{children:"@uppy/progress-bar"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<StatusBar />"})," renders ",(0,r.jsx)(n.a,{href:"/docs/status-bar",children:(0,r.jsx)(n.code,{children:"@uppy/status-bar"})})]}),"\n"]}),"\n",(0,r.jsxs)(n.admonition,{type:"caution",children:[(0,r.jsx)(n.p,{children:"A couple things to keep in mind when using Uppy with React:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Instead of adding a UI plugin to an Uppy instance with ",(0,r.jsx)(n.code,{children:".use()"}),", the Uppy\ninstance can be passed into components as an ",(0,r.jsx)(n.code,{children:"uppy"})," prop."]}),"\n",(0,r.jsx)(n.li,{children:"All other props are passed as options to the plugin."}),"\n",(0,r.jsxs)(n.li,{children:["The Uppy instance ",(0,r.jsx)(n.strong,{children:"should not live inside the component"})," but outside of it\n(for class components, it should not be instantiated inside the ",(0,r.jsx)(n.code,{children:"render()"}),"\nmethod)."]}),"\n",(0,r.jsxs)(n.li,{children:["You have to pass the IDs of your ",(0,r.jsx)(n.code,{children:"use"}),"d plugins to the ",(0,r.jsx)(n.code,{children:"plugins"})," array prop so\nDashboard knows it needs to render them."]}),"\n",(0,r.jsx)(n.li,{children:"An Uppy instance can\u2019t be used by more than one component. Make sure you are\nusing a unique Uppy instance per component."}),"\n"]})]}),"\n",(0,r.jsx)(n.p,{children:"Here is a basic example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import React, { useEffect } from 'react';\nimport Uppy from '@uppy/core';\nimport Webcam from '@uppy/webcam';\nimport { Dashboard } from '@uppy/react';\n\n// Don't forget the CSS: core and the UI components + plugins you are using.\nimport '@uppy/core/dist/style.min.css';\nimport '@uppy/dashboard/dist/style.min.css';\nimport '@uppy/webcam/dist/style.min.css';\n\n// Don\u2019t forget to keep the Uppy instance outside of your component.\nconst uppy = new Uppy().use(Webcam);\n\nfunction Component() {\n\treturn <Dashboard uppy={uppy} plugins={['Webcam']} />;\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"frequently-asked-questions",children:"Frequently asked questions"}),"\n",(0,r.jsx)(n.h3,{id:"how-do-i-update-uppycore-and-plugins-options-dynamically",children:"How do I update @uppy/core and plugins options dynamically?"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// ...\n\n// Don\u2019t forget to keep the Uppy instance outside of your component.\nconst uppy = new Uppy().use(Webcam);\n\nfunction Component(props) {\n\tuseEffect(() => {\n\t\tuppy.setOptions({ restrictions: props.restrictions });\n\t}, [props.restrictions]);\n\n\tuseEffect(() => {\n\t\tuppy.getPlugin('Webcam').setOptions({ modes: props.webcamModes });\n\t}, [props.webcamModes]);\n\n\treturn <Dashboard uppy={uppy} plugins={['Webcam']} />;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"how-do-i-render-x-amount-of-uppy-ui-components",children:"How do I render X amount of Uppy UI components?"}),"\n",(0,r.jsxs)(n.p,{children:["You can dynamically render many Uppy UI\u2019s, such as ",(0,r.jsx)(n.code,{children:"@uppy/drag-drop"}),", and let\nevery UI upload under different conditions."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, a platform where you can upload pictures for a house per room, but\nthe number of rooms is dynamic and you want to handle every room differently in\nyour ",(0,r.jsx)(n.a,{href:"https://transloadit.com",children:"Transloadit"})," template"]}),"\n",(0,r.jsx)(n.p,{children:"Here is what that could look like."}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"This is the only exception for having Uppy inside the component."})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { useState, useEffect } from 'react';\nimport { Uppy } from '@uppy/core';\nimport { DragDrop, StatusBar } from '@uppy/react';\nimport Transloadit from '@uppy/transloadit';\n\nimport '@uppy/core/dist/style.min.css';\nimport '@uppy/drag-drop/dist/style.min.css';\nimport '@uppy/status-bar/dist/style.min.css';\n\nfunction createUppy(houseId, roomId) {\n\t// Adding to global `meta` will add it to every file.\n\t// Every Uppy instance needs a unique ID.\n\treturn new Uppy({ id: roomId, meta: { houseId, roomId } }).use(Transloadit, {\n\t\tassemblyOptions(file) {\n\t\t\treturn {\n\t\t\t\tparams: {\n\t\t\t\t\tauth: { key: 'TRANSLOADIT_AUTH_KEY_HERE' },\n\t\t\t\t\ttemplate_id: 'xyz',\n\t\t\t\t\t// Send the results of the assembly to your backend.\n\t\t\t\t\tnotify_url: 'https://your-domain.com/assembly-status',\n\t\t\t\t},\n\t\t\t\t// You can use these inside your template\n\t\t\t\t// https://transloadit.com/docs/topics/assembly-instructions/#form-fields-in-instructions\n\t\t\t\tfields: { roomId: file.meta.roomId, houseId: file.meta.houseId },\n\t\t\t};\n\t\t},\n\t});\n}\n\nexport default function Room(props) {\n\tconst { houseId, roomId } = props;\n\t// important: passing a initializer function to prevent the state from recreating.\n\tconst [uppy] = useState(() => createUppy(houseId, roomId));\n\n\tuseEffect(() => {\n\t\tif (houseId && roomId) {\n\t\t\tuppy.setOptions({ meta: { houseId, roomId } });\n\t\t}\n\t}, [uppy, houseId, roomId]);\n\n\treturn (\n\t\t<>\n\t\t\t<DragDrop uppy={uppy} />\n\t\t\t<StatusBar uppy={uppy} />\n\t\t</>\n\t);\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>a});var r=t(67294);const s={},o=r.createContext(s);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);