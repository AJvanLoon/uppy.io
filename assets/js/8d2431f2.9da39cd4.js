"use strict";(self.webpackChunkuppy_io=self.webpackChunkuppy_io||[]).push([[1008],{3068:(e,t,a)=>{a.d(t,{Z:()=>s});var n=a(7294),l=a(814),o=a(3612);const i=JSON.parse('{"name":"uppy-io","version":"0.0.0","private":true,"scripts":{"build":"docusaurus build","clear":"docusaurus clear","deploy":"docusaurus deploy","dev":"docusaurus start","lint:js":"eslint . --cache","lint:md":"run-s --continue-on-error remark:md remark:mdx","lint":"run-s --continue-on-error lint:js lint:md format:check-diff","prepare":"husky install","format:show-diff":"git diff --quiet || (echo \'Unable to show a diff because there are unstaged changes\'; false) && (prettier . -w --loglevel silent && git --no-pager diff; git restore .)","format:check":"prettier -c .","format:check-diff":"yarn format:check || (yarn format:show-diff && false)","format":"prettier -w .","remark:md":"remark . -qf","remark:mdx":"remark . -e mdx -u mdx -qf","serve":"docusaurus serve","swizzle":"docusaurus swizzle","typecheck":"tsc --noEmit","write-heading-ids":"docusaurus write-heading-ids","write-translations":"docusaurus write-translations"},"lint-staged":{"*.{js,jsx,ts,tsx}":["eslint --fix --cache","prettier --write"],"*.md":["remark -qf --","prettier --write"],"*.mdx":["remark -u mdx -qf --","prettier --write"],"*.{css,html,json,yml}":"prettier --write"},"browserslist":{"production":[">0.5%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]},"dependencies":{"@docusaurus/core":"^2.3.1","@docusaurus/plugin-client-redirects":"^2.3.1","@docusaurus/preset-classic":"^2.3.1","@mdx-js/react":"^1.6.22","@uppy/audio":"latest","@uppy/box":"latest","@uppy/core":"latest","@uppy/dashboard":"latest","@uppy/dropbox":"latest","@uppy/golden-retriever":"^3.0.2","@uppy/google-drive":"latest","@uppy/image-editor":"latest","@uppy/instagram":"latest","@uppy/locales":"latest","@uppy/onedrive":"latest","@uppy/react":"latest","@uppy/remote-sources":"latest","@uppy/screen-capture":"latest","@uppy/tus":"latest","@uppy/unsplash":"latest","@uppy/url":"latest","@uppy/webcam":"latest","clsx":"^1.1.1","prism-react-renderer":"^1.2.1","react":"^17.0.1","react-dom":"^17.0.1"},"devDependencies":{"@docusaurus/eslint-plugin":"^2.3.1","@docusaurus/module-type-aliases":"^2.3.1","@tsconfig/docusaurus":"^1.0.7","@typescript-eslint/eslint-plugin":"^5.48.1","@typescript-eslint/parser":"^5.48.1","eslint":"^8.19.0","eslint-config-prettier":"^8.5.0","eslint-plugin-markdown":"^3.0.0","eslint-plugin-mdx":"^2.0.4","husky":"^8.0.1","lint-staged":"^13.0.3","mdast-comment-marker":"^2.1.0","npm-run-all":"^4.1.5","prettier":"2.8.1","remark-cli":"^11.0.0","remark-directive":"^2.0.1","remark-frontmatter":"^4.0.0","remark-gfm":"^3.0.1","remark-lint":"^9.0.0","remark-lint-final-newline":"^2.0.0","remark-lint-hard-break-spaces":"^3.0.0","remark-lint-list-item-bullet-indent":"^4.0.0","remark-lint-list-item-indent":"^3.0.0","remark-lint-no-blockquote-without-marker":"^5.0.0","remark-lint-no-duplicate-definitions":"^3.0.0","remark-lint-no-heading-content-indent":"^4.0.0","remark-lint-no-inline-padding":"^4.0.0","remark-lint-no-literal-urls":"^3.0.0","remark-lint-no-shortcut-reference-image":"^3.0.0","remark-lint-no-shortcut-reference-link":"^3.0.0","remark-lint-no-undefined-references":"^4.0.0","remark-lint-no-unused-definitions":"^3.0.0","remark-lint-ordered-list-marker-style":"^3.0.0","remark-mdx":"^2.1.2","remark-preset-lint-consistent":"^5.1.1","remark-preset-lint-markdown-style-guide":"^5.1.2","remark-preset-prettier":"^2.0.1","remark-retext":"^5.0.0","retext-english":"^4.0.0","retext-equality":"^6.2.0","retext-profanities":"^7.1.0","retext-quotes":"^5.0.0","retext-simplify":"^7.0.0","retext-syntax-mentions":"^3.1.0","typescript":"^4.6.2","unified":"^10.0.0","unified-message-control":"^4.0.0"},"packageManager":"yarn@3.3.1+sha224.1c866bd0fca5cf439c5b6a019f1653906d5e7ea807b01a9c7b18adab"}'),{version:r}=i;function s(e){let{children:t,uppyCssName:a="uppy.min.css",uppyJsName:i="uppy.min.js"}=e,s=[];n.Children.toArray(t).forEach((e=>{s=[...s,...String(e).trim().split("\n").map((e=>e.trim()))]}));const d=s.map((e=>`  ${e}`)).join("\n"),p=`https://releases.transloadit.com/uppy/v${r}/${i}`,u=`\x3c!-- 1. Add CSS to \`<head>\` --\x3e\n<link href="https://releases.transloadit.com/uppy/v${r}/${a}" rel="stylesheet">\n\n\x3c!-- 2. Initialize --\x3e\n<div id="uppy"></div>\n\n<script type="module">\n${d.replace(/{{UPPY_JS_URL}}/g,p)}\n<\/script>\n`;return n.createElement(n.Fragment,null,n.createElement(o.Z,{type:"caution"},n.createElement("p",null,"The bundle consists of most Uppy plugins, so this method is not recommended for production, as your users will have to download all plugins when you are likely using only a few."),n.createElement("p",null,"It can be useful to speed up your development environment, so don't hesitate to use it to get you started.")),n.createElement(l.Z,{language:"html"},u))}},9713:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>k,frontMatter:()=>s,metadata:()=>p,toc:()=>m});var n=a(7462),l=(a(7294),a(3905)),o=a(4866),i=a(5162),r=a(3068);const s={sidebar_position:1,slug:"/dashboard"},d="Dashboard",p={unversionedId:"user-interfaces/dashboard",id:"user-interfaces/dashboard",title:"Dashboard",description:"The all you need Dashboard \u2014 powerful, responsive, and pluggable. Kickstart your",source:"@site/docs/user-interfaces/dashboard.mdx",sourceDirName:"user-interfaces",slug:"/dashboard",permalink:"/docs/dashboard",draft:!1,editUrl:"https://github.com/transloadit/uppy.io/tree/main/docs/user-interfaces/dashboard.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:"/dashboard"},sidebar:"tutorialSidebar",previous:{title:"Companion",permalink:"/docs/companion"},next:{title:"Drag & Drop",permalink:"/docs/drag-drop"}},u={},m=[{value:"When should I use this?",id:"when-should-i-use-this",level:2},{value:"Install",id:"install",level:2},{value:"Use",id:"use",level:2},{value:"API",id:"api",level:2},{value:"Options",id:"options",level:3},{value:"<code>id</code>",id:"id",level:4},{value:"<code>target</code>",id:"target",level:4},{value:"<code>inline</code>",id:"inline",level:4},{value:"<code>trigger</code>",id:"trigger",level:4},{value:"<code>width</code>",id:"width",level:4},{value:"<code>height</code>",id:"height",level:4},{value:"<code>waitForThumbnailsBeforeUpload</code>",id:"waitforthumbnailsbeforeupload",level:4},{value:"<code>showLinkToFileUploadResult</code>",id:"showlinktofileuploadresult",level:4},{value:"<code>showProgressDetails</code>",id:"showprogressdetails",level:4},{value:"<code>hideUploadButton</code>",id:"hideuploadbutton",level:4},{value:"<code>hideRetryButton</code>",id:"hideretrybutton",level:4},{value:"<code>hidePauseResumeButton</code>",id:"hidepauseresumebutton",level:4},{value:"<code>hideCancelButton</code>",id:"hidecancelbutton",level:4},{value:"<code>hideProgressAfterFinish</code>",id:"hideprogressafterfinish",level:4},{value:"<code>doneButtonHandler()</code>",id:"donebuttonhandler",level:4},{value:"<code>showSelectedFiles</code>",id:"showselectedfiles",level:4},{value:"<code>showRemoveButtonAfterComplete</code>",id:"showremovebuttonaftercomplete",level:4},{value:"<code>note</code>",id:"note",level:4},{value:"<code>metaFields</code>",id:"metafields",level:4},{value:"<code>closeModalOnClickOutside</code>",id:"closemodalonclickoutside",level:4},{value:"<code>closeAfterFinish</code>",id:"closeafterfinish",level:4},{value:"<code>disablePageScrollWhenModalOpen</code>",id:"disablepagescrollwhenmodalopen",level:4},{value:"<code>animateOpenClose</code>",id:"animateopenclose",level:4},{value:"<code>fileManagerSelectionType</code>",id:"filemanagerselectiontype",level:4},{value:"<code>proudlyDisplayPoweredByUppy</code>",id:"proudlydisplaypoweredbyuppy",level:4},{value:"<code>disableStatusBar</code>",id:"disablestatusbar",level:4},{value:"<code>disableInformer: false</code>",id:"disableinformer-false",level:4},{value:"<code>disableThumbnailGenerator</code>",id:"disablethumbnailgenerator",level:4},{value:"<code>locale</code>",id:"locale",level:4},{value:"<code>theme</code>",id:"theme",level:4},{value:"<code>autoOpenFileEditor</code>",id:"autoopenfileeditor",level:4},{value:"<code>disabled</code>",id:"disabled",level:4},{value:"<code>disableLocalFiles</code>",id:"disablelocalfiles",level:4},{value:"<code>onDragOver(event)</code>",id:"ondragoverevent",level:4},{value:"<code>onDrop(event)</code>",id:"ondropevent",level:4},{value:"<code>onDragLeave(event)</code>",id:"ondragleaveevent",level:4},{value:"Methods",id:"methods",level:3},{value:"<code>openModal()</code>",id:"openmodal",level:4},{value:"<code>closeModal()</code>",id:"closemodal",level:4},{value:"<code>isModalOpen()</code>",id:"ismodalopen",level:4},{value:"Events",id:"events",level:3},{value:"<code>dashboard:modal-open</code>",id:"dashboardmodal-open",level:4},{value:"<code>dashboard:modal-closed</code>",id:"dashboardmodal-closed",level:4},{value:"<code>dashboard:file-edit-start</code>",id:"dashboardfile-edit-start",level:4},{value:"<code>dashboard:file-edit-complete</code>",id:"dashboardfile-edit-complete",level:4},{value:"Integrations",id:"integrations",level:2},{value:"Sources",id:"sources",level:3},{value:"UI",id:"ui",level:3},{value:"Frameworks",id:"frameworks",level:3}],h={toc:m},c="wrapper";function k(e){let{components:t,...a}=e;return(0,l.kt)(c,(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"dashboard"},"Dashboard"),(0,l.kt)("p",null,"The all you need Dashboard \u2014 powerful, responsive, and pluggable. Kickstart your\nuploading experience and gradually add more functionality. Add files from\n",(0,l.kt)("a",{parentName:"p",href:"/docs/companion"},"remote sources"),", ",(0,l.kt)("a",{parentName:"p",href:"/docs/image-editor"},"edit images"),",\n",(0,l.kt)("a",{parentName:"p",href:"/docs/thumbnail-generator"},"generate thumbnails"),", and more."),(0,l.kt)("p",null,"Checkout ",(0,l.kt)("a",{parentName:"p",href:"#integrations"},"integrations")," for the full list of plugins you can\nintegrate."),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("a",{parentName:"p",href:"/examples"},"Try out the live example with all plugins")," or take it for a spin in\n",(0,l.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/uppy-dashboard-xpxuhd"},"CodeSandbox"),".")),(0,l.kt)("h2",{id:"when-should-i-use-this"},"When should I use this?"),(0,l.kt)("p",null,"There could be many reasons why you may want to use the Dashboard, but some\ncould be:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"when you need a battle tested plug-and-play uploading UI to save time."),(0,l.kt)("li",{parentName:"ul"},"when your users need to add files from ",(0,l.kt)("a",{parentName:"li",href:"/docs/companion"},"remote sources"),", such\n",(0,l.kt)("a",{parentName:"li",href:"/docs/google-drive"},"Google Drive"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/dropbox"},"Dropbox"),", and others."),(0,l.kt)("li",{parentName:"ul"},"when you need to collect ",(0,l.kt)("a",{parentName:"li",href:"#metafields"},"meta data")," from your users per file."),(0,l.kt)("li",{parentName:"ul"},"when your users want to take a picture with their ",(0,l.kt)("a",{parentName:"li",href:"/docs/webcam"},"webcam")," or\n",(0,l.kt)("a",{parentName:"li",href:"/docs/screen-capture"},"capture their screen"),".")),(0,l.kt)("h2",{id:"install"},"Install"),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"npm",label:"NPM",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @uppy/core @uppy/dashboard\n"))),(0,l.kt)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add @uppy/core @uppy/dashboard\n"))),(0,l.kt)(i.Z,{value:"cdn",label:"CDN",mdxType:"TabItem"},(0,l.kt)(r.Z,{mdxType:"UppyCdnExample"},"\n        import { Uppy, Dashboard } from \"{{UPPY_JS_URL}}\"\n        const uppy = new Uppy()\n        uppy.use(Dashboard, { target: '#uppy', inline: true })\n      "))),(0,l.kt)("h2",{id:"use"},"Use"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:"showLineNumbers",showLineNumbers:!0},"import Uppy from '@uppy/core';\nimport Dashboard from '@uppy/dashboard';\n\nimport '@uppy/core/dist/style.min.css';\nimport '@uppy/dashboard/dist/style.min.css';\n\nnew Uppy().use(Dashboard, { inline: true, target: '#uppy-dashboard' });\n")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"The ",(0,l.kt)("inlineCode",{parentName:"p"},"@uppy/dashboard")," plugin includes CSS for the Dashboard itself, and the\nvarious plugins used by the Dashboard, such as\n(",(0,l.kt)("a",{parentName:"p",href:"/docs/status-bar"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/status-bar"))," and ",(0,l.kt)("a",{parentName:"p",href:"/docs/informer"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/informer")),").\nIf you also use the ",(0,l.kt)("inlineCode",{parentName:"p"},"@uppy/status-bar")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"@uppy/informer")," plugin directly, you\nshould not include their CSS files, but instead only use the one from the\n",(0,l.kt)("inlineCode",{parentName:"p"},"@uppy/dashboard")," plugin.")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Styles for Provider plugins, like Google Drive and Instagram, are also bundled\nwith Dashboard styles. Styles for other plugins, such as ",(0,l.kt)("inlineCode",{parentName:"p"},"@uppy/url")," and\n",(0,l.kt)("inlineCode",{parentName:"p"},"@uppy/webcam"),", are not included. If you are using those, please see their docs\nand make sure to include styles for them as well.")),(0,l.kt)("h2",{id:"api"},"API"),(0,l.kt)("h3",{id:"options"},"Options"),(0,l.kt)("h4",{id:"id"},(0,l.kt)("inlineCode",{parentName:"h4"},"id")),(0,l.kt)("p",null,"A unique identifier for this plugin (",(0,l.kt)("inlineCode",{parentName:"p"},"string"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"'Dashboard'"),")."),(0,l.kt)("p",null,"Plugins that are added by the Dashboard get unique IDs based on this ID, like\n",(0,l.kt)("inlineCode",{parentName:"p"},"'Dashboard:StatusBar'")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"'Dashboard:Informer'"),"."),(0,l.kt)("h4",{id:"target"},(0,l.kt)("inlineCode",{parentName:"h4"},"target")),(0,l.kt)("p",null,"Where to render the Dashboard (",(0,l.kt)("inlineCode",{parentName:"p"},"string")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"Element"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"'body'"),")."),(0,l.kt)("p",null,"You can pass an element, class, or id as a string. Dashboard is rendered into\n",(0,l.kt)("inlineCode",{parentName:"p"},"body"),", because it\u2019s hidden by default and only opened as a modal when ",(0,l.kt)("inlineCode",{parentName:"p"},"trigger"),"\nis clicked."),(0,l.kt)("h4",{id:"inline"},(0,l.kt)("inlineCode",{parentName:"h4"},"inline")),(0,l.kt)("p",null,"Render the Dashboard as a modal or inline (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("p",null,"When ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),", Dashboard is opened by clicking on ",(0,l.kt)("a",{parentName:"p",href:"#trigger"},(0,l.kt)("inlineCode",{parentName:"a"},"trigger")),". If\n",(0,l.kt)("inlineCode",{parentName:"p"},"inline: true"),", Dashboard will be rendered into ",(0,l.kt)("a",{parentName:"p",href:"#target"},(0,l.kt)("inlineCode",{parentName:"a"},"target"))," and fit\nright in."),(0,l.kt)("h4",{id:"trigger"},(0,l.kt)("inlineCode",{parentName:"h4"},"trigger")),(0,l.kt)("p",null,"A CSS selector for a button that will trigger opening the Dashboard modal\n(",(0,l.kt)("inlineCode",{parentName:"p"},"string"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),")."),(0,l.kt)("p",null,"Several buttons or links can be used, as long as they are selected using the\nsame selector (",(0,l.kt)("inlineCode",{parentName:"p"},".select-file-button"),", for example)."),(0,l.kt)("h4",{id:"width"},(0,l.kt)("inlineCode",{parentName:"h4"},"width")),(0,l.kt)("p",null,"Width of the Dashboard in pixels (",(0,l.kt)("inlineCode",{parentName:"p"},"number"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"750"),"). Used when\n",(0,l.kt)("inlineCode",{parentName:"p"},"inline: true"),"."),(0,l.kt)("h4",{id:"height"},(0,l.kt)("inlineCode",{parentName:"h4"},"height")),(0,l.kt)("p",null,"Height of the Dashboard in pixels (",(0,l.kt)("inlineCode",{parentName:"p"},"number"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"550"),"). Used when\n",(0,l.kt)("inlineCode",{parentName:"p"},"inline: true"),"."),(0,l.kt)("h4",{id:"waitforthumbnailsbeforeupload"},(0,l.kt)("inlineCode",{parentName:"h4"},"waitForThumbnailsBeforeUpload")),(0,l.kt)("p",null,"Whether to wait for all thumbnails from ",(0,l.kt)("inlineCode",{parentName:"p"},"@uppy/thumbnail-generator")," to be ready\nbefore starting the upload (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("p",null,"If set to ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", Thumbnail Generator will envoke Uppy\u2019s internal processing\nstage, displaying \u201cGenerating thumbnails...\u201d message, and wait for\n",(0,l.kt)("inlineCode",{parentName:"p"},"thumbnail:all-generated")," event, before proceeding to the uploading stage."),(0,l.kt)("p",null,"This is useful because Thumbnail Generator also adds EXIF data to images, and if\nwe wait until it\u2019s done processing, this data will be avilable on the server\nafter the upload."),(0,l.kt)("h4",{id:"showlinktofileuploadresult"},(0,l.kt)("inlineCode",{parentName:"h4"},"showLinkToFileUploadResult")),(0,l.kt)("p",null,"Turn the file icon and thumbnail in the Dashboard into a link to the uploaded\nfile (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("p",null,"Please make sure to return the ",(0,l.kt)("inlineCode",{parentName:"p"},"url")," key (or the one set via\n",(0,l.kt)("inlineCode",{parentName:"p"},"responseUrlFieldName"),") from your server."),(0,l.kt)("h4",{id:"showprogressdetails"},(0,l.kt)("inlineCode",{parentName:"h4"},"showProgressDetails")),(0,l.kt)("p",null,"Show or hise progress details in the status bar (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("p",null,"By default, progress in Status Bar is shown as a percentage. If you would like\nto also display remaining upload size and time, set this to ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"showProgressDetails: false"),": Uploading: 45%"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"showProgressDetails: true"),": Uploading: 45%\u30fb43 MB of 101 MB\u30fb8s left"),(0,l.kt)("h4",{id:"hideuploadbutton"},(0,l.kt)("inlineCode",{parentName:"h4"},"hideUploadButton")),(0,l.kt)("p",null,"Show or hide the upload button (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("p",null,"Use this if you are providing a custom upload button somewhere, and are using\nthe ",(0,l.kt)("inlineCode",{parentName:"p"},"uppy.upload()")," API."),(0,l.kt)("h4",{id:"hideretrybutton"},(0,l.kt)("inlineCode",{parentName:"h4"},"hideRetryButton")),(0,l.kt)("p",null,"Hide the retry button in the status bar and on each individual file (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),",\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("p",null,"Use this if you are providing a custom retry button somewhere and if you are\nusing the ",(0,l.kt)("inlineCode",{parentName:"p"},"uppy.retryAll()")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"uppy.retryUpload(fileID)")," API."),(0,l.kt)("h4",{id:"hidepauseresumebutton"},(0,l.kt)("inlineCode",{parentName:"h4"},"hidePauseResumeButton")),(0,l.kt)("p",null,"Hide the pause/resume button (for resumable uploads, via ",(0,l.kt)("a",{parentName:"p",href:"http://tus.io"},"tus"),",\nfor example) in the status bar and on each individual file (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default:\n",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("p",null,"Use this if you are providing custom cancel or pause/resume buttons somewhere,\nand using the ",(0,l.kt)("inlineCode",{parentName:"p"},"uppy.pauseResume(fileID)")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"uppy.removeFile(fileID)")," API."),(0,l.kt)("h4",{id:"hidecancelbutton"},(0,l.kt)("inlineCode",{parentName:"h4"},"hideCancelButton")),(0,l.kt)("p",null,"Hide the cancel button in status bar and on each individual file (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),",\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("p",null,"Use this if you are providing a custom retry button somewhere, and using the\n",(0,l.kt)("inlineCode",{parentName:"p"},"uppy.cancelAll()")," API."),(0,l.kt)("h4",{id:"hideprogressafterfinish"},(0,l.kt)("inlineCode",{parentName:"h4"},"hideProgressAfterFinish")),(0,l.kt)("p",null,"Hide the status bar after the upload has finished (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("h4",{id:"donebuttonhandler"},(0,l.kt)("inlineCode",{parentName:"h4"},"doneButtonHandler()")),(0,l.kt)("p",null,"This option is passed to the status bar and will render a \u201cDone\u201d button in place\nof pause/resume/cancel buttons, once the upload/encoding is done. The behaviour\nof this \u201cDone\u201d button is defined by this handler function, for instance to close\nthe file picker modals or clear the upload state."),(0,l.kt)("p",null,"This is what the Dashboard sets by default:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const doneButtonHandler = () => {\n    this.uppy.reset();\n    this.requestCloseModal();\n};\n")),(0,l.kt)("p",null,"Set to ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," to disable the \u201cDone\u201d button."),(0,l.kt)("h4",{id:"showselectedfiles"},(0,l.kt)("inlineCode",{parentName:"h4"},"showSelectedFiles")),(0,l.kt)("p",null,"Show the list of added files with a preview and file information (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),",\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),")."),(0,l.kt)("p",null,"In case you are showing selected files in your own app\u2019s UI and want the Uppy\nDashboard to only be a picker, the list can be hidden with this option."),(0,l.kt)("p",null,"See also ",(0,l.kt)("a",{parentName:"p",href:"#disablestatusbar"},(0,l.kt)("inlineCode",{parentName:"a"},"disableStatusBar"))," option, which can hide the\nprogress and upload button."),(0,l.kt)("h4",{id:"showremovebuttonaftercomplete"},(0,l.kt)("inlineCode",{parentName:"h4"},"showRemoveButtonAfterComplete")),(0,l.kt)("p",null,"Show the remove button on every file after a successful upload (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),",\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("p",null,"Enabling this option only shows the remove ",(0,l.kt)("inlineCode",{parentName:"p"},"X")," button in the Dashboard UI, but\nto actually send a request you should listen to\n",(0,l.kt)("a",{parentName:"p",href:"https://uppy.io/docs/uppy/#file-removed"},(0,l.kt)("inlineCode",{parentName:"a"},"file-removed"))," event and add your\nlogic there."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"uppy.on('file-removed', (file, reason) => {\n    if (reason === 'removed-by-user') {\n        sendDeleteRequestForFile(file);\n    }\n});\n")),(0,l.kt)("p",null,"For an implementation example, please see\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/transloadit/uppy/issues/2301#issue-628931176"},"#2301"),"."),(0,l.kt)("h4",{id:"note"},(0,l.kt)("inlineCode",{parentName:"h4"},"note")),(0,l.kt)("p",null,"A string of text to be placed in the Dashboard UI (",(0,l.kt)("inlineCode",{parentName:"p"},"string"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),")."),(0,l.kt)("p",null,"This could for instance be used to explain any ",(0,l.kt)("a",{parentName:"p",href:"#restrictions"},(0,l.kt)("inlineCode",{parentName:"a"},"restrictions")),"\nthat are put in place. For example:\n",(0,l.kt)("inlineCode",{parentName:"p"},"'Images and video only, 2\u20133 files, up to 1 MB'"),"."),(0,l.kt)("h4",{id:"metafields"},(0,l.kt)("inlineCode",{parentName:"h4"},"metaFields")),(0,l.kt)("p",null,"Create text or custom input fields for the user to fill in (",(0,l.kt)("inlineCode",{parentName:"p"},"Array<Object>")," or\n",(0,l.kt)("inlineCode",{parentName:"p"},"Function"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),")."),(0,l.kt)("p",null,"This will be shown when a user clicks the \u201cedit\u201d button on that file."),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"The meta data will only be set on a file object if it\u2019s entered by the user. If\nthe user doesn\u2019t edit a file\u2019s metadata, it will not have default values;\ninstead everything will be ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined"),". If you want to set a certain meta field\nto each file regardless of user actions, set\n",(0,l.kt)("a",{parentName:"p",href:"/docs/uppy/#meta"},(0,l.kt)("inlineCode",{parentName:"a"},"meta")," in the Uppy constructor options"),".")),(0,l.kt)("p",null,"Each object can contain:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"id"),". The name of the meta field. This will also be used in CSS/HTML as part\nof the ",(0,l.kt)("inlineCode",{parentName:"li"},"id")," attribute, so it\u2019s better to\n",(0,l.kt)("a",{parentName:"li",href:"https://stackoverflow.com/a/79022"},"avoid using characters like periods, semicolons, etc"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name"),". The label shown in the interface."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"placeholder"),". The text shown when no value is set in the field. (Not needed\nwhen a custom render function is provided)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"render: ({value, onChange, required, form}, h) => void")," (optional). A\nfunction for rendering a custom form element.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," is the current value of the meta field"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"onChange: (newVal) => void")," is a function saving the new value and ",(0,l.kt)("inlineCode",{parentName:"li"},"h")," is\nthe ",(0,l.kt)("inlineCode",{parentName:"li"},"createElement")," function from\n",(0,l.kt)("a",{parentName:"li",href:"https://preactjs.com/guide/v10/api-reference#h--createelement"},"Preact"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"required")," is a boolean that\u2019s true if the field ",(0,l.kt)("inlineCode",{parentName:"li"},"id")," is in the\n",(0,l.kt)("inlineCode",{parentName:"li"},"restrictedMetaFields")," restriction"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"form")," is the ",(0,l.kt)("inlineCode",{parentName:"li"},"id")," of the associated ",(0,l.kt)("inlineCode",{parentName:"li"},"<form>")," element."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"h")," can be useful when using Uppy from plain JavaScript, where you cannot\nwrite JSX.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Example: meta fields configured as an `Array`"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"uppy.use(Dashboard, {\n    trigger: '#pick-files',\n    metaFields: [\n        { id: 'name', name: 'Name', placeholder: 'file name' },\n        { id: 'license', name: 'License', placeholder: 'specify license' },\n        {\n            id: 'caption',\n            name: 'Caption',\n            placeholder: 'describe what the image is about',\n        },\n        {\n            id: 'public',\n            name: 'Public',\n            render({ value, onChange, required, form }, h) {\n                return h('input', {\n                    type: 'checkbox',\n                    required,\n                    form,\n                    onChange: (ev) => onChange(ev.target.checked ? 'on' : ''),\n                    defaultChecked: value === 'on',\n                });\n            },\n        },\n    ],\n});\n"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Example: dynamic meta fields based on file type with a `Function`"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"uppy.use(Dashboard, {\n    trigger: '#pick-files',\n    metaFields: (file) => {\n        const fields = [{ id: 'name', name: 'File name' }];\n        if (file.type.startsWith('image/')) {\n            fields.push({ id: 'location', name: 'Photo Location' });\n            fields.push({ id: 'alt', name: 'Alt text' });\n            fields.push({\n                id: 'public',\n                name: 'Public',\n                render: ({ value, onChange, required, form }, h) => {\n                    return h('input', {\n                        type: 'checkbox',\n                        onChange: (ev) => onChange(ev.target.checked ? 'on' : ''),\n                        defaultChecked: value === 'on',\n                        required,\n                        form,\n                    });\n                },\n            });\n        }\n        return fields;\n    },\n});\n"))),(0,l.kt)("h4",{id:"closemodalonclickoutside"},(0,l.kt)("inlineCode",{parentName:"h4"},"closeModalOnClickOutside")),(0,l.kt)("p",null,"Set to true to automatically close the modal when the user clicks outside of it\n(",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("h4",{id:"closeafterfinish"},(0,l.kt)("inlineCode",{parentName:"h4"},"closeAfterFinish")),(0,l.kt)("p",null,"Set to true to automatically close the modal when all current uploads are\ncomplete (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("p",null,"With this option, the modal is only automatically closed when uploads are\ncomplete ",(0,l.kt)("em",{parentName:"p"},"and successful"),". If some uploads failed, the modal stays open so the\nuser can retry failed uploads or cancel the current batch and upload an entirely\ndifferent set of files instead."),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"You can use this together with the\n",(0,l.kt)("a",{parentName:"p",href:"/docs/uppy/#allowmultipleuploads"},(0,l.kt)("inlineCode",{parentName:"a"},"allowMultipleUploads: false"))," option in Uppy\nCore to create a smooth experience when uploading a single (batch of) file(s)."),(0,l.kt)("p",{parentName:"admonition"},"This is recommended. With several upload batches, the auto-closing behavior can\nbe quite confusing for users.")),(0,l.kt)("h4",{id:"disablepagescrollwhenmodalopen"},(0,l.kt)("inlineCode",{parentName:"h4"},"disablePageScrollWhenModalOpen")),(0,l.kt)("p",null,"Disable page scroll when the modal is open (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),")."),(0,l.kt)("p",null,"Page scrolling is disabled by default when the Dashboard modal is open, so when\nyou scroll a list of files in Uppy, the website in the background stays still.\nSet to false to override this behaviour and leave page scrolling intact."),(0,l.kt)("h4",{id:"animateopenclose"},(0,l.kt)("inlineCode",{parentName:"h4"},"animateOpenClose")),(0,l.kt)("p",null,"Add animations when the modal dialog is opened or closed, for a more satisfying\nuser experience (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),")."),(0,l.kt)("h4",{id:"filemanagerselectiontype"},(0,l.kt)("inlineCode",{parentName:"h4"},"fileManagerSelectionType")),(0,l.kt)("p",null,"Configure the type of selections allowed when browsing your file system via the\nfile manager selection window (",(0,l.kt)("inlineCode",{parentName:"p"},"string"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"'files'"),")."),(0,l.kt)("p",null,"May be either ",(0,l.kt)("inlineCode",{parentName:"p"},"'files'"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"'folders'"),", or ",(0,l.kt)("inlineCode",{parentName:"p"},"'both'"),". Selecting entire folders for\nupload may not be supported on all\n",(0,l.kt)("a",{parentName:"p",href:"https://caniuse.com/#feat=input-file-directory"},"browsers"),"."),(0,l.kt)("h4",{id:"proudlydisplaypoweredbyuppy"},(0,l.kt)("inlineCode",{parentName:"h4"},"proudlyDisplayPoweredByUppy")),(0,l.kt)("p",null,"Show the Uppy logo with a link (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),")."),(0,l.kt)("p",null,"Uppy is provided to the world for free by the team behind\n",(0,l.kt)("a",{parentName:"p",href:"https://transloadit.com"},"Transloadit"),". In return, we ask that you consider\nkeeping a tiny Uppy logo at the bottom of the Dashboard, so that more people can\ndiscover and use Uppy."),(0,l.kt)("h4",{id:"disablestatusbar"},(0,l.kt)("inlineCode",{parentName:"h4"},"disableStatusBar")),(0,l.kt)("p",null,"Disable the status bar completely (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("p",null,"Dashboard ships with the ",(0,l.kt)("inlineCode",{parentName:"p"},"StatusBar")," plugin that shows upload progress and\npause/resume/cancel buttons. If you want, you can disable the StatusBar to\nprovide your own custom solution."),(0,l.kt)("h4",{id:"disableinformer-false"},(0,l.kt)("inlineCode",{parentName:"h4"},"disableInformer: false")),(0,l.kt)("p",null,"Disable informer (shows notifications in the form of toasts) completely\n(",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("p",null,"Dashboard ships with the ",(0,l.kt)("inlineCode",{parentName:"p"},"Informer")," plugin that notifies when the browser is\noffline, or when it\u2019s time to say cheese if ",(0,l.kt)("inlineCode",{parentName:"p"},"Webcam")," is taking a picture. If you\nwant, you can disable the Informer and/or provide your own custom solution."),(0,l.kt)("h4",{id:"disablethumbnailgenerator"},(0,l.kt)("inlineCode",{parentName:"h4"},"disableThumbnailGenerator")),(0,l.kt)("p",null,"Disable the thumbnail generator completely (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("p",null,"Dashboard ships with the ",(0,l.kt)("inlineCode",{parentName:"p"},"ThumbnailGenerator")," plugin that adds small resized\nimage thumbnails to images, for preview purposes only. If you want, you can\ndisable the ",(0,l.kt)("inlineCode",{parentName:"p"},"ThumbnailGenerator")," and/or provide your own custom solution."),(0,l.kt)("h4",{id:"locale"},(0,l.kt)("inlineCode",{parentName:"h4"},"locale")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n    strings: {\n        // When `inline: false`, used as the screen reader label for the button that closes the modal.\n        closeModal: 'Close Modal',\n        // Used as the screen reader label for the plus (+) button that shows the \u201cAdd more files\u201d screen\n        addMoreFiles: 'Add more files',\n        addingMoreFiles: 'Adding more files',\n        // Used as the header for import panels, e.g., \u201cImport from Google Drive\u201d.\n        importFrom: 'Import from %{name}',\n        // When `inline: false`, used as the screen reader label for the dashboard modal.\n        dashboardWindowTitle: 'Uppy Dashboard Window (Press escape to close)',\n        // When `inline: true`, used as the screen reader label for the dashboard area.\n        dashboardTitle: 'Uppy Dashboard',\n        // Shown in the Informer when a link to a file was copied to the clipboard.\n        copyLinkToClipboardSuccess: 'Link copied to clipboard.',\n        // Used when a link cannot be copied automatically \u2014 the user has to select the text from the\n        // input element below this string.\n        copyLinkToClipboardFallback: 'Copy the URL below',\n        // Used as the hover title and screen reader label for buttons that copy a file link.\n        copyLink: 'Copy link',\n        back: 'Back',\n        // Used as the screen reader label for buttons that remove a file.\n        removeFile: 'Remove file',\n        // Used as the screen reader label for buttons that open the metadata editor panel for a file.\n        editFile: 'Edit file',\n        // Shown in the panel header for the metadata editor. Rendered as \u201cEditing image.png\u201d.\n        editing: 'Editing %{file}',\n        // Used as the screen reader label for the button that saves metadata edits and returns to the\n        // file list view.\n        finishEditingFile: 'Finish editing file',\n        saveChanges: 'Save changes',\n        // Used as the label for the tab button that opens the system file selection dialog.\n        myDevice: 'My Device',\n        dropHint: 'Drop your files here',\n        // Used as the hover text and screen reader label for file progress indicators when\n        // they have been fully uploaded.\n        uploadComplete: 'Upload complete',\n        uploadPaused: 'Upload paused',\n        // Used as the hover text and screen reader label for the buttons to resume paused uploads.\n        resumeUpload: 'Resume upload',\n        // Used as the hover text and screen reader label for the buttons to pause uploads.\n        pauseUpload: 'Pause upload',\n        // Used as the hover text and screen reader label for the buttons to retry failed uploads.\n        retryUpload: 'Retry upload',\n        // Used as the hover text and screen reader label for the buttons to cancel uploads.\n        cancelUpload: 'Cancel upload',\n        // Used in a title, how many files are currently selected\n        xFilesSelected: {\n            0: '%{smart_count} file selected',\n            1: '%{smart_count} files selected',\n        },\n        uploadingXFiles: {\n            0: 'Uploading %{smart_count} file',\n            1: 'Uploading %{smart_count} files',\n        },\n        processingXFiles: {\n            0: 'Processing %{smart_count} file',\n            1: 'Processing %{smart_count} files',\n        },\n        // The \"powered by Uppy\" link at the bottom of the Dashboard.\n        poweredBy: 'Powered by %{uppy}',\n        addMore: 'Add more',\n        editFileWithFilename: 'Edit file %{file}',\n        save: 'Save',\n        cancel: 'Cancel',\n        dropPasteFiles: 'Drop files here or %{browseFiles}',\n        dropPasteFolders: 'Drop files here or %{browseFolders}',\n        dropPasteBoth: 'Drop files here, %{browseFiles} or %{browseFolders}',\n        dropPasteImportFiles: 'Drop files here, %{browseFiles} or import from:',\n        dropPasteImportFolders: 'Drop files here, %{browseFolders} or import from:',\n        dropPasteImportBoth:\n            'Drop files here, %{browseFiles}, %{browseFolders} or import from:',\n        importFiles: 'Import files from:',\n        browseFiles: 'browse files',\n        browseFolders: 'browse folders',\n        recoveredXFiles: {\n            0: 'We could not fully recover 1 file. Please re-select it and resume the upload.',\n            1: 'We could not fully recover %{smart_count} files. Please re-select them and resume the upload.',\n        },\n        recoveredAllFiles: 'We restored all files. You can now resume the upload.',\n        sessionRestored: 'Session restored',\n        reSelect: 'Re-select',\n        missingRequiredMetaFields: {\n            0: 'Missing required meta field: %{fields}.',\n            1: 'Missing required meta fields: %{fields}.',\n        },\n    },\n};\n")),(0,l.kt)("h4",{id:"theme"},(0,l.kt)("inlineCode",{parentName:"h4"},"theme")),(0,l.kt)("p",null,"Light or dark theme for the Dashboard (",(0,l.kt)("inlineCode",{parentName:"p"},"string"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"'light'"),")."),(0,l.kt)("p",null,"Uppy Dashboard supports \u201cDark Mode\u201d. You can try it live on\n",(0,l.kt)("a",{parentName:"p",href:"https://uppy.io/exampl/docs/dashboard/"},"the Dashboard example page"),"."),(0,l.kt)("p",null,"It supports the following values:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"light")," \u2014 the default"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dark")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"auto")," \u2014 will respect the user\u2019s system settings and switch automatically")),(0,l.kt)("h4",{id:"autoopenfileeditor"},(0,l.kt)("inlineCode",{parentName:"h4"},"autoOpenFileEditor")),(0,l.kt)("p",null,"Automatically open file editor (see ",(0,l.kt)("a",{parentName:"p",href:"/docs/image-editor"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/image-editor")),")\nfor the first file in a batch (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("p",null,"If one file is added, editor opens for that file, if 10 files are added \u2014 editor\nopens for the first file. Use case: user adds an image \u2014 Uppy opens Image Editor\nright away \u2014 user crops / adjusts the image \u2014 upload."),(0,l.kt)("h4",{id:"disabled"},(0,l.kt)("inlineCode",{parentName:"h4"},"disabled")),(0,l.kt)("p",null,"Enabling this option makes the Dashboard grayed-out and non-interactive\n(",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("p",null,"Users won\u2019t be able to click on buttons or drop files. Useful when you need to\nconditionally enable/disable file uploading or manipulation, based on a\ncondition in your app. Can be set on init or via API:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const dashboard = uppy.getPlugin('Dashboard');\ndashboard.setOptions({ disabled: true });\n\nuserNameInput.addEventListener('change', () => {\n    dashboard.setOptions({ disabled: false });\n});\n")),(0,l.kt)("h4",{id:"disablelocalfiles"},(0,l.kt)("inlineCode",{parentName:"h4"},"disableLocalFiles")),(0,l.kt)("p",null,"Disable local files (",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,l.kt)("p",null,"Enabling this option will disable drag & drop, hide the \u201cbrowse\u201d and \u201cMy Device\u201d\nbutton, allowing only uploads from plugins, such as Webcam, Screen Capture,\nGoogle Drive, Instagram."),(0,l.kt)("h4",{id:"ondragoverevent"},(0,l.kt)("inlineCode",{parentName:"h4"},"onDragOver(event)")),(0,l.kt)("p",null,"Callback for the ",(0,l.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragover"},(0,l.kt)("inlineCode",{parentName:"a"},"ondragover"))," event handler."),(0,l.kt)("h4",{id:"ondropevent"},(0,l.kt)("inlineCode",{parentName:"h4"},"onDrop(event)")),(0,l.kt)("p",null,"Callback for the ",(0,l.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondrop"},(0,l.kt)("inlineCode",{parentName:"a"},"ondrop"))," event handler."),(0,l.kt)("h4",{id:"ondragleaveevent"},(0,l.kt)("inlineCode",{parentName:"h4"},"onDragLeave(event)")),(0,l.kt)("p",null,"Callback for the ",(0,l.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragleave"},(0,l.kt)("inlineCode",{parentName:"a"},"ondragleave"))," event handler."),(0,l.kt)("h3",{id:"methods"},"Methods"),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Dashboard also has the methods described in\n",(0,l.kt)("a",{parentName:"p",href:"/docs/uppy#new-uipluginuppy-options"},(0,l.kt)("inlineCode",{parentName:"a"},"UIPlugin"))," and\n",(0,l.kt)("a",{parentName:"p",href:"/docs/uppy#new-basepluginuppy-options"},(0,l.kt)("inlineCode",{parentName:"a"},"BasePlugin")),".")),(0,l.kt)("h4",{id:"openmodal"},(0,l.kt)("inlineCode",{parentName:"h4"},"openModal()")),(0,l.kt)("p",null,"Shows the Dashboard modal. Use it like this:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"uppy.getPlugin('Dashboard').openModal()")),(0,l.kt)("h4",{id:"closemodal"},(0,l.kt)("inlineCode",{parentName:"h4"},"closeModal()")),(0,l.kt)("p",null,"Hides the Dashboard modal. Use it like this:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"uppy.getPlugin('Dashboard').closeModal()")),(0,l.kt)("h4",{id:"ismodalopen"},(0,l.kt)("inlineCode",{parentName:"h4"},"isModalOpen()")),(0,l.kt)("p",null,"Returns ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if the Dashboard modal is open, ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const dashboard = uppy.getPlugin('Dashboard');\nif (dashboard.isModalOpen()) {\n    dashboard.closeModal();\n}\n")),(0,l.kt)("h3",{id:"events"},"Events"),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"You can use ",(0,l.kt)("a",{parentName:"p",href:"/docs/uppy#onevent-action"},(0,l.kt)("inlineCode",{parentName:"a"},"on"))," and\n",(0,l.kt)("a",{parentName:"p",href:"/docs/uppy#onceevent-action"},(0,l.kt)("inlineCode",{parentName:"a"},"once"))," to listen to these events.")),(0,l.kt)("h4",{id:"dashboardmodal-open"},(0,l.kt)("inlineCode",{parentName:"h4"},"dashboard:modal-open")),(0,l.kt)("p",null,"Fired when the Dashboard modal is open."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"uppy.on('dashboard:modal-open', () => {\n    console.log('Modal is open');\n});\n")),(0,l.kt)("h4",{id:"dashboardmodal-closed"},(0,l.kt)("inlineCode",{parentName:"h4"},"dashboard:modal-closed")),(0,l.kt)("p",null,"Fired when the Dashboard modal is closed."),(0,l.kt)("h4",{id:"dashboardfile-edit-start"},(0,l.kt)("inlineCode",{parentName:"h4"},"dashboard:file-edit-start")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"file")," \u2014 The ",(0,l.kt)("a",{parentName:"li",href:"https://uppy.io/docs/uppy/#File-Objects"},"File Object"),"\nrepresenting the file that was opened for editing.")),(0,l.kt)("p",null,"Fired when the user clicks \u201cedit\u201d icon next to a file in the Dashboard. The\nFileCard panel is then open with file metadata available for editing."),(0,l.kt)("h4",{id:"dashboardfile-edit-complete"},(0,l.kt)("inlineCode",{parentName:"h4"},"dashboard:file-edit-complete")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"file")," \u2014 The ",(0,l.kt)("a",{parentName:"li",href:"https://uppy.io/docs/uppy/#File-Objects"},"File Object"),"\nrepresenting the file that was edited.")),(0,l.kt)("p",null,"Fired when the user finished editing the file metadata."),(0,l.kt)("h2",{id:"integrations"},"Integrations"),(0,l.kt)("p",null,"These are the plugins specifically made for the Dashboard. This is not a list of\nall Uppy plugins."),(0,l.kt)("h3",{id:"sources"},"Sources"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/audio"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/audio"))," \u2014 record audio."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/box"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/box"))," \u2014 import files from\n",(0,l.kt)("a",{parentName:"li",href:"https://www.box.com/en-nl/home"},"Box"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/dropbox"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/dropbox"))," \u2014 import from ",(0,l.kt)("a",{parentName:"li",href:"https://dropbox.com"},"Dropbox"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/dropbox"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/facebook"))," \u2014 import from\n",(0,l.kt)("a",{parentName:"li",href:"https://facebook.com"},"Facebook"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/google-drive"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/google-drive"))," \u2014 import from\n",(0,l.kt)("a",{parentName:"li",href:"https://drive.google.com"},"Google Drive"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/instagram"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/instagram"))," \u2014 import from\n",(0,l.kt)("a",{parentName:"li",href:"https://instagram.com"},"Instagram"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/onedrive"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/onedrive"))," \u2014 import from\n",(0,l.kt)("a",{parentName:"li",href:"https://www.microsoft.com/en-us/microsoft-365/onedrive/online-cloud-storage"},"OneDrive"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/screen-capture"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/screen-capture"))," \u2014 Record your screen, including\n(optionally) your microphone."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/unsplash"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/unsplash"))," \u2014 import files from\n",(0,l.kt)("a",{parentName:"li",href:"https://unsplash.com/"},"Unsplash")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/url"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/url"))," \u2014 import files from any URL."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/webcam"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/webcam"))," \u2014 Record or make a picture with your webcam."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/url"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/zoom"))," \u2014 import files from ",(0,l.kt)("a",{parentName:"li",href:"https://zoom.us"},"Zoom"),".")),(0,l.kt)("h3",{id:"ui"},"UI"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/image-editor"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/image-editor"))," \u2014 allows users to crop, rotate,\nzoom and flip images that are added to Uppy."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/informer"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/informer"))," \u2014 show notifications."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/status-bar"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/status-bar"))," \u2014 advanced upload progress status bar."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/thumbnail-generator"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/thumbnail-generator"))," \u2014 generate preview\nthumbnails for images to be uploaded.")),(0,l.kt)("h3",{id:"frameworks"},"Frameworks"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/angular"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/angular"))," \u2014 Dashboard component for\n",(0,l.kt)("a",{parentName:"li",href:"https://angular.io/"},"Angular"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/react"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/react"))," \u2014 Dashboard component for\n",(0,l.kt)("a",{parentName:"li",href:"https://reactjs.org/"},"React"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/svelte"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/svelte"))," \u2014 Dashboard component for\n",(0,l.kt)("a",{parentName:"li",href:"https://svelte.dev/"},"Svelte"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/vue"},(0,l.kt)("inlineCode",{parentName:"a"},"@uppy/vue"))," \u2014 Dashboard component for ",(0,l.kt)("a",{parentName:"li",href:"https://vuejs.org/"},"Vue"),".")))}k.isMDXComponent=!0}}]);