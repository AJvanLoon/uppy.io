"use strict";(self.webpackChunkuppy_io=self.webpackChunkuppy_io||[]).push([[2045],{11885:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>n,metadata:()=>a,toc:()=>d});var i=s(85893),r=s(11151);const n={title:"Uppy 0.17: Restrictions",date:new Date("2017-07-11T00:00:00.000Z"),authors:["arturi"],published:!0,slug:"2017/05/0.17"},o=void 0,a={permalink:"/blog/2017/05/0.17",editUrl:"https://github.com/transloadit/uppy.io/tree/main/blog/2017-05-0.17.md",source:"@site/blog/2017-05-0.17.md",title:"Uppy 0.17: Restrictions",description:"Hi! We are back with yet another Uppy release that contains some often requested",date:"2017-07-11T00:00:00.000Z",formattedDate:"July 11, 2017",tags:[],readingTime:5.825,hasTruncateMarker:!0,authors:[{email:"artur@transloadit.com",name:"Artur Paikin",id:"artur",tagline:"Developer",imageURL:"https://github.com/arturi.png",key:"arturi"}],frontMatter:{title:"Uppy 0.17: Restrictions",date:"2017-07-11T00:00:00.000Z",authors:["arturi"],published:!0,slug:"2017/05/0.17"},unlisted:!1,prevItem:{title:"The Golden Retriever: Making uploads survive browser crashes",permalink:"/blog/2017/07/golden-retriever"},nextItem:{title:"Uppy 0.16: Transloadit!",permalink:"/blog/2017/05/0.16"}},l={authorsImageUrls:[void 0]},d=[{value:"\u26a0\ufe0f File Restrictions",id:"\ufe0f-file-restrictions",level:2},{value:"\ud83d\udcf8 Instagram plugin and UI overhaul",id:"-instagram-plugin-and-ui-overhaul",level:2},{value:"StatusBar",id:"statusbar",level:2},{value:"Better file type detection",id:"better-file-type-detection",level:2},{value:"Extracting metadata from <code>&lt;form&gt;</code> inputs",id:"extracting-metadata-from-form-inputs",level:2},{value:"More",id:"more",level:2},{value:"Release Notes",id:"release-notes",level:2}];function h(e){const t={a:"a",code:"code",figure:"figure",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Hi! We are back with yet another Uppy release that contains some often requested\nfeatures such as file restrictions and better file type detection, alongside a\nbrand new Instagram plugin, UI improvements and more!"}),"\n",(0,i.jsx)(t.h2,{id:"\ufe0f-file-restrictions",children:"\u26a0\ufe0f File Restrictions"}),"\n",(0,i.jsx)(t.p,{children:"Something that a few of our biggest fans were asking for, is finally here!\nHere's the gist of it:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"Uppy({\n\tdebug: true,\n\tautoProceed: false,\n\trestrictions: {\n\t\tmaxFileSize: 300000,\n\t\tmaxNumberOfFiles: 5,\n\t\tminNumberOfFiles: 2,\n\t\tallowedFileTypes: ['image/*', 'video/*'],\n\t},\n\tonBeforeFileAdded: (currentFile, files) => {\n\t\tif (currentFile.name === 'my-file.jpg') {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\treturn Promise.reject('This is not the file I was looking for');\n\t},\n\tonBeforeUpload: (files) => {\n\t\tif (Object.keys(files).length < 2) {\n\t\t\treturn Promise.reject('Too few files :(');\n\t\t}\n\t\treturn Promise.resolve();\n\t},\n});\n"})}),"\n",(0,i.jsx)(t.p,{children:"Basically, there are two ways to set restrictions:"}),"\n",(0,i.jsxs)(t.p,{children:["1. Using the ",(0,i.jsx)(t.code,{children:"restrictions"})," object in Uppy's core settings:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"restrictions: {\n  maxFileSize: 300000,\n  maxNumberOfFiles: 5,\n  minNumberOfFiles: 2,\n  allowedFileTypes: ['image/*', 'video/*']\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:"Translation: allow only images and videos of any type, a minimum of 2 and\nmaximum of 5 files must be selected, 300kb or less."}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"allowedFileTypes"})," must be an array of strings with supported file mime-types.\nAnything from\n",(0,i.jsx)(t.a,{href:"https://www.iana.org/assignments/media-types/media-types.xhtml",children:"this list"}),"\nshould work, as long as Uppy is able to detect it (and Uppy promises to try real\nhard, see below for details). Both wildcards ",(0,i.jsx)(t.code,{children:"video/*"})," and specicifc types\n",(0,i.jsx)(t.code,{children:"image/jpeg"})," are supported!"]}),"\n",(0,i.jsxs)(t.p,{children:["2. Using the more advanced callbacks: ",(0,i.jsx)(t.code,{children:"onBeforeFileAdded(currentFile, files)"}),",\nwhich fires before a file is added and allows you to run whatever checks you\nwish against either the single file that is about to be added or all files\ncurrently selected / uploaded, and ",(0,i.jsx)(t.code,{children:"onBeforeUpload(files)"}),", where you are able\nto check stuff before proceeding with the upload."]}),"\n",(0,i.jsx)(t.p,{children:"Basically, use the first option for the simple stuff such as limiting uploads to\nimages or a maximum of three files. Use the second option for things like \u201cwe\nneed users to upload 5 photos and an audio file, so we can make a short clip out\nof it\u201d. Let us know if this suits your needs, we are all \ud83d\udc42ears\ud83d\udc42!"}),"\n",(0,i.jsxs)(t.p,{children:["Also, a new ",(0,i.jsx)(t.code,{children:"note"})," option has been added to the Dashboard, as a quick and easy\nway to inform users about the restrictions you choose to set up:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"uppy.use(Dashboard, {\n\tnote: 'Images and video only, 300kb or less',\n});\n"})}),"\n",(0,i.jsx)(t.img,{className:"border",src:"/img/blog/0.17/restrictions-note.jpg"}),"\n",(0,i.jsx)(t.h2,{id:"-instagram-plugin-and-ui-overhaul",children:"\ud83d\udcf8 Instagram plugin and UI overhaul"}),"\n",(0,i.jsx)(t.p,{children:"Yes, Instagram is now supported in Uppy, so you can easily import all of your\ncat, dog and food pictures!"}),"\n",(0,i.jsxs)(t.figure,{className:"wide",children:["\n  ",(0,i.jsx)(t.img,{className:"border",src:"/img/blog/0.17/instagram-ui.jpg"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["You can try it live in the\n",(0,i.jsx)(t.a,{href:"https://uppy.io/examples/dashboard/",children:"Dashboard example"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"The UI for all \u201cprovider\u201d plugins, which is the way we call Google Drive,\nDropbox and other external services, have been revamped to make better use of\nthe space."}),"\n",(0,i.jsx)(t.p,{children:"Files are now selected, or added, on click/tap, rather than double click, which\nis easier and also works on mobile. \ud83d\ude40"}),"\n",(0,i.jsx)(t.img,{className:"border",src:"/img/blog/0.17/provider-search.jpg"}),"\n",(0,i.jsx)(t.h2,{id:"statusbar",children:"StatusBar"}),"\n",(0,i.jsx)(t.p,{children:"The Dashboard\u2019s StatusBar has been improved. First of all, even though it still\ncomes bundled with the Dashboard like before, it is now a separate plugin that\ncan be used anywhere, like with the Drag and Drop plugin or your own custom\nthing. Furthermore, it now shows fatal upload errors in addition to the upload /\nprocessing / transcoding progress. \ud83d\udcaa"}),"\n",(0,i.jsxs)(t.p,{children:["In the Dashboard, you can now disable the StatusBar and/or Informer if you don\u2019t\nneed them or want something custom, by setting ",(0,i.jsx)(t.code,{children:"disableStatusBar: true"})," and\n",(0,i.jsx)(t.code,{children:"disableInformer: true"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["Details: ",(0,i.jsx)(t.a,{href:"https://github.com/transloadit/uppy/pull/217",children:"#217"})]}),"\n",(0,i.jsx)(t.h2,{id:"better-file-type-detection",children:"Better file type detection"}),"\n",(0,i.jsxs)(t.p,{children:["We\u2019ve added a ",(0,i.jsx)(t.a,{href:"https://github.com/sindresorhus/file-type",children:(0,i.jsx)(t.code,{children:"file-type"})})," module\nthat helps with figuring out the file type by reading the first magic bytes of\nthe file. If that doesn\u2019t work, we try to use the mime-type provided by the\nsystem/browser, and if that is still a dead end, we attempt to figure it out by\nextension. All in all, this leads to a more robust file type detecting\nexperience. Personally, I\u2019m just happy my Sex and the City \ud83c\udf78 ",(0,i.jsx)(t.code,{children:".avi"})," files are\nnow recognized as ",(0,i.jsx)(t.code,{children:"video"})," on a Mac!"]}),"\n",(0,i.jsxs)(t.p,{children:["Further details can be found here:\n",(0,i.jsx)(t.a,{href:"https://github.com/transloadit/uppy/pull/219",children:"#219"})]}),"\n",(0,i.jsxs)(t.h2,{id:"extracting-metadata-from-form-inputs",children:["Extracting metadata from ",(0,i.jsx)(t.code,{children:"<form>"})," inputs"]}),"\n",(0,i.jsxs)(t.p,{children:["If a plugin\u2019s ",(0,i.jsx)(t.code,{children:"target"})," is a ",(0,i.jsx)(t.code,{children:"form"})," element, we are going to try to extract all\nthe data from that form\u2019s inputs and add it as ",(0,i.jsx)(t.code,{children:"meta"})," to Uppy\u2019s state. That\n",(0,i.jsx)(t.code,{children:"meta"})," is then merged with file\u2019s meta when it is being added."]}),"\n",(0,i.jsxs)(t.p,{children:["Uppy\u2019s core options have received a new ",(0,i.jsx)(t.code,{children:"meta"})," property, where you can define\nsome metadata from the start, as well as a new ",(0,i.jsx)(t.code,{children:"setMeta"})," method that can be\ncalled at any time."]}),"\n",(0,i.jsxs)(t.p,{children:["See here for more details: ",(0,i.jsx)(t.a,{href:"https://github.com/transloadit/uppy/pull/238",children:"#238"})]}),"\n",(0,i.jsx)(t.h2,{id:"more",children:"More"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Added a ",(0,i.jsx)(t.code,{children:"reset()"})," method that stops uploads, clears files and totalProgress,\nand restores things to the way they were on initialization, before user\ninteractions ",(0,i.jsx)(t.a,{href:"https://github.com/transloadit/uppy/pull/226",children:"#226"})]}),"\n",(0,i.jsxs)(t.li,{children:["Support for headers in Multipart plugin\n",(0,i.jsx)(t.a,{href:"https://github.com/transloadit/uppy/pull/224",children:"#224"})]}),"\n",(0,i.jsxs)(t.li,{children:["Set bytesUploaded/bytesTotal as soon as the file is added, fixes a ",(0,i.jsx)(t.code,{children:"NaN"})," issue\n",(0,i.jsx)(t.a,{href:"https://github.com/transloadit/uppy/pull/232",children:"#232"})]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"release-notes",children:"Release Notes"}),"\n",(0,i.jsx)(t.p,{children:"Here is the full list of changes for version 0.17:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"core: added restrictions \u2014 by file type, size, number of files (@arturi)"}),"\n",(0,i.jsx)(t.li,{children:"provider: improved UI: improve overall look, breadcrumbs, more responsive\n(@arturi)"}),"\n",(0,i.jsx)(t.li,{children:"core: css-in-js demos, try template-css (@arturi @goto-bus-stop #239)"}),"\n",(0,i.jsxs)(t.li,{children:["core: added ",(0,i.jsx)(t.code,{children:"uppy.reset()"})," as discussed in #179 (@arturi)"]}),"\n",(0,i.jsxs)(t.li,{children:["core: added nanoraf\n",(0,i.jsx)(t.a,{href:"https://github.com/yoshuawuyts/choo/pull/135/files?diff=unified",children:"https://github.com/yoshuawuyts/choo/pull/135/files?diff=unified"}),"\n(@goto-bus-stop, @arturi)"]}),"\n",(0,i.jsxs)(t.li,{children:["core: file type detection: archives, markdown (possible modules: file-type,\nidentify-filetype) example:\n",(0,i.jsx)(t.a,{href:"http://requirebin.com/?gist=f9bea9602030f1320a227cf7f140c45f",children:"http://requirebin.com/?gist=f9bea9602030f1320a227cf7f140c45f"}),",\n",(0,i.jsx)(t.a,{href:"http://stackoverflow.com/a/29672957",children:"http://stackoverflow.com/a/29672957"})," (@arturi)"]}),"\n",(0,i.jsxs)(t.li,{children:["dashboard: made file icons prettier:\n",(0,i.jsx)(t.a,{href:"https://uppy.io/img/blog/0.16/service-logos.png",children:"https://uppy.io/img/blog/0.16/service-logos.png"})," (@arturi, @nqst / #215)"]}),"\n",(0,i.jsx)(t.li,{children:"fileinput: allow retrieving fields/options from form (@arturi #153)"}),"\n",(0,i.jsx)(t.li,{children:"server: configurable server port (@ifedapoolarewaju)"}),"\n",(0,i.jsx)(t.li,{children:"server: added support for custom providers (@ifedapoolarewaju)"}),"\n",(0,i.jsx)(t.li,{children:"statusbar: also show major errors, add \u201cerror\u201d state (@goto-bus-stop)"}),"\n",(0,i.jsx)(t.li,{children:"statusbar: pre/postprocessing status updates in the StatusBar (@goto-bus-stop,\n#202)"}),"\n",(0,i.jsx)(t.li,{children:"statusbar: show status \u201cUpload started...\u201d when the remote upload has begun,\nbut no progress events received yet (@arturi)"}),"\n",(0,i.jsx)(t.li,{children:"statusbar: work towards extracting StatusBar to a separate plugin, still\nbundle it with Dashboard (@goto-bus-stop, @arturi)"}),"\n",(0,i.jsx)(t.li,{children:"tus/uppy-server: support metadata in remote tus uploads (@ifedapoolarewaju,\n@goto-bus-stop / #210)"}),"\n",(0,i.jsx)(t.li,{children:"uploaders: added direct-to-s3 upload plugin and test it with the flow to then\nupload to transloadit, stage 1, WIP (@goto-bus-stop)"}),"\n",(0,i.jsx)(t.li,{children:"uppy/uppy-server: Made a barely working Instagram Plugin (@ifedapoolarewaju /\n#21)"}),"\n",(0,i.jsx)(t.li,{children:"uppy/uppy-server: allow google drive/dropbox non-tus (i.e multipart) remote\nuploads (@arturi, @ifedapoolarewaju / #205)"}),"\n",(0,i.jsx)(t.li,{children:"uppy/uppy-server: do not show files that cannot be downloaded from Google\nDrive (@ifedapoolarewaju)"}),"\n",(0,i.jsx)(t.li,{children:"uppy: fixed Google Drive uploads on mobile (double click issue) (@arturi)"}),"\n",(0,i.jsxs)(t.li,{children:["core: updated prettier-bytes to fix the IE support issue\n",(0,i.jsx)(t.a,{href:"https://github.com/Flet/prettier-bytes/issues/3",children:"https://github.com/Flet/prettier-bytes/issues/3"})," (@arturi)"]}),"\n",(0,i.jsx)(t.li,{children:"core: use URL.createObjectURL instead of resizing thumbnails (@arturi,\n@goto-bus-stop / #199)"}),"\n",(0,i.jsx)(t.li,{children:"dashboard: fixed ETA when multiple files are being uploaded (@goto-bus-stop,\n#197)"}),"\n",(0,i.jsx)(t.li,{children:"transloadit: fixed receiving assembly results that are not related to an input\nfile (@arturi, @goto-bus-stop / #201)"}),"\n",(0,i.jsxs)(t.li,{children:["transloadit: use the ",(0,i.jsx)(t.code,{children:"tus_upload_url"})," to reliably link assembly results with\ntheir input files (@goto-bus-stop / #207)"]}),"\n",(0,i.jsxs)(t.li,{children:["transloadit: moved user-facing strings into locale option (@goto-bus-stop /\n",(0,i.jsx)(t.a,{href:"https://github.com/transloadit/uppy/commit/87a22e7ee37b6fa3754fa34868516a6700306b60",children:"https://github.com/transloadit/uppy/commit/87a22e7ee37b6fa3754fa34868516a6700306b60"}),")"]}),"\n",(0,i.jsx)(t.li,{children:"webcam: mute audio in realtime playback (@goto-bus-stop / #196)"}),"\n",(0,i.jsxs)(t.li,{children:["temporarily downgrade yo-yoify, until shama/yo-yoify#45 is resolved (@arturi /\n",(0,i.jsx)(t.a,{href:"https://github.com/transloadit/uppy/commit/6292b96",children:"https://github.com/transloadit/uppy/commit/6292b96"}),")"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Enjoy!"}),"\n",(0,i.jsx)(t.p,{children:"The Uppy Team"})]})}function c(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>a,a:()=>o});var i=s(67294);const r={},n=i.createContext(r);function o(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);