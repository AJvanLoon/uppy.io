"use strict";(self.webpackChunkuppy_io=self.webpackChunkuppy_io||[]).push([[4165],{70457:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var o=s(85893),t=s(11151);const a={title:"Uppy 0.28: A look behind the scenes",date:new Date("2018-11-05T00:00:00.000Z"),author:"renee",image:"https://uppy.io/img/blog/0.28/dashboard-uploading.jpg",published:!0,slug:"2018/10/0.28"},i=void 0,l={permalink:"/blog/2018/10/0.28",editUrl:"https://github.com/transloadit/uppy.io/tree/main/blog/2018-10-0.28.md",source:"@site/blog/2018-10-0.28.md",title:"Uppy 0.28: A look behind the scenes",description:"In 0.28, we are introducing a new \u201cSingle Upload\u201d mode, improving on the",date:"2018-11-05T00:00:00.000Z",formattedDate:"November 5, 2018",tags:[],readingTime:4.71,hasTruncateMarker:!0,authors:[{name:"renee"}],frontMatter:{title:"Uppy 0.28: A look behind the scenes",date:"2018-11-05T00:00:00.000Z",author:"renee",image:"https://uppy.io/img/blog/0.28/dashboard-uploading.jpg",published:!0,slug:"2018/10/0.28"},unlisted:!1,prevItem:{title:"Uppy 0.29: separate Core and Plugin styles, React Native in tus-js-client",permalink:"/blog/2018/12/0.29"},nextItem:{title:"Uppy 0.27: First Swing at React Native Support",permalink:"/blog/2018/08/0.27"}},r={authorsImageUrls:[void 0]},d=[{value:"Single Uploads",id:"single-uploads",level:2},{value:"Status Bar improvements",id:"status-bar-improvements",level:2},{value:"Locale packs",id:"locale-packs",level:2},{value:"Hosted Companion with Transloadit",id:"hosted-companion-with-transloadit",level:2},{value:"Transloadit Preset",id:"transloadit-preset",level:2},{value:"Other Cool Changes",id:"other-cool-changes",level:2}];function p(e){const n={a:"a",code:"code",em:"em",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.img,{className:"border",src:"/img/blog/0.28/dashboard-uploading.jpg"}),"\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.code,{children:"0.28"}),", we are introducing a new \u201cSingle Upload\u201d mode, improving on the\nStatus Bar plugin with a spinner and different pause/resume/cancel buttons.\nWe'll also share some progress on bringing back unified locale packs and a\nTransloadit Preset \ud83c\udf41"]}),"\n",(0,o.jsx)(n.h2,{id:"single-uploads",children:"Single Uploads"}),"\n",(0,o.jsxs)(n.p,{children:["Uppy has been flexible about uploading lots of things from the start. You can\nadd files at any time, even after uploads have already started. This is neat,\nbut not always the desired behaviour: sometimes, you just want to upload a few\nfiles together with a form. In that case, it's useful to allow users to only\nupload a set of files ",(0,o.jsx)(n.em,{children:"once"}),". 0.28.0 adds some options to help with that!"]}),"\n",(0,o.jsxs)(n.p,{children:['An upload in Uppy terminology can be more than one file. Users can add a bunch\nof files and when they press "Upload", all those files are bunched up into an\nupload. They can then add more files and press the "Upload" button again: the\n',(0,o.jsx)(n.em,{children:"new"})," files are bunched into a second upload."]}),"\n",(0,o.jsxs)(n.p,{children:["The new\n",(0,o.jsx)(n.a,{href:"https://uppy.io/docs/uppy/#allowMultipleUploads-true",children:(0,o.jsx)(n.code,{children:"allowMultipleUploads"})}),"\noption in Uppy Core can be set to ",(0,o.jsx)(n.code,{children:"false"}),' to only allow a single one of those\nuploads. Once an upload is started, the Dashboard and Status Bar no longer show\n"add files" and "upload" buttons. You can listen for a \'complete\' event and then\nsafely continue your app\'s form flow.']}),"\n",(0,o.jsxs)(n.p,{children:["The Dashboard also has a new option:\n",(0,o.jsx)(n.a,{href:"https://uppy.io/docs/dashboard/#closeAfterFinish-false",children:(0,o.jsx)(n.code,{children:"closeAfterFinish"})}),".\nWhen ",(0,o.jsx)(n.code,{children:"true"}),", the modal Dashboard will automatically hide once an upload has\ncompleted. You should only use this option in conjunction with\n",(0,o.jsx)(n.code,{children:"allowMultipleUploads"}),", otherwise it might close the Dashboard when the user\nisn't done yet! It can only be used with the modal Dashboard, when\n",(0,o.jsx)(n.a,{href:"https://uppy.io/docs/dashboard/#inline-false",children:(0,o.jsx)(n.code,{children:"inline"})})," is set to ",(0,o.jsx)(n.code,{children:"false"}),'.\n"Closing" an inline Dashboard makes no sense \ud83d\ude04 You will see a warning in\nthe console in both cases, so you don\'t have to remember all that.']}),"\n",(0,o.jsx)(n.p,{children:"Speaking of the Dashboard, it now also shows more statuses in the title bar:\n\u201cUpload complete\u201d, \u201cUpload paused\u201d, \u201cProcessing 5 files\u201d and \u201cUploading 5\nfiles\u201d."}),"\n",(0,o.jsx)(n.h2,{id:"status-bar-improvements",children:"Status Bar improvements"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\u26a0\ufe0f ",(0,o.jsx)(n.strong,{children:"breaking"})," We\u2019ve added separate options for hiding pause/resume and\ncancel buttons. So now there are several options for buttons:\n",(0,o.jsx)(n.code,{children:"hideUploadButton"}),", ",(0,o.jsx)(n.code,{children:"hideRetryButton"}),", ",(0,o.jsx)(n.code,{children:"hidePauseResumeButton"})," and\n",(0,o.jsx)(n.code,{children:"hideCancelButton"}),". These options can be passed from the Dashboard, if you are\nnot using Status Bar separately (most common case). See the docs for more\ninfo: ",(0,o.jsx)(n.a,{href:"https://uppy.io/docs/status-bar/",children:"https://uppy.io/docs/status-bar/"}),"."]}),"\n",(0,o.jsx)(n.li,{children:"The Status Bar now features a spinner animation when upload is in progress."}),"\n",(0,o.jsx)(n.li,{children:"Encoding (with the Transloadit plugin, for example) and uploading progress now\nget different colors, so it\u2019s easier to tell what\u2019s happening, visually."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:'<img className="border" style={{borderTop: 0}}\nsrc="/img/blog/0.28/status-bar-uploading.png" />'}),"\n",(0,o.jsx)(n.p,{children:'<img className="border" style={{borderTop: 0}}\nsrc="/img/blog/0.28/status-bar-paused.png" />'}),"\n",(0,o.jsx)(n.p,{children:'<img className="border" style={{borderTop: 0}}\nsrc="/img/blog/0.28/status-bar-encoding.png" />'}),"\n",(0,o.jsx)(n.p,{children:'<img className="border" style={{borderTop: 0}}\nsrc="/img/blog/0.28/status-bar-complete.png" />'}),"\n",(0,o.jsx)(n.h2,{id:"locale-packs",children:"Locale packs"}),"\n",(0,o.jsx)(n.p,{children:"In the beginning, we used to have unified locale packs for text strings in Uppy\n\u2014 English, Russian, German, Polish, etc. Then we made a switch to per-plugin\nlocales, and the ability to load one file with locale strings in any language\n(locale pack) was lost for a while. This release is the first step in bringing\nthis functionality back."}),"\n",(0,o.jsxs)(n.p,{children:["With this change, you can load a locale pack like so:\n",(0,o.jsx)(n.code,{children:"const uppy = Uppy({locale: german})"}),", then still override specific strings in a\ncertain plugin, if needed:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const uppy = Uppy({ locale: german });\nuppy.use(Dashboard, {\n\ttrigger: '#pick-files',\n\tlocale: {\n\t\tstrings: {\n\t\t\tdropPasteImport: 'Something else here, %{browse} or this',\n\t\t},\n\t},\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:"The benefit to this is that there will be a central point of configuration for\nlanguages, so there could be language packs with strings for, e.g., Czech at\n@uppy/lang-cz (or @uppy/langs/cz) that would be very easy to contribute to (or\nuse)."}),"\n",(0,o.jsx)(n.p,{children:"After Uppy 0.28.0, this functionality is technically possible, but we still need\nto update and publish locale packs for multiple languages."}),"\n",(0,o.jsx)(n.h2,{id:"hosted-companion-with-transloadit",children:"Hosted Companion with Transloadit"}),"\n",(0,o.jsxs)(n.p,{children:["When using remote providers such as Google Drive and Dropbox, so that your users\ncan pick files from these sources, you can host\n",(0,o.jsx)(n.a,{href:"https://uppy.io/docs/companion/",children:"Companion"})," yourself, or use the one provided\nby Transloadit. And to simplify the latter, you can now use\n",(0,o.jsx)(n.code,{children:"Transloadit.COMPANION"})," and ",(0,o.jsx)(n.code,{children:"Transloadit.COMPANION_PATTERN"})," constants in remote\nprovider options:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const Dropbox = require('@uppy/dropbox');\nconst Transloadit = require('@uppy/transloadit');\n\nuppy.use(Dropbox, {\n\tserverUrl: Transloadit.COMPANION,\n\tserverPattern: Transloadit.COMPANION_PATTERN,\n});\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Please see ",(0,o.jsx)(n.a,{href:"https://uppy.io/docs/transloadit/",children:"Transloadit plugin documentation"}),"\nfor more details."]}),"\n",(0,o.jsx)(n.h2,{id:"transloadit-preset",children:"Transloadit Preset"}),"\n",(0,o.jsxs)(n.p,{children:["Lately, we've been working on a wrapper package around Uppy and the\n",(0,o.jsx)(n.a,{href:"https://uppy.io/docs/transloadit/",children:"Transloadit plugin"})," that will make common\nTransloadit-based workflows much simpler to implement. It's not ready just yet,\nbut it should land in the next month!"]}),"\n",(0,o.jsx)(n.p,{children:'This "preset" will provide three or so simple methods:'}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"transloadit.form()"}),", to enhance a form with existing file ",(0,o.jsx)(n.code,{children:"<input>"}),"s with\nTransloadit encoding capabilities, powered by Uppy's resilient uploading\nplugins"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"transloadit.modal()"}),", to show a one-off modal Dashboard that uploads to\nTransloadit's encoding backend"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"transloadit.upload()"}),", to instruct Uppy to upload files, using your own UI\ninstead"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Stay tuned!"}),"\n",(0,o.jsx)(n.h2,{id:"other-cool-changes",children:"Other Cool Changes"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["@uppy/core: \u26a0\ufe0f ",(0,o.jsx)(n.strong,{children:"breaking"})," remove ",(0,o.jsx)(n.code,{children:"upload-cancel"})," event, ",(0,o.jsx)(n.code,{children:"file-removed"}),"\nshould be enough, see ",(0,o.jsx)(n.a,{href:"https://github.com/transloadit/uppy/pull/1069",children:"#1069"}),"\nfor details"]}),"\n",(0,o.jsxs)(n.li,{children:["@uppy/companion: \u26a0\ufe0f ",(0,o.jsx)(n.strong,{children:"breaking"})," Migrated provider adapter to Companion: saves\n5KB on the frontend, all heavy lifting moved to the server side"]}),"\n",(0,o.jsx)(n.li,{children:"@uppy/companion: Removed an erroneous TypeScript dependency that added 40MB to\nthe install size"}),"\n",(0,o.jsxs)(n.li,{children:["@uppy/thumbnail-generator: You can now constrain thumbnail height, thanks to\n@richartkeil, see ",(0,o.jsx)(n.a,{href:"https://github.com/transloadit/uppy/pull/1096",children:"#1096"})," for\ndocumentation (we are planning to add real Thumbnail Generator documentation\nsoon, too!)"]}),"\n",(0,o.jsxs)(n.li,{children:["@uppy/webcam: Fix getting data from Webcam recording if mime type includes\ncodec metadata (",(0,o.jsx)(n.a,{href:"https://github.com/transloadit/uppy/pull/1094",children:"#1094"})," /\n@goto-bus-stop)"]}),"\n",(0,o.jsx)(n.li,{children:"meta: Added integration tests (in real browsers, thanks to Sauce Labs) for\n@uppy/url, @uppy/transloadit and @uppy/thumbnail-generator \ud83d\ude80"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["See\n",(0,o.jsx)(n.a,{href:"https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#0280",children:"full changelog (0.28 and 0.27.x patches) for more"})]}),"\n",(0,o.jsx)(n.p,{children:"See you in the next release!"}),"\n",(0,o.jsx)(n.p,{children:"The Uppy Team"})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>i});var o=s(67294);const t={},a=o.createContext(t);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);