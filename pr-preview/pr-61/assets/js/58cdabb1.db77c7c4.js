"use strict";(self.webpackChunkuppy_io=self.webpackChunkuppy_io||[]).push([[7421],{4918:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const i={sidebar_position:4},r="Companion",l={unversionedId:"companion",id:"companion",title:"Companion",description:"Companion is an open source server application which takes away the complexity of authentication",source:"@site/docs/companion.md",sourceDirName:".",slug:"/companion",permalink:"/uppy.io/pr-preview/pr-61/docs/companion",draft:!1,editUrl:"https://github.com/transloadit/uppy.io/tree/main/docs/companion.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Uppy core",permalink:"/uppy.io/pr-preview/pr-61/docs/uppy-core"},next:{title:"Dashboard",permalink:"/uppy.io/pr-preview/pr-61/docs/user-interfaces/dashboard"}},s={},p=[{value:"When should I use it?",id:"when-should-i-use-it",level:2},{value:"Hosted",id:"hosted",level:2},{value:"Installation &amp; use",id:"installation--use",level:2},{value:"Express middleware",id:"express-middleware",level:3},{value:"Standalone",id:"standalone",level:3},{value:"Running many instances",id:"running-many-instances",level:3},{value:"Using unique endpoints",id:"using-unique-endpoints",level:4},{value:"Using a load balancer",id:"using-a-load-balancer",level:4},{value:"API",id:"api",level:2},{value:"Options",id:"options",level:3},{value:"<code>filePath</code> <code>COMPANION_DATADIR</code>",id:"filepath-companion_datadir",level:4},{value:"<code>secret</code> <code>COMPANION_SECRET</code> <code>COMPANION_SECRET_FILE</code>",id:"secret-companion_secret-companion_secret_file",level:4},{value:"<code>preAuthSecret</code> <code>COMPANION_PREAUTH_SECRET</code> <code>COMPANION_PREAUTH_SECRET_FILE</code>",id:"preauthsecret-companion_preauth_secret-companion_preauth_secret_file",level:4},{value:"<code>uploadUrls</code> <code>COMPANION_UPLOAD_URLS</code>",id:"uploadurls-companion_upload_urls",level:4},{value:"<code>COMPANION_PORT</code>",id:"companion_port",level:4},{value:"<code>COMPANION_COOKIE_DOMAIN</code>",id:"companion_cookie_domain",level:4},{value:"<code>COMPANION_HIDE_WELCOME</code>",id:"companion_hide_welcome",level:4},{value:"<code>redisUrl</code> <code>COMPANION_REDIS_URL</code>",id:"redisurl-companion_redis_url",level:4},{value:"<code>redisOptions</code>",id:"redisoptions",level:4},{value:"<code>redisPubSubScope</code>",id:"redispubsubscope",level:4},{value:"<code>server</code>",id:"server",level:4},{value:"<code>sendSelfEndpoint</code> <code>COMPANION_SELF_ENDPOINT</code>",id:"sendselfendpoint-companion_self_endpoint",level:4},{value:"<code>providerOptions</code>",id:"provideroptions",level:4},{value:"<code>s3</code>",id:"s3",level:4},{value:"<code>s3.key</code> <code>COMPANION_AWS_KEY</code>",id:"s3key-companion_aws_key",level:5},{value:"<code>s3.secret</code> <code>COMPANION_AWS_SECRET</code> <code>COMPANION_AWS_SECRET_FILE</code>",id:"s3secret-companion_aws_secret-companion_aws_secret_file",level:5},{value:"<code>s3.bucket</code> <code>COMPANION_AWS_BUCKET</code>",id:"s3bucket-companion_aws_bucket",level:5},{value:"<code>s3.region</code> <code>COMPANION_AWS_REGION</code>",id:"s3region-companion_aws_region",level:5},{value:"<code>s3.awsClientOptions</code>",id:"s3awsclientoptions",level:5},{value:"<code>s3.getKey(req, filename, metadata)</code>",id:"s3getkeyreq-filename-metadata",level:5},{value:"<code>COMPANION_AWS_USE_ACCELERATE_ENDPOINT</code>",id:"companion_aws_use_accelerate_endpoint",level:4},{value:"<code>COMPANION_AWS_EXPIRES</code>",id:"companion_aws_expires",level:4},{value:"<code>COMPANION_AWS_ACL</code>",id:"companion_aws_acl",level:4},{value:"<code>customProviders</code>",id:"customproviders",level:4},{value:"<code>logClientVersion</code>",id:"logclientversion",level:4},{value:"<code>metrics</code> <code>COMPANION_HIDE_METRICS</code>",id:"metrics-companion_hide_metrics",level:4},{value:"<code>streamingUpload</code> <code>COMPANION_STREAMING_UPLOAD</code>",id:"streamingupload-companion_streaming_upload",level:4},{value:"<code>maxFileSize</code> <code>COMPANION_MAX_FILE_SIZE</code>",id:"maxfilesize-companion_max_file_size",level:4},{value:"<code>periodicPingUrls</code> <code>COMPANION_PERIODIC_PING_URLS</code>",id:"periodicpingurls-companion_periodic_ping_urls",level:4},{value:"<code>periodicPingInterval</code> <code>COMPANION_PERIODIC_PING_INTERVAL</code>",id:"periodicpinginterval-companion_periodic_ping_interval",level:4},{value:"<code>periodicPingStaticPayload</code> <code>COMPANION_PERIODIC_PING_STATIC_JSON_PAYLOAD</code>",id:"periodicpingstaticpayload-companion_periodic_ping_static_json_payload",level:4},{value:"<code>allowLocalUrls</code> <code>COMPANION_ALLOW_LOCAL_URLS</code>",id:"allowlocalurls-companion_allow_local_urls",level:4},{value:"<code>corsOrigins</code> <code>COMPANION_CLIENT_ORIGINS</code>",id:"corsorigins-companion_client_origins",level:4},{value:"<code>COMPANION_CLIENT_ORIGINS_REGEX</code>",id:"companion_client_origins_regex",level:4},{value:"<code>chunkSize</code> <code>COMPANION_CHUNK_SIZE</code>",id:"chunksize-companion_chunk_size",level:4},{value:"Events",id:"events",level:3},{value:"Frequently asked questions",id:"frequently-asked-questions",level:2},{value:"Do you have a live example?",id:"do-you-have-a-live-example",level:3},{value:"How does the Authentication and Token mechanism work?",id:"how-does-the-authentication-and-token-mechanism-work",level:3},{value:"How to use provider redirect URIs?",id:"how-to-use-provider-redirect-uris",level:3},{value:"How to use Companion with Kubernetes?",id:"how-to-use-companion-with-kubernetes",level:3},{value:"How to add custom providers?",id:"how-to-add-custom-providers",level:3},{value:"list data",id:"list-data",level:4},{value:"How to run Companion locally?",id:"how-to-run-companion-locally",level:3}],d={toc:p};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"companion"},"Companion"),(0,o.kt)("p",null,"Companion is an open source server application which ",(0,o.kt)("strong",{parentName:"p"},"takes away the complexity of authentication\nand the cost of downloading files from remote sources"),", such as Instagram, Google Drive, and others.\nCompanion is a server-to-server orchestrator that streams files from a source to a destination, and files are never stored in Companion.\nCompanion can run either as a standalone (self-hosted) application, ",(0,o.kt)("a",{parentName:"p",href:"#hosted"},"Transloadit-hosted"),", or plugged in as an Express middleware\ninto an existing application.\nThe Uppy client requests remote files from Companion, which it will download and simultaneously upload to your ",(0,o.kt)("a",{parentName:"p",href:"/docs/upload-strategies/tus"},"Tus server"),",\n",(0,o.kt)("a",{parentName:"p",href:"/docs/upload-strategies/aws-s3"},"AWS bucket"),", or any server that supports ",(0,o.kt)("a",{parentName:"p",href:"/docs/upload-strategies/xhr"},"PUT, POST or Multipart uploads"),"."),(0,o.kt)("p",null,"This means a user uploading a 5GB video from Google Drive from their phone isn\u2019t eating into their data plans and you don\u2019t have to worry about implementing OAuth."),(0,o.kt)("h2",{id:"when-should-i-use-it"},"When should I use it?"),(0,o.kt)("p",null,"If you want to let users download files from ",(0,o.kt)("a",{parentName:"p",href:"/docs/sources/companion-plugins/box"},"Box"),", ",(0,o.kt)("a",{parentName:"p",href:"/docs/sources/companion-plugins/dropbox"},"Dropbox"),", ",(0,o.kt)("a",{parentName:"p",href:"/docs/sources/companion-plugins/facebook"},"Facebook"),", ",(0,o.kt)("a",{parentName:"p",href:"/docs/sources/companion-plugins/google-drive"},"Google Drive"),", ",(0,o.kt)("a",{parentName:"p",href:"/docs/sources/companion-plugins/instagram"},"Instagram"),",\n",(0,o.kt)("a",{parentName:"p",href:"/docs/sources/companion-plugins/onedrive"},"OneDrive"),", ",(0,o.kt)("a",{parentName:"p",href:"/docs/sources/companion-plugins/unsplash"},"Unsplash"),", ",(0,o.kt)("a",{parentName:"p",href:"/docs/sources/companion-plugins/url"},"Import from URL"),", or ",(0,o.kt)("a",{parentName:"p",href:"/docs/sources/companion-plugins/zoom"},"Zoom")," \u2014 you need Companion."),(0,o.kt)("p",null,"Companion supports the same ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/choosing-upload-strategy"},"uploaders")," as Uppy:\n",(0,o.kt)("a",{parentName:"p",href:"/docs/upload-strategies/tus"},"Tus"),", ",(0,o.kt)("a",{parentName:"p",href:"/docs/upload-strategies/aws-s3"},"AWS S3"),", and ",(0,o.kt)("a",{parentName:"p",href:"/docs/upload-strategies/tus"},"regular multipart"),". But instead of manually setting a plugin,\nUppy sends along a header with the uploader and Companion will use the same on the server.\nThis means if you are using ",(0,o.kt)("a",{parentName:"p",href:"/docs/uploaders/tus"},"Tus")," for your local uploads, you can send your remote uploads\nto the same Tus server (and likewise for your AWS S3 bucket)."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Companion only deals with ",(0,o.kt)("em",{parentName:"p"},"remote")," files, ",(0,o.kt)("em",{parentName:"p"},"local")," files are still uploaded from the client\nwith your upload plugin.")),(0,o.kt)("h2",{id:"hosted"},"Hosted"),(0,o.kt)("p",null,"Using ",(0,o.kt)("a",{parentName:"p",href:"https://transloadit.com"},"Transloadit")," services comes with a hosted version of Companion so you don\u2019t have to worry about hosting your own server.\nWhether you are on a free or paid Transloadit ",(0,o.kt)("a",{parentName:"p",href:"https://transloadit.com/pricing/"},"plan"),", you can use Companion.\nIt\u2019s not possible to rent a Companion server without a Transloadit plan."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://transloadit.com/pricing/"},(0,o.kt)("strong",{parentName:"a"},"Sign-up for a (free) plan")),"."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Choosing Transloadit for your file services also comes with credentials for all remote providers.\nThis means you don\u2019t have to waste time going through the approval process of every app.\nYou can still add your own credentials in the Transloadit admin page if you want.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Downloading and uploading files through Companion doesn\u2019t count towards\nyour ",(0,o.kt)("a",{parentName:"p",href:"https://transloadit.com/docs/faq/1gb-worth/"},"monthly quota"),",\nit\u2019s a way for files to arrive at Transloadit servers, much like Uppy.")),(0,o.kt)("h2",{id:"installation--use"},"Installation & use"),(0,o.kt)("p",null,"Companion is installed from npm. Depending on how you want to run Companion, the install process is slightly different. Companion can be integrated as middleware into your ",(0,o.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"Express")," app or as a standalone server."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @uppy/companion\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Since v2, you need to be running ",(0,o.kt)("inlineCode",{parentName:"p"},"node.js >= v10.20.1")," to use Companion.\nMore information in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/migrate-2.0"},"migrating to 2.0")," guide."),(0,o.kt)("p",{parentName:"admonition"},"Windows is not a supported platform right now.\nIt may work, and we\u2019re happy to accept improvements in this area, but we can\u2019t provide support.")),(0,o.kt)("h3",{id:"express-middleware"},"Express middleware"),(0,o.kt)("p",null,"First install it into your Node.js project with your favorite package manger:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @uppy/companion\n")),(0,o.kt)("p",null,"To plug Companion into an existing server, call its ",(0,o.kt)("inlineCode",{parentName:"p"},".app")," method,\npassing in an ",(0,o.kt)("a",{parentName:"p",href:"#options"},"options")," object as a parameter.\nThis returns a server instance that you can mount on a route in your Express app."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import express from 'express';\nimport bodyParser from 'body-parser';\nimport session from 'express-session';\nimport companion from '@uppy/companion';\n\nconst app = express();\n\n// Companion requires body-parser and express-session middleware.\n// You can add it like this if you use those throughout your app.\n//\n// If you are using something else in your app, you can add these\n// middlewares in the same subpath as Companion instead.\napp.use(bodyParser.json());\napp.use(session({ secret: 'some secrety secret' }));\n\nconst options = {\n    providerOptions: {\n        drive: {\n            key: 'GOOGLE_DRIVE_KEY',\n            secret: 'GOOGLE_DRIVE_SECRET',\n        },\n    },\n    server: {\n        host: 'localhost:3020',\n        protocol: 'http',\n        // This MUST match the path you specify in `app.use()` below:\n        path: '/companion',\n    },\n    filePath: '/path/to/folder/',\n};\n\napp.use('/companion', companion.app(options));\n")),(0,o.kt)("p",null,"Companion uses WebSockets to communicate progress, errors, and successes to the client.\nThis is what Uppy listens to to update it\u2019s internal state and UI."),(0,o.kt)("p",null,"Add the Companion WebSocket server using the ",(0,o.kt)("inlineCode",{parentName:"p"},"companion.socket")," function:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const server = app.listen(PORT);\n\ncompanion.socket(server);\n")),(0,o.kt)("p",null,"If WebSockets fail for some reason Uppy and Companion will fallback to HTTP polling."),(0,o.kt)("h3",{id:"standalone"},"Standalone"),(0,o.kt)("p",null,"You can use the standalone version if you want to run Companion as it\u2019s own Node process.\nIt\u2019s a configured Express server with sessions, logging, and security best practices.\nFirst you\u2019ll typically want to install it globally:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g @uppy/companion\n")),(0,o.kt)("p",null,"Standalone Companion will always serve HTTP (not HTTPS) and expects a reverse proxy with SSL termination in front of it when running in production. See ",(0,o.kt)("a",{parentName:"p",href:"#server"},(0,o.kt)("inlineCode",{parentName:"a"},"COMPANION_PROTOCOL"))," for more information."),(0,o.kt)("p",null,"Companion ships with an excecutable file (",(0,o.kt)("inlineCode",{parentName:"p"},"bin/companion"),") which is the standalone server.\nUnlike the middleware version, options are set via environment variables."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Checkout ",(0,o.kt)("a",{parentName:"p",href:"#options"},"options")," for the available options in JS and environment variable formats.")),(0,o.kt)("p",null,"You need at least these three to get started:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'export COMPANION_SECRET="shh!Issa Secret!"\nexport COMPANION_DOMAIN="YOUR SERVER DOMAIN"\nexport COMPANION_DATADIR="PATH/TO/DOWNLOAD/DIRECTORY"\n')),(0,o.kt)("p",null,"Then run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"companion\n")),(0,o.kt)("p",null,"You can also pass in the path to your JSON config file, like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"companion --config /path/to/companion.json\n")),(0,o.kt)("p",null,"You may also want to run Companion in a process manager like ",(0,o.kt)("a",{parentName:"p",href:"https://pm2.keymetrics.io/"},"PM2")," to make sure it gets restarted on upon crashing as well as allowing scaling to many instances."),(0,o.kt)("h3",{id:"running-many-instances"},"Running many instances"),(0,o.kt)("p",null,"We recommend running at least two instances in production,\nso that if the Node.js event loop gets blocked by one or more requests (due to a bug or spike in traffic),\nit doesn\u2019t also block or slow down all other requests as well (as Node.js is single threaded)."),(0,o.kt)("p",null,"As an example for scale, one enterprise customer of Transloadit,\nwho self-hosts Companion to power an education service that is used by many universities globally, deploys 7 Companion instances.\nTheir earlier solution ran on 35 instances.\nIn our general experience Companion will saturate network interface cards before other resources on commodity virtual servers (",(0,o.kt)("inlineCode",{parentName:"p"},"c5d.2xlarge")," for instance)."),(0,o.kt)("p",null,"Your mileage may vary, so we recommend to add observability.\nYou can let Prometheus crawl the ",(0,o.kt)("inlineCode",{parentName:"p"},"/metrics")," endpoint and graph that with Grafana for instance."),(0,o.kt)("h4",{id:"using-unique-endpoints"},"Using unique endpoints"),(0,o.kt)("p",null,"One option is to run many instances with each instance having its own unique endpoint.\nThis could be on separate ports, (sub)domain names, or IPs. With this setup, you can either:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Implement your own logic that will direct each upload to a specific Companion endpoint by setting the ",(0,o.kt)("inlineCode",{parentName:"li"},"companionUrl")," option"),(0,o.kt)("li",{parentName:"ol"},"Setting the Companion option ",(0,o.kt)("inlineCode",{parentName:"li"},"COMPANION_SELF_ENDPOINT"),".\nThis option will cause Companion to respond with a ",(0,o.kt)("inlineCode",{parentName:"li"},"i-am")," HTTP header containing the value from ",(0,o.kt)("inlineCode",{parentName:"li"},"COMPANION_SELF_ENDPOINT"),".\nWhen Uppy\u2019s sees this header, it will pin all requests for the upload to this endpoint.")),(0,o.kt)("p",null,"In either case, you would then also typically configure a single Companion instance (one endpoint)\nto handle all OAuth authentication requests, so that you only need to specify a single OAuth callback URL.\nSee also ",(0,o.kt)("inlineCode",{parentName:"p"},"oauthDomain")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"validHosts"),"."),(0,o.kt)("h4",{id:"using-a-load-balancer"},"Using a load balancer"),(0,o.kt)("p",null,"The other option is to set up a load balancer in front of many Companion instances.\nThen Uppy will only see a single endpoint and send all requests to the associated load balancer,\nwhich will then distribute them between Companion instances.\nThe companion instances coordinate their messages and events over Redis so that any instance can serve the client\u2019s requests.\nNote that sticky sessions are ",(0,o.kt)("strong",{parentName:"p"},"not")," needed with this setup. Here are the requirements for this setup:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The instances need to be connected to the same Redis server."),(0,o.kt)("li",{parentName:"ul"},"You need to set ",(0,o.kt)("inlineCode",{parentName:"li"},"COMPANION_SECRET")," to the same value on both servers."),(0,o.kt)("li",{parentName:"ul"},"if you use the ",(0,o.kt)("inlineCode",{parentName:"li"},"companionKeysParams")," feature (Transloadit), you also need ",(0,o.kt)("inlineCode",{parentName:"li"},"COMPANION_PREAUTH_SECRET")," to be the same on each instance."),(0,o.kt)("li",{parentName:"ul"},"All other configuration needs to be the same, except if you\u2019re running many instances on the same machine, then ",(0,o.kt)("inlineCode",{parentName:"li"},"COMPANION_PORT")," should be different for each instance.")),(0,o.kt)("h2",{id:"api"},"API"),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The headings display the JS and environment variable options (",(0,o.kt)("inlineCode",{parentName:"p"},"option")," ",(0,o.kt)("inlineCode",{parentName:"p"},"ENV_OPTION"),").\nWhen integrating Companion into your own server, you pass the options to ",(0,o.kt)("inlineCode",{parentName:"p"},"companion.app()"),".\nIf you are using the standalone version, you configure Companion using environment variables.\nSome options only exist as environment variables or only as a JS option.")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Default configuration"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const options = {\n    server: {\n        protocol: 'http',\n        path: '',\n    },\n    providerOptions: {},\n    s3: {\n        endpoint: 'https://{service}.{region}.amazonaws.com',\n        conditions: [],\n        useAccelerateEndpoint: false,\n        getKey: (req, filename) => `${crypto.randomUUID()}-${filename}`,\n        expires: 800, // seconds\n    },\n    allowLocalUrls: false,\n    logClientVersion: true,\n    periodicPingUrls: [],\n    streamingUpload: false,\n    clientSocketConnectTimeout: 60000,\n    metrics: true,\n};\n"))),(0,o.kt)("h4",{id:"filepath-companion_datadir"},(0,o.kt)("inlineCode",{parentName:"h4"},"filePath")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_DATADIR")),(0,o.kt)("p",null,"Full path to the directory to which provider files will be downloaded temporarily."),(0,o.kt)("h4",{id:"secret-companion_secret-companion_secret_file"},(0,o.kt)("inlineCode",{parentName:"h4"},"secret")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_SECRET")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_SECRET_FILE")),(0,o.kt)("p",null,"A secret string which Companion uses to generate authorization tokens.\nYou should generate a long random string for this. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const crypto = require('crypto');\n\nconst secret = crypto.randomBytes(64).toString('hex');\n")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Omitting the ",(0,o.kt)("inlineCode",{parentName:"p"},"secret")," in the standalone version will generate a secret for you,\nusing the above ",(0,o.kt)("inlineCode",{parentName:"p"},"crypto")," string. But when integrating with Express you must provide it yourself.\nThis is an essential security measure.")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Using a secret file means passing an absolute path to a file with any extension,\nwhich has only the secret, nothing else.")),(0,o.kt)("h4",{id:"preauthsecret-companion_preauth_secret-companion_preauth_secret_file"},(0,o.kt)("inlineCode",{parentName:"h4"},"preAuthSecret")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_PREAUTH_SECRET")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_PREAUTH_SECRET_FILE")),(0,o.kt)("p",null,"If you are using the ",(0,o.kt)("a",{parentName:"p",href:"/docs/upload-strategies/transloadit"},"Transloadit")," ",(0,o.kt)("inlineCode",{parentName:"p"},"companionKeysParams")," feature (Transloadit-hosted Companion using your own custom OAuth credentials),\nset this variable to a strong randomly generated secret. See also ",(0,o.kt)("inlineCode",{parentName:"p"},"COMPANION_SECRET")," (but do not use the same secret!)"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Using a secret file means passing an absolute path to a file with any extension,\nwhich has only the secret, nothing else.")),(0,o.kt)("h4",{id:"uploadurls-companion_upload_urls"},(0,o.kt)("inlineCode",{parentName:"h4"},"uploadUrls")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_UPLOAD_URLS")),(0,o.kt)("p",null,"An allowlist (array) of strings (exact URLs) or regular expressions. Companion will only accept uploads to these URLs. This ensures that your Companion instance is only allowed to upload to your trusted servers and prevents ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Server-side_request_forgery"},"SSRF")," attacks."),(0,o.kt)("h4",{id:"companion_port"},(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_PORT")),(0,o.kt)("p",null,"The port on which to start the standalone server, defaults to 3020."),(0,o.kt)("h4",{id:"companion_cookie_domain"},(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_COOKIE_DOMAIN")),(0,o.kt)("p",null,"Allows you to customize the domain of the cookies created for Express sessions."),(0,o.kt)("h4",{id:"companion_hide_welcome"},(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_HIDE_WELCOME")),(0,o.kt)("p",null,"Setting this to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," disables the welcome message shown at ",(0,o.kt)("inlineCode",{parentName:"p"},"/"),"."),(0,o.kt)("h4",{id:"redisurl-companion_redis_url"},(0,o.kt)("inlineCode",{parentName:"h4"},"redisUrl")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_REDIS_URL")),(0,o.kt)("p",null,"URL to running Redis server. This can be used to scale Companion horizontally using many instances. See ",(0,o.kt)("a",{parentName:"p",href:"#how-to-scale-companion"},"How to scale Companion"),"."),(0,o.kt)("h4",{id:"redisoptions"},(0,o.kt)("inlineCode",{parentName:"h4"},"redisOptions")),(0,o.kt)("p",null,"An object of ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/redis#options-object-properties"},"options supported by redis client"),".\nThis option can be used in place of ",(0,o.kt)("inlineCode",{parentName:"p"},"redisUrl"),"."),(0,o.kt)("h4",{id:"redispubsubscope"},(0,o.kt)("inlineCode",{parentName:"h4"},"redisPubSubScope")),(0,o.kt)("p",null,"Use a scope for the companion events at the Redis server.\nSetting this option will prefix all events with the name provided and a colon."),(0,o.kt)("h4",{id:"server"},(0,o.kt)("inlineCode",{parentName:"h4"},"server")),(0,o.kt)("p",null,"Configuation options for the underlying server."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Key / Environment variable"),(0,o.kt)("th",{parentName:"tr",align:null},"Value"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"protocol")," ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_PROTOCOL")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"http")," or ",(0,o.kt)("inlineCode",{parentName:"td"},"https")),(0,o.kt)("td",{parentName:"tr",align:null},"Used to build a URL to reference the Companion instance itself, which is used for headers and cookies. Companion itself always runs as a HTTP server, so locally you should use ",(0,o.kt)("inlineCode",{parentName:"td"},"http"),". You must to set this to ",(0,o.kt)("inlineCode",{parentName:"td"},"https")," once you enabled SSL/HTTPS for your domain in production by running a reverse https-proxy in front of Companion, or with a built-in HTTPS feature of your hosting service.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"host")," ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_DOMAIN")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"String")),(0,o.kt)("td",{parentName:"tr",align:null},"Your server\u2019s publically facing hostname (for example ",(0,o.kt)("inlineCode",{parentName:"td"},"example.com"),").")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"oauthDomain")," ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_OAUTH_DOMAIN")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"String")),(0,o.kt)("td",{parentName:"tr",align:null},"If you have several instances of Companion with different (and perhaps dynamic) subdomains, you can set a single fixed subdomain and server (such as ",(0,o.kt)("inlineCode",{parentName:"td"},"sub1.example.com"),") to handle your OAuth authentication for you. This would then redirect back to the correct instance with the required credentials on completion. This way you only need to configure a single callback URL for OAuth providers.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"path")," ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_PATH")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"String")),(0,o.kt)("td",{parentName:"tr",align:null},"The server path to where the Companion app is sitting. For instance, if Companion is at ",(0,o.kt)("inlineCode",{parentName:"td"},"example.com/companion"),", then the path would be ",(0,o.kt)("inlineCode",{parentName:"td"},"/companion"),").")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"implicitPath")," ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_IMPLICIT_PATH")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"String")),(0,o.kt)("td",{parentName:"tr",align:null},"If the URL\u2019s path in your reverse proxy is different from your Companion path in your express app, then you need to set this path as ",(0,o.kt)("inlineCode",{parentName:"td"},"implicitPath"),". For instance, if your Companion URL is ",(0,o.kt)("inlineCode",{parentName:"td"},"example.com/mypath/companion"),". Where the path ",(0,o.kt)("inlineCode",{parentName:"td"},"/mypath")," is defined in your NGINX server, while ",(0,o.kt)("inlineCode",{parentName:"td"},"/companion")," is set in your express app. Then you need to set the option ",(0,o.kt)("inlineCode",{parentName:"td"},"implicitPath")," to ",(0,o.kt)("inlineCode",{parentName:"td"},"/mypath"),", and set the ",(0,o.kt)("inlineCode",{parentName:"td"},"path")," option to ",(0,o.kt)("inlineCode",{parentName:"td"},"/companion"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"validHosts")," ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_DOMAINS")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Array")),(0,o.kt)("td",{parentName:"tr",align:null},"If you are setting an ",(0,o.kt)("inlineCode",{parentName:"td"},"oauthDomain"),", you need to set a list of valid hosts, so the oauth handler can validate the host of the Uppy instance requesting the authentication. This is essentially a list of valid domains running your Companion instances. The list may also contain regex patterns. e.g ",(0,o.kt)("inlineCode",{parentName:"td"},"['sub2.example.com', 'sub3.example.com', '(\\\\w+).example.com']"))))),(0,o.kt)("h4",{id:"sendselfendpoint-companion_self_endpoint"},(0,o.kt)("inlineCode",{parentName:"h4"},"sendSelfEndpoint")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_SELF_ENDPOINT")),(0,o.kt)("p",null,"This is essentially the same as the ",(0,o.kt)("inlineCode",{parentName:"p"},"server.host + server.path")," attributes.\nThe major reason for this attribute is that, when set, it adds the value as the ",(0,o.kt)("inlineCode",{parentName:"p"},"i-am")," header of every request response."),(0,o.kt)("h4",{id:"provideroptions"},(0,o.kt)("inlineCode",{parentName:"h4"},"providerOptions")),(0,o.kt)("p",null,"Object to enable providers with their keys and secrets. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "drive": {\n        "key": "***",\n        "secret": "***"\n    }\n}\n')),(0,o.kt)("p",null,"When using the standalone version you use the corresponding environment variables\nor point to a secret file (such as ",(0,o.kt)("inlineCode",{parentName:"p"},"COMPANION_GOOGLE_SECRET_FILE"),")."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Secret files need an absolute path to a file with any extension which only has the secret, nothing else.")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Service"),(0,o.kt)("th",{parentName:"tr",align:null},"Key"),(0,o.kt)("th",{parentName:"tr",align:null},"Environment variables"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Box"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"box")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_BOX_KEY"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_BOX_SECRET"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_BOX_SECRET_FILE"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Dropbox"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"dropbox")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_DROPBOX_KEY"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_DROPBOX_SECRET"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_DROPBOX_SECRET_FILE"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Facebook"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"facebook")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_FACEBOOK_KEY"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_FACEBOOK_SECRET"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_FACEBOOK_SECRET_FILE"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Google Drive"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"drive")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_GOOGLE_KEY"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_GOOGLE_SECRET"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_GOOGLE_SECRET_FILE"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Instagram"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"instagram")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_INSTAGRAM_KEY"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_INSTAGRAM_SECRET"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_INSTAGRAM_SECRET_FILE"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"OneDrive"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"onedrive")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_ONEDRIVE_KEY"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_ONEDRIVE_SECRET"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_ONEDRIVE_SECRET_FILE"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_ONEDRIVE_DOMAIN_VALIDATION")," (Settings this variable to ",(0,o.kt)("inlineCode",{parentName:"td"},"true")," enables a route that can be used to validate your app with OneDrive)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Zoom"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"zoom")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_ZOOM_KEY"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_ZOOM_SECRET"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_ZOOM_SECRET_FILE"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"COMPANION_ZOOM_VERIFICATION_TOKEN"))))),(0,o.kt)("h4",{id:"s3"},(0,o.kt)("inlineCode",{parentName:"h4"},"s3")),(0,o.kt)("p",null,"Companion comes with signature endpoints for AWS S3.\nThese can be used by the Uppy client to sign requests to upload files directly to S3, without exposing secret S3 keys in the browser.\nCompanion also supports uploading files from providers like Dropbox and Instagram directly into S3."),(0,o.kt)("h5",{id:"s3key-companion_aws_key"},(0,o.kt)("inlineCode",{parentName:"h5"},"s3.key")," ",(0,o.kt)("inlineCode",{parentName:"h5"},"COMPANION_AWS_KEY")),(0,o.kt)("p",null,"The S3 access key ID."),(0,o.kt)("h5",{id:"s3secret-companion_aws_secret-companion_aws_secret_file"},(0,o.kt)("inlineCode",{parentName:"h5"},"s3.secret")," ",(0,o.kt)("inlineCode",{parentName:"h5"},"COMPANION_AWS_SECRET")," ",(0,o.kt)("inlineCode",{parentName:"h5"},"COMPANION_AWS_SECRET_FILE")),(0,o.kt)("p",null,"The S3 secret access key."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Using a secret file means passing an absolute path to a file with any extension,\nwhich has only the secret, nothing else.")),(0,o.kt)("h5",{id:"s3bucket-companion_aws_bucket"},(0,o.kt)("inlineCode",{parentName:"h5"},"s3.bucket")," ",(0,o.kt)("inlineCode",{parentName:"h5"},"COMPANION_AWS_BUCKET")),(0,o.kt)("p",null,"The name of the bucket to store uploaded files in."),(0,o.kt)("h5",{id:"s3region-companion_aws_region"},(0,o.kt)("inlineCode",{parentName:"h5"},"s3.region")," ",(0,o.kt)("inlineCode",{parentName:"h5"},"COMPANION_AWS_REGION")),(0,o.kt)("p",null,"The datacenter region where the target bucket is located."),(0,o.kt)("h5",{id:"s3awsclientoptions"},(0,o.kt)("inlineCode",{parentName:"h5"},"s3.awsClientOptions")),(0,o.kt)("p",null,"You can supply any ",(0,o.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#constructor-property"},"S3 option supported by the AWS SDK"),"\nin the ",(0,o.kt)("inlineCode",{parentName:"p"},"providerOptions.s3.awsClientOptions")," object, ",(0,o.kt)("em",{parentName:"p"},"except for")," the below:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"accessKeyId"),". Instead, use the ",(0,o.kt)("inlineCode",{parentName:"li"},"providerOptions.s3.key")," property.\nThis is to make configuration names consistent between different Companion features."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"secretAccessKey"),". Instead, use the ",(0,o.kt)("inlineCode",{parentName:"li"},"providerOptions.s3.secret")," property.\nThis is to make configuration names consistent between different Companion features.")),(0,o.kt)("p",null,"Be aware that some options may cause wrong behaviour if they conflict with Companion\u2019s assumptions.\nIf you find that a particular option does not work as expected, please ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/transloadit/uppy/issues/new"},"open an issue on the Uppy repository")," so we can document it here."),(0,o.kt)("h5",{id:"s3getkeyreq-filename-metadata"},(0,o.kt)("inlineCode",{parentName:"h5"},"s3.getKey(req, filename, metadata)")),(0,o.kt)("p",null,"Get the key name for a file. The key is the file path to which the file will be uploaded in your bucket.\nThis option should be a function receiving three arguments:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"req"),", the HTTP request, for ",(0,o.kt)("em",{parentName:"li"},"regular")," S3 uploads using the ",(0,o.kt)("inlineCode",{parentName:"li"},"@uppy/aws-s3")," plugin.\nThis parameter is ",(0,o.kt)("em",{parentName:"li"},"not")," available for multipart uploads using the ",(0,o.kt)("inlineCode",{parentName:"li"},"@uppy/aws-s3-multipart")," plugin;"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"filename"),", the original name of the uploaded file;"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"metadata"),", user-provided metadata for the file.\nSee the ",(0,o.kt)("a",{parentName:"li",href:"https://uppy.io/docs/aws-s3/#metaFields"},(0,o.kt)("inlineCode",{parentName:"a"},"@uppy/aws-s3"))," docs. The ",(0,o.kt)("inlineCode",{parentName:"li"},"@uppy/aws-s3-multipart")," plugin unconditionally sends all metadata fields, so they all are available here.")),(0,o.kt)("p",null,"This function should return a string ",(0,o.kt)("inlineCode",{parentName:"p"},"key"),".\nThe ",(0,o.kt)("inlineCode",{parentName:"p"},"req")," parameter can be used to upload to a user-specific folder in your bucket, for example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"app.use(authenticationMiddleware);\napp.use(\n    uppy.app({\n        providerOptions: {\n            s3: {\n                getKey: (req, filename, metadata) => `${req.user.id}/${filename}`,\n                /* auth options */\n            },\n        },\n    }),\n);\n")),(0,o.kt)("p",null,"The default implementation returns the ",(0,o.kt)("inlineCode",{parentName:"p"},"filename"),",\nso all files will be uploaded to the root of the bucket as their original file name."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"app.use(\n    uppy.app({\n        providerOptions: {\n            s3: {\n                getKey: (req, filename, metadata) => filename,\n            },\n        },\n    }),\n);\n")),(0,o.kt)("h4",{id:"companion_aws_use_accelerate_endpoint"},(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_AWS_USE_ACCELERATE_ENDPOINT")),(0,o.kt)("p",null,"Enable S3 ",(0,o.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AmazonS3/latest/userguide/transfer-acceleration.html"},"Transfer Acceleration"),"."),(0,o.kt)("h4",{id:"companion_aws_expires"},(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_AWS_EXPIRES")),(0,o.kt)("p",null,"Set ",(0,o.kt)("inlineCode",{parentName:"p"},"X-Amz-Expires")," query parameter in the presigned urls (in seconds, default: 300)."),(0,o.kt)("h4",{id:"companion_aws_acl"},(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_AWS_ACL")),(0,o.kt)("p",null,"Set a ",(0,o.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl"},"Canned ACL")," for uploaded objects."),(0,o.kt)("h4",{id:"customproviders"},(0,o.kt)("inlineCode",{parentName:"h4"},"customProviders")),(0,o.kt)("p",null,"This option enables you to add custom providers along with the already supported providers.\nSee ",(0,o.kt)("a",{parentName:"p",href:"#how-to-add-custom-providers"},"adding custom providers")," for more information."),(0,o.kt)("h4",{id:"logclientversion"},(0,o.kt)("inlineCode",{parentName:"h4"},"logClientVersion")),(0,o.kt)("p",null,"A boolean flag to tell Companion whether to log its version upon startup."),(0,o.kt)("h4",{id:"metrics-companion_hide_metrics"},(0,o.kt)("inlineCode",{parentName:"h4"},"metrics")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_HIDE_METRICS")),(0,o.kt)("p",null,"A boolean flag to tell Companion whether to provide an endpoint ",(0,o.kt)("inlineCode",{parentName:"p"},"/metrics")," with Prometheus metrics (by default metrics are enabled.)"),(0,o.kt)("h4",{id:"streamingupload-companion_streaming_upload"},(0,o.kt)("inlineCode",{parentName:"h4"},"streamingUpload")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_STREAMING_UPLOAD")),(0,o.kt)("p",null,"A boolean flag to tell Companion whether to enable streaming uploads.\nIf enabled, it will lead to ",(0,o.kt)("em",{parentName:"p"},"faster uploads")," because companion will start uploading at the same time as downloading using ",(0,o.kt)("inlineCode",{parentName:"p"},"stream.pipe"),".\nIf ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),", files will be fully downloaded first, then uploaded. Defaults to ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),",\nbut we recommended enabling it, especially if you\u2019re expecting to upload large files.\nIn future versions the default might change to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,o.kt)("h4",{id:"maxfilesize-companion_max_file_size"},(0,o.kt)("inlineCode",{parentName:"h4"},"maxFileSize")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_MAX_FILE_SIZE")),(0,o.kt)("p",null,"If this value is set, companion will limit the maximum file size to process.\nIf unset, it will process files without any size limit (this is the default)."),(0,o.kt)("h4",{id:"periodicpingurls-companion_periodic_ping_urls"},(0,o.kt)("inlineCode",{parentName:"h4"},"periodicPingUrls")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_PERIODIC_PING_URLS")),(0,o.kt)("p",null,"If this value is set, companion will periodically send POST requests to the specified URLs.\nUseful for keeping track of companion instances as a keep-alive."),(0,o.kt)("h4",{id:"periodicpinginterval-companion_periodic_ping_interval"},(0,o.kt)("inlineCode",{parentName:"h4"},"periodicPingInterval")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_PERIODIC_PING_INTERVAL")),(0,o.kt)("p",null,"Interval for periodic ping requests (in ms)."),(0,o.kt)("h4",{id:"periodicpingstaticpayload-companion_periodic_ping_static_json_payload"},(0,o.kt)("inlineCode",{parentName:"h4"},"periodicPingStaticPayload")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_PERIODIC_PING_STATIC_JSON_PAYLOAD")),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"JSON.stringify"),"-able JavaScript Object that will be sent as part of the JSON body in the period ping requests."),(0,o.kt)("h4",{id:"allowlocalurls-companion_allow_local_urls"},(0,o.kt)("inlineCode",{parentName:"h4"},"allowLocalUrls")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_ALLOW_LOCAL_URLS")),(0,o.kt)("p",null,"A boolean flag to tell Companion whether to allow requesting local URLs (non-internet IPs)."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Only enable this in development. ",(0,o.kt)("strong",{parentName:"p"},"Enabling it in production is a security risk."))),(0,o.kt)("h4",{id:"corsorigins-companion_client_origins"},(0,o.kt)("inlineCode",{parentName:"h4"},"corsOrigins")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_CLIENT_ORIGINS")),(0,o.kt)("p",null,"Allowed CORS Origins (default ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),").\nPassed as the ",(0,o.kt)("inlineCode",{parentName:"p"},"origin")," option in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/expressjs/cors#configuration-options"},"cors"),")"),(0,o.kt)("h4",{id:"companion_client_origins_regex"},(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_CLIENT_ORIGINS_REGEX")),(0,o.kt)("p",null,"Like COMPANION_CLIENT_ORIGINS, but allows a single regex instead.\n",(0,o.kt)("inlineCode",{parentName:"p"},"COMPANION_CLIENT_ORIGINS")," will be ignored if this is used."),(0,o.kt)("h4",{id:"chunksize-companion_chunk_size"},(0,o.kt)("inlineCode",{parentName:"h4"},"chunkSize")," ",(0,o.kt)("inlineCode",{parentName:"h4"},"COMPANION_CHUNK_SIZE")),(0,o.kt)("p",null,"Controls how big the uploaded chunks are for AWS S3 Multipart and Tus.\nSmaller values lead to more overhead, but larger values lead to slower retries in case of bad network connections.\nPassed to tus-js-client ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/tus/tus-js-client/blob/master/docs/api.md#chunksize"},(0,o.kt)("inlineCode",{parentName:"a"},"chunkSize"))," as well as ",(0,o.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html"},"AWS S3 Multipart")," ",(0,o.kt)("inlineCode",{parentName:"p"},"partSize"),"."),(0,o.kt)("h3",{id:"events"},"Events"),(0,o.kt)("p",null,"The object returned by ",(0,o.kt)("inlineCode",{parentName:"p"},"companion.app()")," also has a property ",(0,o.kt)("inlineCode",{parentName:"p"},"companionEmitter")," which is an ",(0,o.kt)("inlineCode",{parentName:"p"},"EventEmitter"),"\nthat emits the following events:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"upload-start")," - When an upload starts, this event is emitted with an object containing the property ",(0,o.kt)("inlineCode",{parentName:"li"},"token"),", which is a unique ID for the upload."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"token")," - The event name is the token from ",(0,o.kt)("inlineCode",{parentName:"li"},"upload-start"),". The event has an object with the following properties:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"action")," - One of the following strings:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"success")," - When the upload succeeds."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"error")," - When the upload fails with an error."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"payload")," - the error or success payload.")))),(0,o.kt)("p",null,"Example code for using the ",(0,o.kt)("inlineCode",{parentName:"p"},"EventEmitter")," to handle a finished file upload:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const companionApp = companion.app(options);\nconst { companionEmitter: emitter } = companionApp;\n\nemitter.on('upload-start', ({ token }) => {\n    console.log('Upload started', token);\n\n    function onUploadEvent({ action, payload }) {\n        if (action === 'success') {\n            emitter.off(token, onUploadEvent); // avoid listener leak\n            console.log('Upload finished', token, payload.url);\n        } else if (action === 'error') {\n            emitter.off(token, onUploadEvent); // avoid listener leak\n            console.error('Upload failed', payload);\n        }\n    }\n    emitter.on(token, onUploadEvent);\n});\n")),(0,o.kt)("h2",{id:"frequently-asked-questions"},"Frequently asked questions"),(0,o.kt)("h3",{id:"do-you-have-a-live-example"},"Do you have a live example?"),(0,o.kt)("p",null,"An example server is running at ",(0,o.kt)("a",{parentName:"p",href:"https://companion.uppy.io"},"https://companion.uppy.io"),"."),(0,o.kt)("h3",{id:"how-does-the-authentication-and-token-mechanism-work"},"How does the Authentication and Token mechanism work?"),(0,o.kt)("p",null,"This section describes how Authentication works between Companion and Providers. While this behaviour is the same for all Providers (Dropbox, Instagram, Google Drive, etc.), we are going to be referring to Dropbox in place of any Provider throughout this section."),(0,o.kt)("p",null,"The following steps describe the actions that take place when a user Authenticates and Uploads from Dropbox through Companion:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The visitor to a website with Uppy clicks ",(0,o.kt)("inlineCode",{parentName:"li"},"Connect to Dropbox"),"."),(0,o.kt)("li",{parentName:"ul"},"Uppy sends a request to Companion, which in turn sends an OAuth request to Dropbox (Requires that OAuth credentials from Dropbox have been added to Companion)."),(0,o.kt)("li",{parentName:"ul"},"Dropbox asks the visitor to log in, and whether the Website should be allowed to access your files"),(0,o.kt)("li",{parentName:"ul"},"If the visitor agrees, Companion will receive a token from Dropbox, with which we can temporarily download files."),(0,o.kt)("li",{parentName:"ul"},"Companion encrypts the token with a secret key and sends the encrypted token to Uppy (client)"),(0,o.kt)("li",{parentName:"ul"},"Every time the visitor clicks on a folder in Uppy, it asks Companion for the new list of files, with this question, the token (still encrypted by Companion) is sent along."),(0,o.kt)("li",{parentName:"ul"},"Companion decrypts the token, requests the list of files from Dropbox and sends it to Uppy."),(0,o.kt)("li",{parentName:"ul"},"When a file is selected for upload, Companion receives the token again according to this procedure, decrypts it again, and thereby downloads the file from Dropbox."),(0,o.kt)("li",{parentName:"ul"},"As the bytes arrive, Companion uploads the bytes to the final destination (depending on the configuration: Apache, a Tus server, S3 bucket, etc)."),(0,o.kt)("li",{parentName:"ul"},"Companion reports progress to Uppy, as if it were a local upload."),(0,o.kt)("li",{parentName:"ul"},"Completed!")),(0,o.kt)("h3",{id:"how-to-use-provider-redirect-uris"},"How to use provider redirect URIs?"),(0,o.kt)("p",null,"When generating your provider API keys on their corresponding developer platforms (e.g ",(0,o.kt)("a",{parentName:"p",href:"https://console.developers.google.com/"},"Google Developer Console"),"), you\u2019d need to provide a ",(0,o.kt)("inlineCode",{parentName:"p"},"redirect URI")," for the OAuth authorization process. In general the redirect URI for each provider takes the format:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"http(s)://$YOUR_COMPANION_HOST_NAME/$PROVIDER_NAME/redirect")),(0,o.kt)("p",null,"For example, if your Companion server is hosted on ",(0,o.kt)("inlineCode",{parentName:"p"},"https://my.companion.server.com"),", then the redirect URI you would supply for your OneDrive provider would be:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"https://my.companion.server.com/onedrive/redirect")),(0,o.kt)("p",null,"Please see ",(0,o.kt)("a",{parentName:"p",href:"https://uppy.io/docs/companion/#Supported-providers"},"Supported Providers")," for a list of all Providers and their corresponding names."),(0,o.kt)("h3",{id:"how-to-use-companion-with-kubernetes"},"How to use Companion with Kubernetes?"),(0,o.kt)("p",null,"We have a detailed ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/transloadit/uppy/blob/main/packages/%40uppy/companion/KUBERNETES.md"},"guide")," on running Companion in Kubernetes."),(0,o.kt)("h3",{id:"how-to-add-custom-providers"},"How to add custom providers?"),(0,o.kt)("p",null,"As of now, Companion supports the ",(0,o.kt)("a",{parentName:"p",href:"https://uppy.io/docs/companion/#Supported-providers"},"providers listed here")," out of the box, but you may also choose to add your own custom providers. You can do this by passing the ",(0,o.kt)("inlineCode",{parentName:"p"},"customProviders")," option when calling the Uppy ",(0,o.kt)("inlineCode",{parentName:"p"},"app")," method. The custom provider is expected to support Oauth 1 or 2 for authentication/authorization."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import providerModule from './path/to/provider/module';\n\nconst options = {\n    customProviders: {\n        myprovidername: {\n            config: {\n                authorize_url: 'https://mywebsite.com/authorize',\n                access_url: 'https://mywebsite.com/token',\n                oauth: 2,\n                key: '***',\n                secret: '***',\n                scope: ['read', 'write'],\n            },\n            module: providerModule,\n        },\n    },\n};\n\nuppy.app(options);\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"customProviders")," option should be an object containing each custom provider. Each custom provider would, in turn, be an object with two keys, ",(0,o.kt)("inlineCode",{parentName:"p"},"config")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"module"),". The ",(0,o.kt)("inlineCode",{parentName:"p"},"config")," option would contain Oauth API settings, while the ",(0,o.kt)("inlineCode",{parentName:"p"},"module")," would point to the provider module."),(0,o.kt)("p",null,"To work well with Companion, the ",(0,o.kt)("strong",{parentName:"p"},"module")," must be a class with the following methods. Note that the methods must be ",(0,o.kt)("inlineCode",{parentName:"p"},"async"),", return a ",(0,o.kt)("inlineCode",{parentName:"p"},"Promise")," or reject with an ",(0,o.kt)("inlineCode",{parentName:"p"},"Error"),"):"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"async list ({ token, directory, query })")," - Returns a object containing a list of user files (such as a list of all the files in a particular directory). See ",(0,o.kt)("a",{parentName:"li",href:"#list-data"},"example returned list data structure"),".\n",(0,o.kt)("inlineCode",{parentName:"li"},"token")," - authorization token (retrieved from oauth process) to send along with your request",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"directory")," - the id/name of the directory from which data is to be retrieved. This may be ignored if it doesn\u2019t apply to your provider"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"query")," - expressjs query params object received by the server (in case some data you need in there)."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"async download ({ token, id, query })")," - Downloads a particular file from the provider. Returns an object with a single property ",(0,o.kt)("inlineCode",{parentName:"li"},"{ stream }")," - a ",(0,o.kt)("a",{parentName:"li",href:"https://nodejs.org/api/stream.html#stream_class_stream_readable"},(0,o.kt)("inlineCode",{parentName:"a"},"stream.Readable")),", which will be read from and uploaded to the destination. To prevent memory leaks, make sure you release your stream if you reject this method with an error.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"token")," - authorization token (retrieved from oauth process) to send along with your request."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"id")," - ID of the file being downloaded."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"query")," - expressjs query params object received by the server (in case some data you need in there)."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"async size ({ token, id, query })")," - Returns the byte size of the file that needs to be downloaded as a ",(0,o.kt)("inlineCode",{parentName:"li"},"Number"),". If the size of the object is not known, ",(0,o.kt)("inlineCode",{parentName:"li"},"null")," may be returned.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"token")," - authorization token (retrieved from oauth process) to send along with your request."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"id")," - ID of the file being downloaded."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"query")," - expressjs query params object received by the server (in case some data you need in there).")))),(0,o.kt)("p",null,"The class must also have:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A unique ",(0,o.kt)("inlineCode",{parentName:"li"},"authProvider")," string property - a lowercased value which typically indicates the name of the provider (e.g \u201cdropbox\u201d)."),(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("inlineCode",{parentName:"li"},"static")," property ",(0,o.kt)("inlineCode",{parentName:"li"},"static version = 2"),", which is the current version of the Companion Provider API.")),(0,o.kt)("p",null,"See also ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/transloadit/uppy/blob/main/examples/custom-provider/server"},"example code with a custom provider"),"."),(0,o.kt)("h4",{id:"list-data"},"list data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    // username or email of the user whose provider account is being accessed\n    "username": "johndoe",\n    // list of files and folders in the directory. An item is considered a folder\n    //  if it mainly exists as a collection to contain sub-items\n    "items": [\n        {\n            // boolean value of whether or NOT it\'s a folder\n            "isFolder": false,\n            // icon image URL\n            "icon": "https://random-api.url.com/fileicon.jpg",\n            // name of the item\n            "name": "myfile.jpg",\n            // the mime type of the item. Only relevant if the item is NOT a folder\n            "mimeType": "image/jpg",\n            // the id (in string) of the item\n            "id": "uniqueitemid",\n            // thumbnail image URL. Only relevant if the item is NOT a folder\n            "thumbnail": "https://random-api.url.com/filethumbnail.jpg",\n            // for folders this is typically the value that will be passed as "directory" in the list(...) method.\n            // For files, this is the value that will be passed as id in the download(...) method.\n            "requestPath": "file-or-folder-requestpath",\n            // datetime string (in ISO 8601 format) of when this item was last modified\n            "modifiedDate": "2020-06-29T19:59:58Z",\n            // the size in bytes of the item. Only relevant if the item is NOT a folder\n            "size": 278940,\n            "custom": {\n                // an object that may contain some more custom fields that you may need to send to the client. Only add this object if you have a need for it.\n                "customData1": "the value",\n                "customData2": "the value"\n            }\n            // more items here\n        }\n    ],\n    // if the "items" list is paginated, this is the request path needed to fetch the next page.\n    "nextPagePath": "directory-name?cursor=cursor-to-next-page"\n}\n')),(0,o.kt)("h3",{id:"how-to-run-companion-locally"},"How to run Companion locally?"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"To set up Companion for local development, please clone the Uppy repo and\ninstall, like so:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/transloadit/uppy\ncd uppy\nyarn install\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Configure your environment variables by copying the ",(0,o.kt)("inlineCode",{parentName:"p"},"env.example.sh")," file to\n",(0,o.kt)("inlineCode",{parentName:"p"},"env.sh")," and edit it to its correct values."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cp env.example.sh env.sh\n$EDITOR env.sh\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"To start the server, run:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn run start:companion\n")))),(0,o.kt)("p",null,"This would get the Companion instance running on ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:3020"),". It uses ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/remy/nodemon"},"nodemon")," so it will automatically restart when files are changed."))}m.isMDXComponent=!0}}]);