"use strict";(self.webpackChunkuppy_io=self.webpackChunkuppy_io||[]).push([[7199],{5162:(e,r,t)=>{t.d(r,{Z:()=>l});var n=t(7294),a=t(6010);const i="tabItem_Ymn6";function l(e){let{children:r,hidden:t,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(i,l),hidden:t},r)}},5488:(e,r,t)=>{t.d(r,{Z:()=>m});var n=t(7462),a=t(7294),i=t(6010),l=t(2389),s=t(7392),o=t(7094),p=t(2466);const u="tabList__CuJ",d="tabItem_LNqP";function c(e){const{lazy:r,block:t,defaultValue:l,values:c,groupId:m,className:k}=e,h=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=c??h.map((e=>{let{props:{value:r,label:t,attributes:n}}=e;return{value:r,label:t,attributes:n}})),g=(0,s.l)(v,((e,r)=>e.value===r.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===l?l:l??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==f&&!v.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:b}=(0,o.U)(),[w,N]=(0,a.useState)(f),x=[],{blockElementScrollPositionUntilNextRender:C}=(0,p.o5)();if(null!=m){const e=y[m];null!=e&&e!==w&&v.some((r=>r.value===e))&&N(e)}const I=e=>{const r=e.currentTarget,t=x.indexOf(r),n=v[t].value;n!==w&&(C(r),N(n),null!=m&&b(m,String(n)))},T=e=>{let r=null;switch(e.key){case"Enter":I(e);break;case"ArrowRight":{const t=x.indexOf(e.currentTarget)+1;r=x[t]??x[0];break}case"ArrowLeft":{const t=x.indexOf(e.currentTarget)-1;r=x[t]??x[x.length-1];break}}r?.focus()};return a.createElement("div",{className:(0,i.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},k)},v.map((e=>{let{value:r,label:t,attributes:l}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===r?0:-1,"aria-selected":w===r,key:r,ref:e=>x.push(e),onKeyDown:T,onClick:I},l,{className:(0,i.Z)("tabs__item",d,l?.className,{"tabs__item--active":w===r})}),t??r)}))),r?(0,a.cloneElement)(h.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},h.map(((e,r)=>(0,a.cloneElement)(e,{key:r,hidden:e.props.value!==w})))))}function m(e){const r=(0,l.Z)();return a.createElement(c,(0,n.Z)({key:String(r)},e))}},3068:(e,r,t)=>{t.d(r,{Z:()=>o});var n=t(7294),a=t(814),i=t(3612);const l=JSON.parse('{"name":"uppy-io","version":"0.0.0","private":true,"scripts":{"build":"docusaurus build","clear":"docusaurus clear","deploy":"docusaurus deploy","dev":"docusaurus start","lint:js":"eslint . --cache","lint:md":"run-s --continue-on-error remark:md remark:mdx","lint":"run-s --continue-on-error lint:js lint:md format:check","prepare":"husky install","format:check":"prettier -c .","format":"prettier -w .","remark:md":"remark . -qf","remark:mdx":"remark . -e mdx -u mdx -qf","serve":"docusaurus serve","swizzle":"docusaurus swizzle","typecheck":"tsc --noEmit","write-heading-ids":"docusaurus write-heading-ids","write-translations":"docusaurus write-translations"},"lint-staged":{"*.{js,jsx,ts,tsx}":["eslint --fix --cache","prettier --write"],"*.md":["remark -qf --","prettier --write"],"*.mdx":["remark -u mdx -qf --","prettier --write"],"*.{css,html,json,yml}":"prettier --write"},"browserslist":{"production":[">0.5%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]},"dependencies":{"@docusaurus/core":"^2.0.1","@docusaurus/preset-classic":"^2.0.1","@mdx-js/react":"^1.6.22","clsx":"^1.1.1","prism-react-renderer":"^1.2.1","react":"^17.0.1","react-dom":"^17.0.1"},"devDependencies":{"@docusaurus/eslint-plugin":"^2.0.1","@docusaurus/module-type-aliases":"^2.0.1","@tsconfig/docusaurus":"^1.0.4","@typescript-eslint/eslint-plugin":"^5.48.1","@typescript-eslint/parser":"^5.48.1","eslint":"^8.19.0","eslint-config-prettier":"^8.5.0","eslint-plugin-markdown":"^3.0.0","eslint-plugin-mdx":"^2.0.4","husky":"^8.0.1","lint-staged":"^13.0.3","mdast-comment-marker":"^2.1.0","npm-run-all":"^4.1.5","prettier":"2.8.1","remark-cli":"^11.0.0","remark-directive":"^2.0.1","remark-frontmatter":"^4.0.0","remark-gfm":"^3.0.1","remark-lint":"^9.0.0","remark-lint-final-newline":"^2.0.0","remark-lint-hard-break-spaces":"^3.0.0","remark-lint-list-item-bullet-indent":"^4.0.0","remark-lint-list-item-indent":"^3.0.0","remark-lint-no-blockquote-without-marker":"^5.0.0","remark-lint-no-duplicate-definitions":"^3.0.0","remark-lint-no-heading-content-indent":"^4.0.0","remark-lint-no-inline-padding":"^4.0.0","remark-lint-no-literal-urls":"^3.0.0","remark-lint-no-shortcut-reference-image":"^3.0.0","remark-lint-no-shortcut-reference-link":"^3.0.0","remark-lint-no-undefined-references":"^4.0.0","remark-lint-no-unused-definitions":"^3.0.0","remark-lint-ordered-list-marker-style":"^3.0.0","remark-mdx":"^2.1.2","remark-preset-lint-consistent":"^5.1.1","remark-preset-lint-markdown-style-guide":"^5.1.2","remark-preset-prettier":"^2.0.1","remark-retext":"^5.0.0","retext-english":"^4.0.0","retext-equality":"^6.2.0","retext-profanities":"^7.1.0","retext-quotes":"^5.0.0","retext-simplify":"^7.0.0","retext-syntax-mentions":"^3.1.0","typescript":"^4.6.2","unified":"^10.0.0","unified-message-control":"^4.0.0"},"packageManager":"yarn@3.3.1+sha224.1c866bd0fca5cf439c5b6a019f1653906d5e7ea807b01a9c7b18adab"}'),{version:s}=l;function o(e){let{children:r,uppyCssName:t="uppy.min.css",uppyJsName:l="uppy.min.js"}=e,o=[];n.Children.toArray(r).forEach((e=>{o=[...o,...String(e).trim().split("\n").map((e=>e.trim()))]}));const p=o.map((e=>`  ${e}`)).join("\n"),u=`https://releases.transloadit.com/uppy/v${s}/${l}`,d=`\x3c!-- 1. Add CSS to \`<head>\` --\x3e\n<link href="https://releases.transloadit.com/uppy/v${s}/${t}" rel="stylesheet">\n\n\x3c!-- 2. Initialize --\x3e\n<div id="uppy"></div>\n\n<script type="module">\n${p.replace(/{{UPPY_JS_URL}}/g,u)}\n<\/script>\n`;return n.createElement(n.Fragment,null,n.createElement(i.Z,{type:"caution"},n.createElement("p",null,"The bundle consists of most Uppy plugins, so this method is not recommended for production, as your users will have to download all plugins when you are likely using only a few."),n.createElement("p",null,"It can be useful to speed up your development environment, so don't hesitate to use it to get you started.")),n.createElement(a.Z,{language:"html"},d))}},9787:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>p,default:()=>k,frontMatter:()=>o,metadata:()=>u,toc:()=>c});var n=t(7462),a=(t(7294),t(3905)),i=t(5488),l=t(5162),s=t(3068);const o={sidebar_position:10},p="Golden Retriever",u={unversionedId:"golden-retriever",id:"golden-retriever",title:"Golden Retriever",description:"The @uppy/golden-retriever plugin saves selected files in your browser cache,",source:"@site/docs/golden-retriever.mdx",sourceDirName:".",slug:"/golden-retriever",permalink:"/uppy.io/pr-preview/pr-68/docs/golden-retriever",draft:!1,editUrl:"https://github.com/transloadit/uppy.io/tree/main/docs/golden-retriever.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Remote sources",permalink:"/uppy.io/pr-preview/pr-68/docs/presets/remote-sources"},next:{title:"Compressor",permalink:"/uppy.io/pr-preview/pr-68/docs/compressor"}},d={},c=[{value:"When should I use this?",id:"when-should-i-use-this",level:2},{value:"Install",id:"install",level:2},{value:"Use",id:"use",level:2},{value:"Enabling Service Worker",id:"enabling-service-worker",level:3},{value:"API",id:"api",level:2},{value:"Options",id:"options",level:3},{value:"<code>id</code>",id:"id",level:4},{value:"<code>expires</code>",id:"expires",level:4},{value:"<code>serviceWorker</code>",id:"serviceworker",level:4}],m={toc:c};function k(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"golden-retriever"},"Golden Retriever"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"@uppy/golden-retriever")," plugin saves selected files in your browser cache,\nso that if the browser crashes, or the user accidentally closes the tab, Uppy\ncan restore everything and continue uploading as if nothing happened. You can\nread more about it\n",(0,a.kt)("a",{parentName:"p",href:"https://uppy.io/blog/2017/07/golden-retriever/"},"on our blog"),"."),(0,a.kt)("p",null,"The Golden Retriever uses three methods of browser data storage:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"LocalStorage")," to store file metadata and Uppy state only."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"IndexedDB")," for small files, usually under 5MiB."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Service Worker")," (",(0,a.kt)("em",{parentName:"li"},"optional"),") for ",(0,a.kt)("em",{parentName:"li"},"all")," files because, unlike ",(0,a.kt)("inlineCode",{parentName:"li"},"IndexedDB"),",\n",(0,a.kt)("inlineCode",{parentName:"li"},"Service Worker")," can keep references to large files. Service Worker storage is\n",(0,a.kt)("em",{parentName:"li"},"quite")," temporary though, and doesn\u2019t persist across browser crashes or\nrestarts. It works well, however, for accidental refreshes or closed tabs.")),(0,a.kt)("p",null,"Upon restore, the plugin first restores state from ",(0,a.kt)("inlineCode",{parentName:"p"},"LocalStorage")," and then\nchecks both file storages \u2014 ",(0,a.kt)("inlineCode",{parentName:"p"},"IndexedDB")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"ServiceWorker")," \u2014 merging the\nresults."),(0,a.kt)("p",null,"If restore is unsuccessful for certain files, they will be marked as \u201cghosts\u201d in\nthe Dashboard UI, and a message + button offering to re-select those files will\nbe displayed."),(0,a.kt)("h2",{id:"when-should-i-use-this"},"When should I use this?"),(0,a.kt)("p",null,"When you want extra insurance for the user-selected files. If you feel like\nusers might spend some time picking files, tweaking descriptions etc, and will\nnot appreciate having to do it over again if something crashes. Another use case\nmight be when you think user might want to pick a few files, navigate away to do\nsomething else in your app or otherwise, and then come back to the same\nselection."),(0,a.kt)("h2",{id:"install"},"Install"),(0,a.kt)(i.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"npm",label:"NPM",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @uppy/golden-retriever\n"))),(0,a.kt)(l.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add @uppy/golden-retriever\n"))),(0,a.kt)(l.Z,{value:"cdn",label:"CDN",mdxType:"TabItem"},(0,a.kt)(s.Z,{mdxType:"UppyCdnExample"},'\n        import { Uppy, GoldenRetriever } from "{{UPPY_JS_URL}}"\n        new Uppy().use(GoldenRetriever)\n      '))),(0,a.kt)("h2",{id:"use"},"Use"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"{7} showLineNumbers","{7}":!0,showLineNumbers:!0},"import Uppy from '@uppy/core';\nimport Dashboard from '@uppy/dashboard';\nimport GoldenRetriever from '@uppy/golden-retriever';\n\nnew Uppy()\n  .use(Dashboard, {inline:true, target: '#dashboard')\n  .use(GoldenRetriever);\n")),(0,a.kt)("p",null,"By default, Golden Retriever will only use the ",(0,a.kt)("inlineCode",{parentName:"p"},"IndexedDB")," storage, which is\ngood enough for files up to 5 MiB (configurable). ",(0,a.kt)("inlineCode",{parentName:"p"},"Service Worker")," is optional\nand requires setup."),(0,a.kt)("h3",{id:"enabling-service-worker"},"Enabling Service Worker"),(0,a.kt)("p",null,"With the Service Worker storage, Golden Retriever will be able to temporary\nstore references to large files."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Bundle your own service worker ",(0,a.kt)("inlineCode",{parentName:"p"},"sw.js")," file with Uppy GoldenRetriever\u2019s\nservice worker."),(0,a.kt)("admonition",{parentName:"li",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"For Webpack, check out\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/oliviertassinari/serviceworker-webpack-plugin"},"serviceworker-webpack-plugin"),".")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="sw.js"',title:'"sw.js"'},"import('@uppy/golden-retriever/lib/ServiceWorker');\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Register it in your app\u2019s entry point:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// you app.js entry point\nuppy.use(GoldenRetriever, { serviceWorker: true });\n\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker\n        .register('/sw.js') // path to your bundled service worker with GoldenRetriever service worker\n        .then((registration) => {\n            console.log(\n                'ServiceWorker registration successful with scope: ',\n                registration.scope,\n            );\n        })\n        .catch((error) => {\n            console.log(`Registration failed with ${error}`);\n        });\n}\n")))),(0,a.kt)("p",null,"Voil\xe0, that\u2019s it. Happy retrieving!"),(0,a.kt)("h2",{id:"api"},"API"),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("h4",{id:"id"},(0,a.kt)("inlineCode",{parentName:"h4"},"id")),(0,a.kt)("p",null,"A unique identifier for this plugin (",(0,a.kt)("inlineCode",{parentName:"p"},"string"),", default: ",(0,a.kt)("inlineCode",{parentName:"p"},"'GoldenRetriever'"),")."),(0,a.kt)("h4",{id:"expires"},(0,a.kt)("inlineCode",{parentName:"h4"},"expires")),(0,a.kt)("p",null,"How long to store metadata and files for. Used for ",(0,a.kt)("inlineCode",{parentName:"p"},"LocalStorage")," and\n",(0,a.kt)("inlineCode",{parentName:"p"},"IndexedDB")," (",(0,a.kt)("inlineCode",{parentName:"p"},"number"),", default: ",(0,a.kt)("inlineCode",{parentName:"p"},"24 * 60 * 60 * 1000")," // 24 hours)."),(0,a.kt)("h4",{id:"serviceworker"},(0,a.kt)("inlineCode",{parentName:"h4"},"serviceWorker")),(0,a.kt)("p",null,"Whether to enable ",(0,a.kt)("inlineCode",{parentName:"p"},"Service Worker")," storage (",(0,a.kt)("inlineCode",{parentName:"p"},"boolean"),", default: ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),")."))}k.isMDXComponent=!0}}]);