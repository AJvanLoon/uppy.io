"use strict";(self.webpackChunkuppy_io=self.webpackChunkuppy_io||[]).push([[7634],{4973:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>n,metadata:()=>i,toc:()=>p});var o=t(7462),s=(t(7294),t(3905));const n={sidebar_position:1},r="Choosing the uploader you need",i={unversionedId:"guides/choosing-uploader",id:"guides/choosing-uploader",title:"Choosing the uploader you need",description:"Versatile, reliable uploading is at the heart of Uppy. It has many configurable",source:"@site/docs/guides/choosing-uploader.md",sourceDirName:"guides",slug:"/guides/choosing-uploader",permalink:"/uppy.io/pr-preview/pr-68/docs/guides/choosing-uploader",draft:!1,editUrl:"https://github.com/transloadit/uppy.io/tree/main/docs/guides/choosing-uploader.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Quick start",permalink:"/uppy.io/pr-preview/pr-68/docs/quick-start"},next:{title:"Using locales",permalink:"/uppy.io/pr-preview/pr-68/docs/guides/using-locales"}},l={},p=[{value:"Use cases",id:"use-cases",level:2},{value:"I want worry-free, plug-and-play uploads with Transloadit services",id:"i-want-worry-free-plug-and-play-uploads-with-transloadit-services",level:3},{value:"I want reliable, resumable uploads",id:"i-want-reliable-resumable-uploads",level:3},{value:"I want to upload to AWS S3 (or S3-compatible storage) directly",id:"i-want-to-upload-to-aws-s3-or-s3-compatible-storage-directly",level:3},{value:"Which one should I pick?",id:"which-one-should-i-pick",level:4},{value:"I want to send regular HTTP uploads to my own server",id:"i-want-to-send-regular-http-uploads-to-my-own-server",level:3}],u={toc:p};function d(e){let{components:a,...t}=e;return(0,s.kt)("wrapper",(0,o.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"choosing-the-uploader-you-need"},"Choosing the uploader you need"),(0,s.kt)("p",null,"Versatile, reliable uploading is at the heart of Uppy. It has many configurable\nplugins to suit your needs. In this guide we will explain the different plugins,\ntheir strategies, and when to use them based on use cases."),(0,s.kt)("h2",{id:"use-cases"},"Use cases"),(0,s.kt)("h3",{id:"i-want-worry-free-plug-and-play-uploads-with-transloadit-services"},"I want worry-free, plug-and-play uploads with Transloadit services"),(0,s.kt)("p",null,"Transloadit\u2019s strength is versatility. By doing video, audio, images, documents,\nand more, you only need one vendor for ",(0,s.kt)("a",{parentName:"p",href:"https://transloadit.com/services/"},"all your file processing\nneeds"),". The ",(0,s.kt)("a",{parentName:"p",href:"/docs/upload-strategies/transloadit"},(0,s.kt)("inlineCode",{parentName:"a"},"@uppy/transloadit"))," plugin directly\nuploads to Transloadit so you only have to worry about creating a\n",(0,s.kt)("a",{parentName:"p",href:"https://transloadit.com/docs/getting-started/concepts/"},"template"),". It uses\n",(0,s.kt)("a",{parentName:"p",href:"#i-want-reliable-resumable-uploads"},"Tus")," under the hood so you don\u2019t have to\nsacrifice reliable, resumable uploads for convenience."),(0,s.kt)("p",null,"You should use ",(0,s.kt)("a",{parentName:"p",href:"/docs/upload-strategies/transloadit"},(0,s.kt)("inlineCode",{parentName:"a"},"@uppy/transloadit"))," if you don\u2019t want to host your own\nserver, (optionally) need file processing, and store it in the service (such as\nS3 or GCS) of your liking. All with minimal effort."),(0,s.kt)("h3",{id:"i-want-reliable-resumable-uploads"},"I want reliable, resumable uploads"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://tus.io/"},"Tus")," is a new open protocol for resumable uploads built on HTTP. This\nmeans accidentally closing your tab or losing connection let\u2019s you continue, for\ninstance, your 10GB upload instead of starting all over."),(0,s.kt)("p",null,"Tus supports any language, any platform, and any network. It requires a client\nand server integration to work. You can checkout the client and server\n",(0,s.kt)("a",{parentName:"p",href:"https://tus.io/implementations.html"},"implementations")," to find the server in your preferred\nlanguage. You can store files on the Tus server itself, but you can also use\nservice integrations (such as S3) to store files externally."),(0,s.kt)("p",null,"If you want reliable, resumable uploads: use ",(0,s.kt)("a",{parentName:"p",href:"/docs/upload-strategies/tus"},(0,s.kt)("inlineCode",{parentName:"a"},"@uppy/tus"))," to connect to your\nTus server in a few lines of code."),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"If you plan to let people upload ",(0,s.kt)("em",{parentName:"p"},"a lot")," of files, ",(0,s.kt)("a",{parentName:"p",href:"/docs/upload-strategies/tus"},(0,s.kt)("inlineCode",{parentName:"a"},"@uppy/tus"))," has\nexponential backoff built-in. Meaning if your server (or proxy) returns HTTP 429\nbecause it\u2019s being overloaded, ",(0,s.kt)("a",{parentName:"p",href:"/docs/upload-strategies/tus"},(0,s.kt)("inlineCode",{parentName:"a"},"@uppy/tus"))," will find the ideal sweet spot to\nkeep uploading without overloading.")),(0,s.kt)("h3",{id:"i-want-to-upload-to-aws-s3-or-s3-compatible-storage-directly"},"I want to upload to AWS S3 (or S3-compatible storage) directly"),(0,s.kt)("p",null,"When you prefer a ",(0,s.kt)("em",{parentName:"p"},"client-to-storage")," over a ",(0,s.kt)("em",{parentName:"p"},"client-to-server-to-storage")," (such\nas ",(0,s.kt)("a",{parentName:"p",href:"/docs/upload-strategies/transloadit"},"Transloadit")," or\n",(0,s.kt)("a",{parentName:"p",href:"/docs/upload-strategies/tus"},"Tus"),") setup. This may in some cases be preferable,\nfor instance, to reduce costs or the complexity of running a server and load\nbalancer with ",(0,s.kt)("a",{parentName:"p",href:"/docs/upload-strategies/tus"},"Tus"),"."),(0,s.kt)("p",null,"Uppy has two plugins to make this happen ",(0,s.kt)("a",{parentName:"p",href:"/docs/upload-strategies/aws-s3"},(0,s.kt)("inlineCode",{parentName:"a"},"@uppy/aws-s3"))," and\n",(0,s.kt)("a",{parentName:"p",href:"/docs/upload-strategies/aws-s3-multipart"},(0,s.kt)("inlineCode",{parentName:"a"},"@uppy/aws-s3-multipart")),"."),(0,s.kt)("h4",{id:"which-one-should-i-pick"},"Which one should I pick?"),(0,s.kt)("p",null,"If your users are planning to mostly upload small files and/or a lot of files,\nit\u2019s better to use ",(0,s.kt)("a",{parentName:"p",href:"/docs/upload-strategies/aws-s3"},(0,s.kt)("inlineCode",{parentName:"a"},"@uppy/aws-s3")),"."),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"/docs/upload-strategies/aws-s3-multipart"},(0,s.kt)("inlineCode",{parentName:"a"},"@uppy/aws-s3-multipart"))," is valuable for larger files (100","\xa0","MB+) as it\nuploads a single object as a set of parts. This has certain benefits, such as\nimproved throughput (uploading parts in parallel) and quick recovery from\nnetwork issues (only the failed parts need to be retried). The downside is\nrequest overhead, as it needs to do creation, signing, and completion requests\nbesides the upload requests. For example, if you are uploading files that are\nonly a couple kilobytes with a 100ms roundtrip latency, you are spending 400ms\non overhead and only a few milliseconds on uploading."),(0,s.kt)("p",null,"If you are uploading large files (100","\xa0","MB+), we recommend\n",(0,s.kt)("a",{parentName:"p",href:"/docs/upload-strategies/aws-s3-multipart"},(0,s.kt)("inlineCode",{parentName:"a"},"@uppy/aws-s3-multipart")),", otherwise ",(0,s.kt)("a",{parentName:"p",href:"/docs/upload-strategies/aws-s3"},(0,s.kt)("inlineCode",{parentName:"a"},"@uppy/aws-s3")),"."),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("p",{parentName:"admonition"},"You can also save files in S3 with the ",(0,s.kt)("a",{parentName:"p",href:"https://transloadit.com/services/file-exporting/s3-store/"},(0,s.kt)("inlineCode",{parentName:"a"},"/s3/store"))," robot while still\nusing the powers of Transloadit services.")),(0,s.kt)("h3",{id:"i-want-to-send-regular-http-uploads-to-my-own-server"},"I want to send regular HTTP uploads to my own server"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"/docs/upload-strategies/xhr"},(0,s.kt)("inlineCode",{parentName:"a"},"@uppy/xhr-upload"))," handles classic HTML multipart form uploads as well as\nuploads using the HTTP ",(0,s.kt)("inlineCode",{parentName:"p"},"PUT")," method."))}d.isMDXComponent=!0}}]);