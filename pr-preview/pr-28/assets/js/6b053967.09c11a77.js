"use strict";(self.webpackChunkuppy_io=self.webpackChunkuppy_io||[]).push([[6891],{5162:(e,t,a)=>{a.d(t,{Z:()=>s});var r=a(7294),n=a(6010);const i="tabItem_Ymn6";function s(e){let{children:t,hidden:a,className:s}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(i,s),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>m});var r=a(7462),n=a(7294),i=a(6010),s=a(2389),o=a(7392),l=a(7094),p=a(2466);const d="tabList__CuJ",u="tabItem_LNqP";function c(e){var t;const{lazy:a,block:s,defaultValue:c,values:m,groupId:h,className:k}=e,v=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=m??v.map((e=>{let{props:{value:t,label:a,attributes:r}}=e;return{value:t,label:a,attributes:r}})),f=(0,o.l)(y,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===c?c:c??(null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)??v[0].props.value;if(null!==b&&!y.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:C}=(0,l.U)(),[N,w]=(0,n.useState)(b),x=[],{blockElementScrollPositionUntilNextRender:S}=(0,p.o5)();if(null!=h){const e=g[h];null!=e&&e!==N&&y.some((t=>t.value===e))&&w(e)}const T=e=>{const t=e.currentTarget,a=x.indexOf(t),r=y[a].value;r!==N&&(S(t),w(r),null!=h&&C(h,String(r)))},M=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=x.indexOf(e.currentTarget)+1;a=x[t]??x[0];break}case"ArrowLeft":{const t=x.indexOf(e.currentTarget)-1;a=x[t]??x[x.length-1];break}}null==(t=a)||t.focus()};return n.createElement("div",{className:(0,i.Z)("tabs-container",d)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":s},k)},y.map((e=>{let{value:t,label:a,attributes:s}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>x.push(e),onKeyDown:M,onFocus:T,onClick:T},s,{className:(0,i.Z)("tabs__item",u,null==s?void 0:s.className,{"tabs__item--active":N===t})}),a??t)}))),a?(0,n.cloneElement)(v.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function m(e){const t=(0,s.Z)();return n.createElement(c,(0,r.Z)({key:String(t)},e))}},3068:(e,t,a)=>{a.d(t,{Z:()=>l});var r=a(7294),n=a(814),i=a(3612);const s=JSON.parse('{"name":"uppy-io","version":"0.0.0","private":true,"scripts":{"build":"docusaurus build","clear":"docusaurus clear","deploy":"docusaurus deploy","docusaurus":"docusaurus","eslint":"eslint . --cache ","lint":"run-s --continue-on-error eslint remark","prepare":"husky install","remark":"run-s --continue-on-error remark:md remark:mdx","remark:md":"remark docs -qf","remark:mdx":"remark docs -e mdx -u mdx -qf","serve":"docusaurus serve","dev":"docusaurus start","swizzle":"docusaurus swizzle","typecheck":"tsc","write-heading-ids":"docusaurus write-heading-ids","write-translations":"docusaurus write-translations"},"lint-staged":{"*.js":"eslint --fix --cache","*.{css,html,json,js,jsx,ts,tsx,yml}":["prettier --write"],"docs/*.md":["remark -qf --"],"docs/*.mdx":["remark -u mdx -qf --"]},"browserslist":{"production":[">0.5%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]},"dependencies":{"@docusaurus/core":"^2.0.1","@docusaurus/preset-classic":"^2.0.1","@mdx-js/react":"^1.6.22","clsx":"^1.1.1","prism-react-renderer":"^1.2.1","react":"^17.0.1","react-dom":"^17.0.1"},"devDependencies":{"@docusaurus/eslint-plugin":"^2.0.1","@docusaurus/module-type-aliases":"^2.0.1","@tsconfig/docusaurus":"^1.0.4","eslint":"^8.19.0","eslint-config-prettier":"^8.5.0","husky":"^8.0.1","lint-staged":"^13.0.3","mdast-comment-marker":"^2.1.0","npm-run-all":"^4.1.5","prettier":"2.7.1","remark-cli":"^11.0.0","remark-directive":"^2.0.1","remark-frontmatter":"^4.0.0","remark-gfm":"^3.0.1","remark-mdx":"^2.1.2","remark-preset-lint-consistent":"^5.1.1","remark-preset-lint-markdown-style-guide":"^5.1.2","remark-preset-lint-recommended":"^6.1.2","remark-preset-prettier":"^1.0.1","remark-retext":"^5.0.0","retext-english":"^4.0.0","retext-equality":"^6.2.0","retext-profanities":"^7.1.0","retext-quotes":"^5.0.0","retext-simplify":"^7.0.0","retext-syntax-mentions":"^3.1.0","typescript":"^4.6.2","unified":"^10.0.0","unified-message-control":"^4.0.0"},"packageManager":"yarn@3.2.3+sha224.953c8233f7a92884eee2de69a1b92d1f2ec1655e66d08071ba9a02fa"}'),{version:o}=s;function l(e){let{children:t,uppyCssName:a="uppy.min.css",uppyJsName:s="uppy.min.js"}=e,l=[];r.Children.toArray(t).forEach((e=>{l=[...l,...String(e).trim().split("\n").map((e=>e.trim()))]}));const p=l.map((e=>`  ${e}`)).join("\n"),d=`\x3c!-- 1. Add CSS to \`<head>\` --\x3e\n<link href="https://releases.transloadit.com/uppy/v${o}/${a}" rel="stylesheet">\n\n\x3c!-- 2. Add JS before the closing \`</body>\` --\x3e\n<script src="https://releases.transloadit.com/uppy/v${o}/${s}"><\/script>\n\n\x3c!-- 3. Initialize --\x3e\n<div id="uppy"></div>\n\n<script>\n${p}\n<\/script>\n`;return r.createElement(r.Fragment,null,r.createElement(i.Z,{type:"caution"},r.createElement("p",null,"The bundle consists of most Uppy plugins, so this method is not recommended for production, as your users will have to download all plugins when you are likely using only a few.")),r.createElement(n.Z,{language:"html"},d))}},6547:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var r=a(7462),n=(a(7294),a(3905)),i=a(5488),s=a(5162),o=a(3068);const l={sidebar_position:2},p="Screen capture",d={unversionedId:"sources/screen-capture",id:"sources/screen-capture",title:"Screen capture",description:"The @uppy/screen-capture plugin can record your screen or an application and save it as a video.",source:"@site/docs/sources/screen-capture.mdx",sourceDirName:"sources",slug:"/sources/screen-capture",permalink:"/uppy.io/pr-preview/pr-28/docs/sources/screen-capture",draft:!1,editUrl:"https://github.com/transloadit/uppy.io/tree/main/docs/sources/screen-capture.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Webcam",permalink:"/uppy.io/pr-preview/pr-28/docs/sources/webcam"},next:{title:"Box",permalink:"/uppy.io/pr-preview/pr-28/docs/sources/companion-plugins/box"}},u={},c=[{value:"When should I use this?",id:"when-should-i-use-this",level:2},{value:"Install",id:"install",level:2},{value:"Use",id:"use",level:2},{value:"API",id:"api",level:3},{value:"Options",id:"options",level:3},{value:"<code>id</code>",id:"id",level:4},{value:"<code>title</code>",id:"title",level:4},{value:"<code>target</code>",id:"target",level:4},{value:"<code>displayMediaConstraints</code>",id:"displaymediaconstraints",level:4},{value:"<code>userMediaConstraints</code>",id:"usermediaconstraints",level:4},{value:"<code>preferredVideoMimeType</code>",id:"preferredvideomimetype",level:4},{value:"<code>locale</code>",id:"locale",level:4}],m={toc:c};function h(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"screen-capture"},"Screen capture"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"@uppy/screen-capture")," plugin can record your screen or an application and save it as a video."),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("a",{parentName:"p",href:"/examples"},"Try out the live example")," or take it for a spin in ",(0,n.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/uppy-dashboard-xpxuhd"},"CodeSandbox"),".")),(0,n.kt)("h2",{id:"when-should-i-use-this"},"When should I use this?"),(0,n.kt)("p",null,"When you want users record their screen on their computer.\nThis plugin only works on desktop browsers which support ",(0,n.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia"},(0,n.kt)("inlineCode",{parentName:"a"},"getDisplayMedia API")),".\nIf no support for the API is detected, Screen Capture won\u2019t be installed, so you don\u2019t have to do anything."),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"To use the screen capture plugin in a Chromium-based browser, ",(0,n.kt)("a",{parentName:"p",href:"https://developers.google.com/web/updates/2015/10/chrome-47-webrtc#public_service_announcements"},"your site must be served over https"),". This restriction does not apply on ",(0,n.kt)("inlineCode",{parentName:"p"},"localhost"),", so you don\u2019t have to jump through many hoops during development.")),(0,n.kt)("h2",{id:"install"},"Install"),(0,n.kt)(i.Z,{mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"npm",label:"NPM",default:!0,mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @uppy/screen-capture\n"))),(0,n.kt)(s.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add @uppy/screen-capture\n"))),(0,n.kt)(s.Z,{value:"cdn",label:"CDN",mdxType:"TabItem"},(0,n.kt)(o.Z,{mdxType:"UppyCdnExample"},"\n        var uppy = new Uppy.Core()\n        uppy.use(Uppy.Dashboard, { inline: true, target: 'body' })\n        uppy.use(Uppy.ScreenCapture, { target: Uppy.Dashboard })\n      "))),(0,n.kt)("h2",{id:"use"},"Use"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"import Uppy from '@uppy/core'\nimport Dashboard from '@uppy/dashboard'\nimport Webcam from '@uppy/webcam'\n\nimport '@uppy/core/dist/style.min.css'\nimport '@uppy/dashboard/dist/style.min.css'\nimport '@uppy/screen-capture/dist/style.min.css'\n\nnew Uppy\n  .use(Dashboard, { inline: true, target: 'body' })\n  // Example of setting all the options to their defaults.\n  // Not passing anything to `ScreenCapture` is therefor the same as the example below.\n  .use(ScreenCapture, {\n    displayMediaConstraints: {\n      video: {\n        width: 1280,\n        height: 720,\n        frameRate: {\n          ideal: 3,\n          max: 5,\n        },\n        cursor: 'motion',\n        displaySurface: 'monitor',\n      },\n    },\n    userMediaConstraints: {\n      audio: true,\n    },\n    preferredVideoMimeType: 'video/webm',\n  })\n")),(0,n.kt)("h3",{id:"api"},"API"),(0,n.kt)("h3",{id:"options"},"Options"),(0,n.kt)("h4",{id:"id"},(0,n.kt)("inlineCode",{parentName:"h4"},"id")),(0,n.kt)("p",null,"A unique identifier for this plugin (",(0,n.kt)("inlineCode",{parentName:"p"},"String"),", default: ",(0,n.kt)("inlineCode",{parentName:"p"},"'ScreenCapture'"),")."),(0,n.kt)("h4",{id:"title"},(0,n.kt)("inlineCode",{parentName:"h4"},"title")),(0,n.kt)("p",null,"Configures the title / name shown in the UI, for instance, on Dashboard tabs (",(0,n.kt)("inlineCode",{parentName:"p"},"String"),", default: ",(0,n.kt)("inlineCode",{parentName:"p"},"'Screen Capture'"),")."),(0,n.kt)("h4",{id:"target"},(0,n.kt)("inlineCode",{parentName:"h4"},"target")),(0,n.kt)("p",null,"DOM element, CSS selector, or plugin to place the drag and drop area into (",(0,n.kt)("inlineCode",{parentName:"p"},"String")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"Element"),", default: ",(0,n.kt)("inlineCode",{parentName:"p"},"null"),")."),(0,n.kt)("h4",{id:"displaymediaconstraints"},(0,n.kt)("inlineCode",{parentName:"h4"},"displayMediaConstraints")),(0,n.kt)("p",null,"Options passed to ",(0,n.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia"},(0,n.kt)("inlineCode",{parentName:"a"},"MediaDevices.getDisplayMedia()"))," (",(0,n.kt)("inlineCode",{parentName:"p"},"Object"),", default: ",(0,n.kt)("inlineCode",{parentName:"p"},"null"),")."),(0,n.kt)("p",null,"See the ",(0,n.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints"},(0,n.kt)("inlineCode",{parentName:"a"},"MediaTrackConstraints"))," for a list of options."),(0,n.kt)("h4",{id:"usermediaconstraints"},(0,n.kt)("inlineCode",{parentName:"h4"},"userMediaConstraints")),(0,n.kt)("p",null,"Options passed to ",(0,n.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia"},(0,n.kt)("inlineCode",{parentName:"a"},"MediaDevices.getUserMedia()"))," (",(0,n.kt)("inlineCode",{parentName:"p"},"Object"),", default: ",(0,n.kt)("inlineCode",{parentName:"p"},"null"),")."),(0,n.kt)("p",null,"See the ",(0,n.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints"},(0,n.kt)("inlineCode",{parentName:"a"},"MediaTrackConstraints"))," for a list of options."),(0,n.kt)("h4",{id:"preferredvideomimetype"},(0,n.kt)("inlineCode",{parentName:"h4"},"preferredVideoMimeType")),(0,n.kt)("p",null,"Set the preferred mime type for video recordings, for example ",(0,n.kt)("inlineCode",{parentName:"p"},"'video/webm'")," (",(0,n.kt)("inlineCode",{parentName:"p"},"String"),", default: ",(0,n.kt)("inlineCode",{parentName:"p"},"null"),")."),(0,n.kt)("p",null,"If the browser supports the given mime type, the video will be recorded in this format.\nIf the browser does not support it, it will use the browser default."),(0,n.kt)("p",null,"If no preferred video mime type is given, the ScreenCapture plugin will prefer types listed in the ",(0,n.kt)("a",{parentName:"p",href:"/docs/uppy/#restrictions"},(0,n.kt)("inlineCode",{parentName:"a"},"allowedFileTypes")," restriction"),", if any."),(0,n.kt)("h4",{id:"locale"},(0,n.kt)("inlineCode",{parentName:"h4"},"locale")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"export default {\n  strings: {\n    startCapturing: 'Begin screen capturing',\n    stopCapturing: 'Stop screen capturing',\n    submitRecordedFile: 'Submit recorded file',\n    streamActive: 'Stream active',\n    streamPassive: 'Stream passive',\n    micDisabled: 'Microphone access denied by user',\n    recording: 'Recording',\n  },\n}\n")))}h.isMDXComponent=!0}}]);