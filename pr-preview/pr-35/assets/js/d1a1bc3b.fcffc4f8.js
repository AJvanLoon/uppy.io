"use strict";(self.webpackChunkuppy_io=self.webpackChunkuppy_io||[]).push([[9299],{5162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),o=n(6010);const i="tabItem_Ymn6";function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(i,s),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(7462),o=n(7294),i=n(6010),s=n(2389),l=n(7392),r=n(7094),p=n(2466);const d="tabList__CuJ",u="tabItem_LNqP";function m(e){var t;const{lazy:n,block:s,defaultValue:m,values:c,groupId:h,className:g}=e,k=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=c??k.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),N=(0,l.l)(f,((e,t)=>e.value===t.value));if(N.length>0)throw new Error(`Docusaurus error: Duplicate values "${N.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===m?m:m??(null==(t=k.find((e=>e.props.default)))?void 0:t.props.value)??k[0].props.value;if(null!==y&&!f.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:w}=(0,r.U)(),[v,C]=(0,o.useState)(y),S=[],{blockElementScrollPositionUntilNextRender:T}=(0,p.o5)();if(null!=h){const e=b[h];null!=e&&e!==v&&f.some((t=>t.value===e))&&C(e)}const x=e=>{const t=e.currentTarget,n=S.indexOf(t),a=f[n].value;a!==v&&(T(t),C(a),null!=h&&w(h,String(a)))},A=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=S.indexOf(e.currentTarget)+1;n=S[t]??S[0];break}case"ArrowLeft":{const t=S.indexOf(e.currentTarget)-1;n=S[t]??S[S.length-1];break}}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,i.Z)("tabs-container",d)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":s},g)},f.map((e=>{let{value:t,label:n,attributes:s}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,key:t,ref:e=>S.push(e),onKeyDown:A,onFocus:x,onClick:x},s,{className:(0,i.Z)("tabs__item",u,null==s?void 0:s.className,{"tabs__item--active":v===t})}),n??t)}))),n?(0,o.cloneElement)(k.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==v})))))}function c(e){const t=(0,s.Z)();return o.createElement(m,(0,a.Z)({key:String(t)},e))}},3068:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294),o=n(814),i=n(3612);const s=JSON.parse('{"name":"uppy-io","version":"0.0.0","private":true,"scripts":{"build":"docusaurus build","clear":"docusaurus clear","deploy":"docusaurus deploy","docusaurus":"docusaurus","lint:js":"eslint . --cache ","lint":"run-s --continue-on-error lint:js lint:md","prepare":"husky install","lint:md":"run-s --continue-on-error remark:md remark:mdx","remark:md":"remark docs -qf","remark:mdx":"remark docs -e mdx -u mdx -qf","serve":"docusaurus serve","dev":"docusaurus start","swizzle":"docusaurus swizzle","typecheck":"tsc","write-heading-ids":"docusaurus write-heading-ids","write-translations":"docusaurus write-translations"},"lint-staged":{"*.js":"eslint --fix --cache","*.{css,html,json,js,jsx,ts,tsx,yml}":["prettier --write"],"docs/*.md":["remark -qf --"],"docs/*.mdx":["remark -u mdx -qf --"]},"browserslist":{"production":[">0.5%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]},"dependencies":{"@docusaurus/core":"^2.0.1","@docusaurus/preset-classic":"^2.0.1","@mdx-js/react":"^1.6.22","clsx":"^1.1.1","prism-react-renderer":"^1.2.1","react":"^17.0.1","react-dom":"^17.0.1"},"devDependencies":{"@docusaurus/eslint-plugin":"^2.0.1","@docusaurus/module-type-aliases":"^2.0.1","@tsconfig/docusaurus":"^1.0.4","eslint":"^8.19.0","eslint-config-prettier":"^8.5.0","eslint-plugin-markdown":"^3.0.0","eslint-plugin-mdx":"^2.0.4","husky":"^8.0.1","lint-staged":"^13.0.3","mdast-comment-marker":"^2.1.0","npm-run-all":"^4.1.5","prettier":"2.7.1","remark-cli":"^11.0.0","remark-directive":"^2.0.1","remark-frontmatter":"^4.0.0","remark-gfm":"^3.0.1","remark-mdx":"^2.1.2","remark-preset-lint-consistent":"^5.1.1","remark-preset-lint-markdown-style-guide":"^5.1.2","remark-preset-lint-recommended":"^6.1.2","remark-preset-prettier":"^1.0.1","remark-retext":"^5.0.0","retext-english":"^4.0.0","retext-equality":"^6.2.0","retext-profanities":"^7.1.0","retext-quotes":"^5.0.0","retext-simplify":"^7.0.0","retext-syntax-mentions":"^3.1.0","typescript":"^4.6.2","unified":"^10.0.0","unified-message-control":"^4.0.0"},"packageManager":"yarn@3.2.3+sha224.953c8233f7a92884eee2de69a1b92d1f2ec1655e66d08071ba9a02fa"}'),{version:l}=s;function r(e){let{children:t,uppyCssName:n="uppy.min.css",uppyJsName:s="uppy.min.js"}=e,r=[];a.Children.toArray(t).forEach((e=>{r=[...r,...String(e).trim().split("\n").map((e=>e.trim()))]}));const p=r.map((e=>`  ${e}`)).join("\n"),d=`https://releases.transloadit.com/uppy/v${l}/${s}`,u=`\x3c!-- 1. Add CSS to \`<head>\` --\x3e\n<link href="https://releases.transloadit.com/uppy/v${l}/${n}" rel="stylesheet">\n\n\x3c!-- 2. Initialize --\x3e\n<div id="uppy"></div>\n\n<script type="module">\n${p.replace(/{{UPPY_JS_URL}}/g,d)}\n<\/script>\n`;return a.createElement(a.Fragment,null,a.createElement(i.Z,{type:"caution"},a.createElement("p",null,"The bundle consists of most Uppy plugins, so this method is not recommended for production, as your users will have to download all plugins when you are likely using only a few.")),a.createElement(o.Z,{language:"html"},u))}},117:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>m});var a=n(7462),o=(n(7294),n(3905)),i=n(5488),s=n(5162),l=n(3068);const r={sidebar_position:3},p="AWS S3",d={unversionedId:"upload-strategies/aws-s3",id:"upload-strategies/aws-s3",title:"AWS S3",description:"The @uppy/aws-s3 plugin can be used to upload files directly to a S3 bucket or a S3-compatible provider,",source:"@site/docs/upload-strategies/aws-s3.mdx",sourceDirName:"upload-strategies",slug:"/upload-strategies/aws-s3",permalink:"/uppy.io/pr-preview/pr-35/docs/upload-strategies/aws-s3",draft:!1,editUrl:"https://github.com/transloadit/uppy.io/tree/main/docs/upload-strategies/aws-s3.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Tus",permalink:"/uppy.io/pr-preview/pr-35/docs/upload-strategies/tus"},next:{title:"AWS S3 Multipart",permalink:"/uppy.io/pr-preview/pr-35/docs/upload-strategies/aws-s3-multipart"}},u={},m=[{value:"When should I use it?",id:"when-should-i-use-it",level:2},{value:"Install",id:"install",level:2},{value:"Use",id:"use",level:2},{value:"Use with AWS S3",id:"use-with-aws-s3",level:3},{value:"Use with DigitalOcean Spaces",id:"use-with-digitalocean-spaces",level:3},{value:"Use with Google Cloud Storage",id:"use-with-google-cloud-storage",level:3},{value:"Options",id:"options",level:2},{value:"<code>id</code>",id:"id",level:4},{value:"<code>companionUrl</code>",id:"companionurl",level:4},{value:"<code>companionHeaders</code>",id:"companionheaders",level:4},{value:"<code>allowedMetaFields</code>",id:"allowedmetafields",level:4},{value:"<code>getUploadParameters(file)</code>",id:"getuploadparametersfile",level:4},{value:"<code>timeout</code>",id:"timeout",level:4},{value:"<code>limit</code>",id:"limit",level:4},{value:"<code>getResponseData(responseText, response)</code>",id:"getresponsedataresponsetext-response",level:4},{value:"<code>locale: {}</code>",id:"locale-",level:4},{value:"Frequently Asked Questions",id:"frequently-asked-questions",level:2},{value:"How can I generate a presigned URL server-side?",id:"how-can-i-generate-a-presigned-url-server-side",level:3},{value:"How can I retrieve the presigned parameters of the uploaded file?",id:"how-can-i-retrieve-the-presigned-parameters-of-the-uploaded-file",level:3},{value:"What makes a provider S3 compatible?",id:"what-makes-a-provider-s3-compatible",level:3}],c={toc:m};function h(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"aws-s3"},"AWS S3"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@uppy/aws-s3")," plugin can be used to upload files directly to a S3 bucket or a S3-compatible provider,\nsuch as Google Cloud Storage or DigitalOcean Spaces.\nUploads can be signed using either ",(0,o.kt)("a",{parentName:"p",href:"/docs/companion"},"Companion")," or a custom signing function."),(0,o.kt)("h2",{id:"when-should-i-use-it"},"When should I use it?"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Not sure which upload strategy is best for you? Read \u201c",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/choosing-upload-strategy"},"Choosing the upload strategy you need"),"\u201d."),(0,o.kt)("p",{parentName:"admonition"},"Wondering if you need this plugin or ",(0,o.kt)("a",{parentName:"p",href:"docs/upload-strategies/aws-s3-multipart"},(0,o.kt)("inlineCode",{parentName:"a"},"@uppy/aws-s3-multipart")),"? See \u201c",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/choosing-upload-strategy#which-one-should-i-pick"},"Which one should I pick"),"\u201d.")),(0,o.kt)("p",null,"You can use this plugin when you prefer a ",(0,o.kt)("em",{parentName:"p"},"client-to-storage")," over a ",(0,o.kt)("em",{parentName:"p"},"client-to-server-to-storage")," (such as ",(0,o.kt)("a",{parentName:"p",href:"/docs/upload-strategies/transloadit"},"Transloadit")," or ",(0,o.kt)("a",{parentName:"p",href:"/docs/upload-strategies/tus"},"Tus"),") setup.\nThis may in some cases be preferable, for instance, to reduce costs or the complexity of running a server and load balancer with ",(0,o.kt)("a",{parentName:"p",href:"/docs/upload-strategies/tus"},"Tus"),"."),(0,o.kt)("p",null,"This plugin can be used with AWS S3, DigitalOcean Spaces, Google Cloud Storage, or any S3-compatible provider.\nAlthough all S3-compatible providers are supported, we don\u2019t test against them, this plugin was developed against S3\nso a small risk is involved in using the others."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"@uppy/aws-s3")," is best suited for small files and/or lots of files.\nIf you are planning to upload mostly large files (100 MB+), consider using ",(0,o.kt)("a",{parentName:"p",href:"/docs/upload-strategies/aws-s3-multipart"},(0,o.kt)("inlineCode",{parentName:"a"},"@uppy/aws-s3-multipart")),"."),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"npm",label:"NPM",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @uppy/aws-s3\n"))),(0,o.kt)(s.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add @uppy/aws-s3\n"))),(0,o.kt)(s.Z,{value:"cdn",label:"CDN",mdxType:"TabItem"},(0,o.kt)(l.Z,{mdxType:"UppyCdnExample"},'\n        import { Uppy, AwsS3 } from "{{UPPY_JS_URL}}"\n        new Uppy().use(AwsS3, { /* see options */ })\n      '))),(0,o.kt)("h2",{id:"use"},"Use"),(0,o.kt)("p",null,"A quick overview of the complete API."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"{10} showLineNumbers","{10}":!0,showLineNumbers:!0},"import Uppy from '@uppy/core'\nimport Dashboard from '@uppy/dashboard'\nimport Transloadit from '@uppy/aws-s3'\n\nimport '@uppy/core/dist/style.min.css'\nimport '@uppy/dashboard/dist/style.min.css'\n\nconst uppy = new Uppy\n  .use(Dashboard, { inline: true, target: 'body' })\n  .use(AwsS3, { companionUrl: 'http://companion.uppy.io' })\n")),(0,o.kt)("h3",{id:"use-with-aws-s3"},"Use with AWS S3"),(0,o.kt)("p",null,"To use this plugin with S3 we need to setup a bucket with the right permissions and CORS settings."),(0,o.kt)("p",null,"S3 buckets do not allow public uploads for security reasons.\nTo allow Uppy and the browser to upload directly to a bucket, its CORS permissions need to be configured."),(0,o.kt)("p",null,"CORS permissions can be found in the ",(0,o.kt)("a",{parentName:"p",href:"https://console.aws.amazon.com/s3/home"},"S3 Management Console"),".\nClick the bucket that will receive the uploads, then go into the ",(0,o.kt)("inlineCode",{parentName:"p"},"Permissions")," tab and select the ",(0,o.kt)("inlineCode",{parentName:"p"},"CORS configuration")," button.\nA JSON document will be shown that defines the CORS configuration. (AWS used to use XML but now only allow JSON).\nMore information about the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.amazonaws.cn/en_us/AmazonS3/latest/userguide/ManageCorsUsing.html"},"S3 CORS format here"),"."),(0,o.kt)("p",null,"A good practice is to use two CORS rules: one for viewing the uploaded files, and one for uploading files."),(0,o.kt)("p",null,"Depending on which settings were enabled during bucket creation, AWS S3 may have defined a CORS rule that allows public reading already.\nThis rule looks like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "AllowedOrigins": ["*"],\n  "AllowedMethods": ["GET"],\n  "MaxAgeSeconds": 3000\n}\n')),(0,o.kt)("p",null,"If uploaded files should be publically viewable, but a rule like this is not present, add it."),(0,o.kt)("p",null,"A different rule is necessary to allow uploading.\nThis rule should come ",(0,o.kt)("em",{parentName:"p"},"before")," the existing rule, because S3 only uses the first rule that matches the origin of the request."),(0,o.kt)("p",null,"At minimum, the domain from which the uploads will happen must be allow-listed, and the definitions from the earlier rule must be added:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "AllowedOrigins": ["https://my-app.com"],\n  "AllowedMethods": ["GET"],\n  "MaxAgeSeconds": 3000\n}\n')),(0,o.kt)("p",null,"When using Companion, which generates a POST policy document, the following permissions must be granted:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "AllowedMethods": ["POST"],\n  "AllowedHeaders": [\n    "Authorization",\n    "x-amz-date",\n    "x-amz-content-sha256",\n    "content-type"\n  ]\n}\n')),(0,o.kt)("p",null,"When using a presigned upload URL, the following permissions must be granted:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "AllowedMethods": ["PUT"],\n}\n')),(0,o.kt)("p",null,"The final configuration should look something like this (note that it defines two rules in an array ",(0,o.kt)("inlineCode",{parentName:"p"},"[]"),"):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "AllowedOrigins": ["https://my-app.com"],\n    "AllowedMethods": ["GET", "POST"],\n    "MaxAgeSeconds": 3000,\n    "AllowedHeaders": [\n      "Authorization",\n      "x-amz-date",\n      "x-amz-content-sha256",\n      "content-type"\n    ]\n  },\n  {\n    "AllowedOrigins": ["*"],\n    "AllowedMethods": ["GET"],\n    "MaxAgeSeconds": 3000\n  }\n]\n')),(0,o.kt)("p",null,"If you are using an IAM policy to allow access to the S3 bucket, the policy must have at least the ",(0,o.kt)("inlineCode",{parentName:"p"},"s3:PutObject")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"s3:PutObjectAcl")," permissions scoped to the bucket in question."),(0,o.kt)("p",null,"In-depth documentation about CORS rules is available on the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html"},"AWS documentation site"),"."),(0,o.kt)("h3",{id:"use-with-digitalocean-spaces"},"Use with DigitalOcean Spaces"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Checkout the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/transloadit/uppy/tree/main/examples/digitalocean-spaces"},"DigitalOcean Spaces example")," in the Uppy repository\nfor a complete, runnable example.")),(0,o.kt)("p",null,"DigitalOcean Spaces is S3-compatible so you only need to change the endpoint and bucket.\nMake sure you have a ",(0,o.kt)("inlineCode",{parentName:"p"},"key")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"secret"),". If not, refer to \u201c",(0,o.kt)("a",{parentName:"p",href:"https://www.digitalocean.com/community/tutorials/how-to-create-a-digitalocean-space-and-api-key"},"How To Create a DigitalOcean Space and API Key"),"\u201d."),(0,o.kt)("p",null,"When using ",(0,o.kt)("a",{parentName:"p",href:"/docs/companion"},"Companion")," as standalone, you can set these as environment variables:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'export COMPANION_AWS_KEY="xxx"\nexport COMPANION_AWS_SECRET="xxx"\nexport COMPANION_AWS_REGION="us-east-1"\nexport COMPANION_AWS_ENDPOINT="https://{region}.digitaloceanspaces.com"\nexport COMPANION_AWS_BUCKET="my-space-name"\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"{region}")," string will be replaced by the contents of the ",(0,o.kt)("inlineCode",{parentName:"p"},"COMPANION_AWS_REGION")," environment variable."),(0,o.kt)("p",null,"When using ",(0,o.kt)("a",{parentName:"p",href:"/docs/companion"},"Companion")," as an Express integration, configure the ",(0,o.kt)("inlineCode",{parentName:"p"},"s3")," options:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const options = {\n  s3: {\n    key: 'xxx',\n    secret: 'xxx',\n    bucket: 'my-space-name',\n    region: 'us-east-1',\n    endpoint: 'https://{region}.digitaloceanspaces.com',\n  }\n}\n")),(0,o.kt)("h3",{id:"use-with-google-cloud-storage"},"Use with Google Cloud Storage"),(0,o.kt)("p",null,"For the ",(0,o.kt)("inlineCode",{parentName:"p"},"@uppy/aws-s3")," plugin to be able to upload to a GCS bucket, it needs the Interoperability setting enabled.\nYou can enable the Interoperability setting and ",(0,o.kt)("a",{parentName:"p",href:"https://cloud.google.com/storage/docs/migrating#keys"},"generate interoperable storage access keys"),"\nby going to ",(0,o.kt)("a",{parentName:"p",href:"https://console.cloud.google.com/storage"},"Google Cloud Storage")," \xbb Settings \xbb Interoperability.\nThen set the environment variables for Companion like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'export COMPANION_AWS_ENDPOINT="https://storage.googleapis.com"\nexport COMPANION_AWS_BUCKET="YOUR-GCS-BUCKET-NAME"\nexport COMPANION_AWS_KEY="GOOGxxxxxxxxx" # The Access Key\nexport COMPANION_AWS_SECRET="YOUR-GCS-SECRET" # The Secret\n')),(0,o.kt)("p",null,"You do not need to configure the region with GCS."),(0,o.kt)("p",null,"You also need to configure CORS with their HTTP API.\nIf you haven\u2019t done this already, see ",(0,o.kt)("a",{parentName:"p",href:"https://cloud.google.com/storage/docs/configuring-cors#Configuring-CORS-on-a-Bucket"},"Configuring CORS on a Bucket")," in the GCS documentation,\nor follow the steps below to do it using Google\u2019s API playground."),(0,o.kt)("p",null,"The JSON format consists of an array of CORS configuration objects.\nFor instance:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "cors": [\n    {\n      "origin": ["https://my-app.com"],\n      "method": ["GET", "POST"],\n      "maxAgeSeconds": 3000\n    },\n    {\n      "origin": ["*"],\n      "method": ["GET"],\n      "maxAgeSeconds": 3000\n    }\n  ]\n}\n')),(0,o.kt)("p",null,"When using presigned ",(0,o.kt)("inlineCode",{parentName:"p"},"PUT")," uploads, replace the ",(0,o.kt)("inlineCode",{parentName:"p"},'"POST"')," method by ",(0,o.kt)("inlineCode",{parentName:"p"},'"PUT"')," in the first entry."),(0,o.kt)("p",null,"If you have the ",(0,o.kt)("a",{parentName:"p",href:"https://cloud.google.com/storage/docs/gsutil"},"gsutil")," command-line tool,\nyou can apply this configuration using the ",(0,o.kt)("a",{parentName:"p",href:"https://cloud.google.com/storage/docs/configuring-cors#configure-cors-bucket"},"gsutil cors")," command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gsutil cors set THAT-FILE.json gs://BUCKET-NAME\n")),(0,o.kt)("p",null,"Otherwise, you can manually apply it through the OAuth playground:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Get a temporary API token from the ",(0,o.kt)("a",{parentName:"li",href:"https://developers.google.com/oauthplayground/"},"Google OAuth2.0 playground")),(0,o.kt)("li",{parentName:"ol"},"Select the ",(0,o.kt)("inlineCode",{parentName:"li"},"Cloud Storage JSON API v1")," \xbb ",(0,o.kt)("inlineCode",{parentName:"li"},"devstorage.full_control")," scope"),(0,o.kt)("li",{parentName:"ol"},"Press ",(0,o.kt)("inlineCode",{parentName:"li"},"Authorize APIs")," and allow access"),(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("inlineCode",{parentName:"li"},"Step 3 - Configure request to API")),(0,o.kt)("li",{parentName:"ol"},"Configure it as follows:",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"HTTP Method: PATCH"),(0,o.kt)("li",{parentName:"ol"},"Request URI: ",(0,o.kt)("inlineCode",{parentName:"li"},"https://www.googleapis.com/storage/v1/b/YOUR_BUCKET_NAME")),(0,o.kt)("li",{parentName:"ol"},"Content-Type: application/json (should be the default)"),(0,o.kt)("li",{parentName:"ol"},"Press ",(0,o.kt)("inlineCode",{parentName:"li"},"Enter request body")," and input your CORS configuration"))),(0,o.kt)("li",{parentName:"ol"},"Press ",(0,o.kt)("inlineCode",{parentName:"li"},"Send the request"),".")),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@uppy/aws-s3")," plugin has the following configurable options:"),(0,o.kt)("h4",{id:"id"},(0,o.kt)("inlineCode",{parentName:"h4"},"id")),(0,o.kt)("p",null,"A unique identifier for this plugin (",(0,o.kt)("inlineCode",{parentName:"p"},"string"),", default: ",(0,o.kt)("inlineCode",{parentName:"p"},"'AwsS3'"),")."),(0,o.kt)("h4",{id:"companionurl"},(0,o.kt)("inlineCode",{parentName:"h4"},"companionUrl")),(0,o.kt)("p",null,"Companion instance to use for signing S3 uploads (",(0,o.kt)("inlineCode",{parentName:"p"},"string"),", default: ",(0,o.kt)("inlineCode",{parentName:"p"},"null"),")."),(0,o.kt)("h4",{id:"companionheaders"},(0,o.kt)("inlineCode",{parentName:"h4"},"companionHeaders")),(0,o.kt)("p",null,"Custom headers that should be sent along to ",(0,o.kt)("a",{parentName:"p",href:"/docs/companion"},"Companion")," on every request (",(0,o.kt)("inlineCode",{parentName:"p"},"Object"),", default: ",(0,o.kt)("inlineCode",{parentName:"p"},"{}"),")."),(0,o.kt)("h4",{id:"allowedmetafields"},(0,o.kt)("inlineCode",{parentName:"h4"},"allowedMetaFields")),(0,o.kt)("p",null,"Pass an array of field names to limit the metadata fields that will be added to upload as query parameters (",(0,o.kt)("inlineCode",{parentName:"p"},"array"),", default: ",(0,o.kt)("inlineCode",{parentName:"p"},"null"),")."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Set this to ",(0,o.kt)("inlineCode",{parentName:"li"},"['name']")," to only send the ",(0,o.kt)("inlineCode",{parentName:"li"},"name")," field."),(0,o.kt)("li",{parentName:"ul"},"Set this to ",(0,o.kt)("inlineCode",{parentName:"li"},"null")," (the default) to send ",(0,o.kt)("em",{parentName:"li"},"all")," metadata fields."),(0,o.kt)("li",{parentName:"ul"},"Set this to an empty array ",(0,o.kt)("inlineCode",{parentName:"li"},"[]")," to not send any fields.")),(0,o.kt)("h4",{id:"getuploadparametersfile"},(0,o.kt)("inlineCode",{parentName:"h4"},"getUploadParameters(file)")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"When using ",(0,o.kt)("a",{parentName:"p",href:"/docs/companion"},"Companion")," to sign S3 uploads, do not define this option.")),(0,o.kt)("p",null,"A function that returns upload parameters for a file (",(0,o.kt)("inlineCode",{parentName:"p"},"Promise<Object>"),", default: ",(0,o.kt)("inlineCode",{parentName:"p"},"null"),")."),(0,o.kt)("p",null,"Parameters should be returned as an object, or a Promise for an object, with keys ",(0,o.kt)("inlineCode",{parentName:"p"},"{ method, url, fields, headers }"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"method")," field is the HTTP method to be used for the upload.\nThis should be one of either ",(0,o.kt)("inlineCode",{parentName:"li"},"PUT")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"POST"),", depending on the type of upload used."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"url")," field is the URL to which the upload request will be sent.\nWhen using a presigned PUT upload, this should be the URL to the S3 object with signing parameters included in the query string.\nWhen using a POST upload with a policy document, this should be the root URL of the bucket."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"fields")," field is an object with form fields to send along with the upload request.\nFor presigned PUT uploads, this should be left empty."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"headers")," field is an object with request headers to send along with the upload request.\nWhen using a presigned PUT upload, it\u2019s a good idea to provide ",(0,o.kt)("inlineCode",{parentName:"li"},"headers['content-type']"),". That will make sure that the request uses the same content-type that was used to generate the signature. Without it, the browser may decide on a different content-type instead, causing S3 to reject the upload.")),(0,o.kt)("h4",{id:"timeout"},(0,o.kt)("inlineCode",{parentName:"h4"},"timeout")),(0,o.kt)("p",null,"When no upload progress events have been received for this amount of milliseconds, assume the connection has an issue and abort the upload (",(0,o.kt)("inlineCode",{parentName:"p"},"number"),", default: ",(0,o.kt)("inlineCode",{parentName:"p"},"30_000"),")."),(0,o.kt)("p",null,"This is passed through to ",(0,o.kt)("a",{parentName:"p",href:"/docs/xhrupload#timeout-30-1000"},"XHRUpload"),"; see its documentation page for details.\nSet to ",(0,o.kt)("inlineCode",{parentName:"p"},"0")," to disable this check."),(0,o.kt)("h4",{id:"limit"},(0,o.kt)("inlineCode",{parentName:"h4"},"limit")),(0,o.kt)("p",null,"Limit the amount of uploads going on at the same time (",(0,o.kt)("inlineCode",{parentName:"p"},"number"),", default: ",(0,o.kt)("inlineCode",{parentName:"p"},"5"),")."),(0,o.kt)("p",null,"Setting this to ",(0,o.kt)("inlineCode",{parentName:"p"},"0")," means no limit on concurrent uploads, but we recommend a value between ",(0,o.kt)("inlineCode",{parentName:"p"},"5")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"20"),"."),(0,o.kt)("h4",{id:"getresponsedataresponsetext-response"},(0,o.kt)("inlineCode",{parentName:"h4"},"getResponseData(responseText, response)")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"This is an advanced option intended for use with ",(0,o.kt)("em",{parentName:"p"},"almost")," S3-compatible storage solutions.")),(0,o.kt)("p",null,"Customize response handling once an upload is completed.\nThis passes the function through to @uppy/xhr-upload,\nsee its ",(0,o.kt)("a",{parentName:"p",href:"https://uppy.io/docs/xhr-upload/#getResponseData-responseText-response"},"documentation")," for API details."),(0,o.kt)("p",null,"This option is useful when uploading to an S3-like service that doesn\u2019t reply with an XML document,\nbut with something else such as JSON."),(0,o.kt)("h4",{id:"locale-"},(0,o.kt)("inlineCode",{parentName:"h4"},"locale: {}")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"export default  {\n  strings: {\n    timedOut: 'Upload stalled for %{seconds} seconds, aborting.',\n  },\n}\n")),(0,o.kt)("h2",{id:"frequently-asked-questions"},"Frequently Asked Questions"),(0,o.kt)("h3",{id:"how-can-i-generate-a-presigned-url-server-side"},"How can I generate a presigned URL server-side?"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"getUploadParameters")," function can return a Promise, so upload parameters can be prepared server-side.\nThat way, no private keys to the S3 bucket need to be shared on the client.\nFor example, there could be a PHP server endpoint that prepares a presigned URL for a file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"uppy.use(AwsS3, {\n  getUploadParameters (file) {\n    // Send a request to our PHP signing endpoint.\n    return fetch('/s3-sign.php', {\n      method: 'post',\n      // Send and receive JSON.\n      headers: {\n        accept: 'application/json',\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        filename: file.name,\n        contentType: file.type,\n      }),\n    }).then((response) => {\n      // Parse the JSON response.\n      return response.json()\n    }).then((data) => {\n      // Return an object in the correct shape.\n      return {\n        method: data.method,\n        url: data.url,\n        fields: data.fields,\n        // Provide content type header required by S3\n        headers: {\n          'Content-Type': file.type,\n        },\n      }\n    })\n  },\n})\n")),(0,o.kt)("p",null,"See the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/transloadit/uppy/tree/main/examples/aws-presigned-url"},"aws-presigned-url example in the uppy repository")," for a small example that implements both the server-side and the client-side."),(0,o.kt)("h3",{id:"how-can-i-retrieve-the-presigned-parameters-of-the-uploaded-file"},"How can I retrieve the presigned parameters of the uploaded file?"),(0,o.kt)("p",null,"Once the file is uploaded, it\u2019s possible to retrieve the parameters that were\ngenerated in ",(0,o.kt)("inlineCode",{parentName:"p"},"getUploadParameters(file)")," via the ",(0,o.kt)("inlineCode",{parentName:"p"},"file.meta")," field:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"uppy.on('upload-success', (file, data) => {\n  const s3Key = file.meta['key'] // the S3 object key of the uploaded file\n})\n")),(0,o.kt)("h3",{id:"what-makes-a-provider-s3-compatible"},"What makes a provider S3 compatible?"),(0,o.kt)("p",null,"..."))}h.isMDXComponent=!0}}]);