"use strict";(self.webpackChunkuppy_io=self.webpackChunkuppy_io||[]).push([[5221],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,g=d["".concat(l,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2882:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={title:"Uppy 0.29: separate Core and Plugin styles, React Native in tus-js-client",date:new Date("2018-12-11T00:00:00.000Z"),authors:["arturi"],image:"https://uppy.io/img/blog/0.29/uppy-core-plugins-separate-styles.jpg",published:!0,slug:"2018/12/0.29"},i=void 0,s={permalink:"/uppy.io/pr-preview/pr-79/blog/2018/12/0.29",editUrl:"https://github.com/transloadit/uppy.io/tree/main/blog/2018-12-0.29.md",source:"@site/blog/2018-12-0.29.md",title:"Uppy 0.29: separate Core and Plugin styles, React Native in tus-js-client",description:"0.29 brings bug fixes and improvements, while we are busy working on Uppy",date:"2018-12-11T00:00:00.000Z",formattedDate:"December 11, 2018",tags:[],readingTime:3.73,hasTruncateMarker:!0,authors:[{email:"artur@transloadit.com",name:"Artur Paikin",id:"artur",tagline:"Developer",imageURL:"https://github.com/arturi.png",key:"arturi"}],frontMatter:{title:"Uppy 0.29: separate Core and Plugin styles, React Native in tus-js-client",date:"2018-12-11T00:00:00.000Z",authors:["arturi"],image:"https://uppy.io/img/blog/0.29/uppy-core-plugins-separate-styles.jpg",published:!0,slug:"2018/12/0.29"},prevItem:{title:"Uppy 0.30: Introducing Robodog",permalink:"/uppy.io/pr-preview/pr-79/blog/2019/03/0.30"},nextItem:{title:"Uppy 0.28: A look behind the scenes",permalink:"/uppy.io/pr-preview/pr-79/blog/2018/10/0.28"}},l={authorsImageUrls:[void 0]},p=[{value:"Separate Core and Plugin styles",id:"separate-core-and-plugin-styles",level:2},{value:"Using File Sizes For Progress Calculation",id:"using-file-sizes-for-progress-calculation",level:2},{value:"<code>responseType</code> For XHR Upload",id:"responsetype-for-xhr-upload",level:2},{value:"Misc Changes",id:"misc-changes",level:2}],u={toc:p},d="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("img",{src:"/img/blog/0.29/uppy-core-plugins-separate-styles.jpg"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"0.29")," brings bug fixes and improvements, while we are busy working on Uppy\nReact Native support (which first had to\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/tus/tus-js-client#react-native-support"},"land in the js client for our resumable file upload protocol: tus.io"),")\nand a Preset (still debating the name) which will make it easier to leverage\nTransloadit's encoding platform, and offer a smooth migration path for users not\nyet on Uppy. The highlights of this release are: separating Core and Plugin\nstyles, more accurate progress reporting by factoring in sizes across files,\nadding a ",(0,a.kt)("inlineCode",{parentName:"p"},"responseType")," option for XHR Upload, and fixing visual Webcam bugs."),(0,a.kt)("h2",{id:"separate-core-and-plugin-styles"},"Separate Core and Plugin styles"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u26a0\ufe0f breaking")),(0,a.kt)("p",null,"When installing ",(0,a.kt)("inlineCode",{parentName:"p"},"uppy")," and Plugins from npm, you had to include their styles.\nPrior to this release, you only had to include the Plugin\u2019s CSS, say, for\n",(0,a.kt)("inlineCode",{parentName:"p"},"@uppy/webcam"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import Uppy from '@uppy/core';\nimport Webcam from '@uppy/webcam';\nimport '@uppy/webcam/dist/style.css';\n")),(0,a.kt)("p",null,"Each plugin's file contained the Core styles. If you added multiple plugins, the\ncore styles ended up being duplicated. This bloated file sizes and could even\nbreak styles entirely because of CSS's precedence rules."),(0,a.kt)("p",null,"Now, you have to include \u201cgeneral\u201d styles from ",(0,a.kt)("inlineCode",{parentName:"p"},"@uppy/core")," as well:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import Uppy from '@uppy/core';\nimport Webcam from '@uppy/webcam';\nimport '@uppy/core/dist/style.css'; // <-- add this separately and one time only\nimport '@uppy/webcam/dist/style.css';\n")),(0,a.kt)("p",null,"Thus, the Core styles are only included once. ",(0,a.kt)("inlineCode",{parentName:"p"},"@uppy/core")," styles must be\nincluded before Plugin styles."),(0,a.kt)("p",null,"Please see the ",(0,a.kt)("a",{parentName:"p",href:"https://uppy.io/docs/plugins/"},"documentation")," for the Plugin you\nare using to find out whether it requires a CSS file to work. Generally\nspeaking, UI plugins, such as the Dashboard, Webcam and Status Bar, need a CSS\nfile, while utility plugins, such as Tus or XHR Upload, don\u2019t."),(0,a.kt)("p",null,"\u26a0\ufe0f Important things to remember:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Dashboard is a universal UI that comes with the Status Bar and Informer\nPlugins built in, and as such, Dashboard styles already come with the\nInformer and Status Bar styles."),(0,a.kt)("li",{parentName:"ol"},"Dashboard also ships with \u201cRemote Provider\u201d styles \u2014 you don\u2019t need to\ninclude anything besides ",(0,a.kt)("inlineCode",{parentName:"li"},"@uppy/dashboard/dist/style.css")," for Google Drive,\nInstagram and Dropbox to work. However, the Url and Webcam plugins still have\nto be included manually. Here\u2019s an example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import Uppy from '@uppy/core';\nimport Dashboard from '@uppy/webcam';\nimport GoogleDrive from '@uppy/google-drive';\nimport Webcam from '@uppy/webcam';\nimport Url from '@uppy/url';\n\n// Core and Dashboard styles, then Webcam and Url, but not for GoogleDrive \u2014\n// those come with Dashboard\nimport '@uppy/core/dist/style.css';\nimport '@uppy/dashboard/dist/style.css';\nimport '@uppy/webcam/dist/style.css';\nimport '@uppy/url/dist/style.css';\n")),(0,a.kt)("h2",{id:"using-file-sizes-for-progress-calculation"},"Using File Sizes For Progress Calculation"),(0,a.kt)("p",null,"When possible, file sizes are now used for calculating the total progress.\nBefore, we\u2019ve used uploaded percentage for each file. Meaning that if you were\nuploading four files \u2014 and three small were already uploaded, while one very\nlarge file was still in progress \u2014 Uppy might still display progress as being\n90%. Long story short, Uppy now has a more accurate progress bar \ud83d\ude80"),(0,a.kt)("p",null,"Some internal details, if you are interested:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"If there are files without sizes, the average size of all other files is\nassumed for the unsized files."),(0,a.kt)("li",{parentName:"ol"},"If there are no files with sizes, the percentage is just based on the\npercentages of the unsized files.")),(0,a.kt)("img",{src:"/img/blog/0.29/progress-size-calculation.jpg"}),(0,a.kt)("h2",{id:"responsetype-for-xhr-upload"},(0,a.kt)("inlineCode",{parentName:"h2"},"responseType")," For XHR Upload"),(0,a.kt)("p",null,"When using XHR Upload, you can now configure the XMLHttpRequest ",(0,a.kt)("inlineCode",{parentName:"p"},".responseType"),"\nvalue. This allows the S3 Plugin to tell Firefox not to log XML errors when\ngetting empty responses, so it finally fixes the spurious warnings that were\ncaused by this, see ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/transloadit/uppy/issues/518"},"#518"),"."),(0,a.kt)("p",null,"Because AwsS3 now sets ",(0,a.kt)("inlineCode",{parentName:"p"},"responseType"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"'text'"),", we can no longer use the\n",(0,a.kt)("inlineCode",{parentName:"p"},"responseXML")," property. We already did text based parsing for successful\nresponses, and will now do the same for error responses."),(0,a.kt)("h2",{id:"misc-changes"},"Misc Changes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"@uppy/core: Don't pass removed file IDs to next upload step, fixes (#1148 /\n@goto-bus-stop)"),(0,a.kt)("li",{parentName:"ul"},"@uppy/core: Fixed getFileType() when passed a file with an uppercase extension\n(#1169 / @jderrough)"),(0,a.kt)("li",{parentName:"ul"},"@uppy/companion: Use ",(0,a.kt)("inlineCode",{parentName:"li"},"createCipheriv")," instead of deprecated ",(0,a.kt)("inlineCode",{parentName:"li"},"createCipher"),"\n(#1149 / @goto-bus-stop)"),(0,a.kt)("li",{parentName:"ul"},"@uppy/companion: Store Provider instances on ",(0,a.kt)("inlineCode",{parentName:"li"},"this.provider")," instead of\n",(0,a.kt)("inlineCode",{parentName:"li"},"this[this.id]")," (@goto-bus-stop / #1174)"),(0,a.kt)("li",{parentName:"ul"},"@uppy/companion: Pin grant to known stable version (@ifedapoolarewaju / #1165)"),(0,a.kt)("li",{parentName:"ul"},"@uppy/companion: Fix \u2014 socket does not handle server.path option (#1142 /\n@tranvansang)"),(0,a.kt)("li",{parentName:"ul"},"@uppy/webcam: Fix a bug with Webcam video overflowing its container\n(68730f8a1bf731898d46883e00fed937d3ab54ab / @arturi)"),(0,a.kt)("li",{parentName:"ul"},"docs: Add ",(0,a.kt)("inlineCode",{parentName:"li"},"triggerUploadOnSubmit")," to Form docs, add docs about options of\nhiding upload/pause/resume/cancel buttons; talk about bundler-less polyfill\nuse (@goto-bus-stop, @arturi)"),(0,a.kt)("li",{parentName:"ul"},"@uppy/react: Allow Dashboard props width and height to accept a string for\n100% (#1129 / craigcbrunner)")),(0,a.kt)("p",null,"See the\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#0290"},"full changelog (0.29)"),"\nfor more details."))}c.isMDXComponent=!0}}]);